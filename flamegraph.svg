<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1510" onload="init(evt)" viewBox="0 0 1200 1510" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1510" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1493.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1493.00"> </text><svg id="frames" x="10" width="1180" total_samples="3709"><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.19%)</title><rect x="0.0000%" y="1429" width="0.1887%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="1439.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.03%)</title><rect x="0.1887%" y="1429" width="0.0270%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="1"/><text x="0.4387%" y="1439.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.03%)</title><rect x="0.1887%" y="1413" width="0.0270%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="1"/><text x="0.4387%" y="1423.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (2 samples, 0.05%)</title><rect x="0.2157%" y="1429" width="0.0539%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="2"/><text x="0.4657%" y="1439.50"></text></g><g><title>rmp::encode::uint::write_pfix (16 samples, 0.43%)</title><rect x="1.8064%" y="1381" width="0.4314%" height="15" fill="rgb(208,68,35)" fg:x="67" fg:w="16"/><text x="2.0564%" y="1391.50"></text></g><g><title>rmp::encode::uint::write_uint (82 samples, 2.21%)</title><rect x="0.2696%" y="1413" width="2.2108%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="82"/><text x="0.5196%" y="1423.50">r..</text></g><g><title>rmp::encode::uint::write_uint8 (25 samples, 0.67%)</title><rect x="1.8064%" y="1397" width="0.6740%" height="15" fill="rgb(207,160,47)" fg:x="67" fg:w="25"/><text x="2.0564%" y="1407.50"></text></g><g><title>rmp::encode::uint::write_u8 (9 samples, 0.24%)</title><rect x="2.2378%" y="1381" width="0.2427%" height="15" fill="rgb(228,23,34)" fg:x="83" fg:w="9"/><text x="2.4878%" y="1391.50"></text></g><g><title>rmp::encode::RmpWrite::write_data_u8 (1 samples, 0.03%)</title><rect x="2.4535%" y="1365" width="0.0270%" height="15" fill="rgb(218,30,26)" fg:x="91" fg:w="1"/><text x="2.7035%" y="1375.50"></text></g><g><title>rmp::encode::RmpWrite::write_u8 (1 samples, 0.03%)</title><rect x="2.4535%" y="1349" width="0.0270%" height="15" fill="rgb(220,122,19)" fg:x="91" fg:w="1"/><text x="2.7035%" y="1359.50"></text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (1 samples, 0.03%)</title><rect x="2.4535%" y="1333" width="0.0270%" height="15" fill="rgb(250,228,42)" fg:x="91" fg:w="1"/><text x="2.7035%" y="1343.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.03%)</title><rect x="2.4535%" y="1317" width="0.0270%" height="15" fill="rgb(240,193,28)" fg:x="91" fg:w="1"/><text x="2.7035%" y="1327.50"></text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="2.4535%" y="1301" width="0.0270%" height="15" fill="rgb(216,20,37)" fg:x="91" fg:w="1"/><text x="2.7035%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="2.4535%" y="1285" width="0.0270%" height="15" fill="rgb(206,188,39)" fg:x="91" fg:w="1"/><text x="2.7035%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="2.4535%" y="1269" width="0.0270%" height="15" fill="rgb(217,207,13)" fg:x="91" fg:w="1"/><text x="2.7035%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="2.4535%" y="1253" width="0.0270%" height="15" fill="rgb(231,73,38)" fg:x="91" fg:w="1"/><text x="2.7035%" y="1263.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="2.4535%" y="1237" width="0.0270%" height="15" fill="rgb(225,20,46)" fg:x="91" fg:w="1"/><text x="2.7035%" y="1247.50"></text></g><g><title>rmp::encode::write_marker (61 samples, 1.64%)</title><rect x="2.4805%" y="1413" width="1.6446%" height="15" fill="rgb(210,31,41)" fg:x="92" fg:w="61"/><text x="2.7305%" y="1423.50"></text></g><g><title>[[heap]] (144 samples, 3.88%)</title><rect x="0.2696%" y="1429" width="3.8824%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="144"/><text x="0.5196%" y="1439.50">[[he..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (1 samples, 0.03%)</title><rect x="4.1251%" y="1413" width="0.0270%" height="15" fill="rgb(226,26,5)" fg:x="153" fg:w="1"/><text x="4.3751%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.08%)</title><rect x="4.1521%" y="1413" width="0.0809%" height="15" fill="rgb(249,33,26)" fg:x="154" fg:w="3"/><text x="4.4021%" y="1423.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Debug&gt;::fmt (2 samples, 0.05%)</title><rect x="4.2329%" y="1413" width="0.0539%" height="15" fill="rgb(235,183,28)" fg:x="157" fg:w="2"/><text x="4.4829%" y="1423.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="4.2869%" y="1413" width="0.0270%" height="15" fill="rgb(221,5,38)" fg:x="159" fg:w="1"/><text x="4.5369%" y="1423.50"></text></g><g><title>nu_ansi_term::display::AnsiGenericString&lt;S&gt;::write_to_any (1 samples, 0.03%)</title><rect x="4.2869%" y="1397" width="0.0270%" height="15" fill="rgb(247,18,42)" fg:x="159" fg:w="1"/><text x="4.5369%" y="1407.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_str (1 samples, 0.03%)</title><rect x="4.2869%" y="1381" width="0.0270%" height="15" fill="rgb(241,131,45)" fg:x="159" fg:w="1"/><text x="4.5369%" y="1391.50"></text></g><g><title>&lt;rmp_serde::encode::MaybeUnknownLengthCompound&lt;W,C&gt; as serde::ser::SerializeSeq&gt;::end (2 samples, 0.05%)</title><rect x="4.3138%" y="1413" width="0.0539%" height="15" fill="rgb(249,31,29)" fg:x="160" fg:w="2"/><text x="4.5638%" y="1423.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="4.3678%" y="1413" width="0.0270%" height="15" fill="rgb(225,111,53)" fg:x="162" fg:w="1"/><text x="4.6178%" y="1423.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="4.3947%" y="1413" width="0.0270%" height="15" fill="rgb(238,160,17)" fg:x="163" fg:w="1"/><text x="4.6447%" y="1423.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="4.4217%" y="1413" width="0.0270%" height="15" fill="rgb(214,148,48)" fg:x="164" fg:w="1"/><text x="4.6717%" y="1423.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.08%)</title><rect x="4.4486%" y="1413" width="0.0809%" height="15" fill="rgb(232,36,49)" fg:x="165" fg:w="3"/><text x="4.6986%" y="1423.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (2 samples, 0.05%)</title><rect x="4.4756%" y="1397" width="0.0539%" height="15" fill="rgb(209,103,24)" fg:x="166" fg:w="2"/><text x="4.7256%" y="1407.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (1 samples, 0.03%)</title><rect x="4.5295%" y="1413" width="0.0270%" height="15" fill="rgb(229,88,8)" fg:x="168" fg:w="1"/><text x="4.7795%" y="1423.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="4.5565%" y="1141" width="0.0270%" height="15" fill="rgb(213,181,19)" fg:x="169" fg:w="1"/><text x="4.8065%" y="1151.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (2 samples, 0.05%)</title><rect x="4.5565%" y="1413" width="0.0539%" height="15" fill="rgb(254,191,54)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.05%)</title><rect x="4.5565%" y="1397" width="0.0539%" height="15" fill="rgb(241,83,37)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.05%)</title><rect x="4.5565%" y="1381" width="0.0539%" height="15" fill="rgb(233,36,39)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1391.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (2 samples, 0.05%)</title><rect x="4.5565%" y="1365" width="0.0539%" height="15" fill="rgb(226,3,54)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1375.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="4.5565%" y="1349" width="0.0539%" height="15" fill="rgb(245,192,40)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1359.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="4.5565%" y="1333" width="0.0539%" height="15" fill="rgb(238,167,29)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1343.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="4.5565%" y="1317" width="0.0539%" height="15" fill="rgb(232,182,51)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1327.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="4.5565%" y="1301" width="0.0539%" height="15" fill="rgb(231,60,39)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1311.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="4.5565%" y="1285" width="0.0539%" height="15" fill="rgb(208,69,12)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1295.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="4.5565%" y="1269" width="0.0539%" height="15" fill="rgb(235,93,37)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1279.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2 samples, 0.05%)</title><rect x="4.5565%" y="1253" width="0.0539%" height="15" fill="rgb(213,116,39)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="4.5565%" y="1237" width="0.0539%" height="15" fill="rgb(222,207,29)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1247.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="4.5565%" y="1221" width="0.0539%" height="15" fill="rgb(206,96,30)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1231.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.05%)</title><rect x="4.5565%" y="1205" width="0.0539%" height="15" fill="rgb(218,138,4)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1215.50"></text></g><g><title>&lt;std::sys::pal::unix::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.05%)</title><rect x="4.5565%" y="1189" width="0.0539%" height="15" fill="rgb(250,191,14)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1199.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (2 samples, 0.05%)</title><rect x="4.5565%" y="1173" width="0.0539%" height="15" fill="rgb(239,60,40)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1183.50"></text></g><g><title>write (2 samples, 0.05%)</title><rect x="4.5565%" y="1157" width="0.0539%" height="15" fill="rgb(206,27,48)" fg:x="169" fg:w="2"/><text x="4.8065%" y="1167.50"></text></g><g><title>error_entry (1 samples, 0.03%)</title><rect x="4.5834%" y="1141" width="0.0270%" height="15" fill="rgb(225,35,8)" fg:x="170" fg:w="1"/><text x="4.8334%" y="1151.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.03%)</title><rect x="4.6104%" y="1413" width="0.0270%" height="15" fill="rgb(250,213,24)" fg:x="171" fg:w="1"/><text x="4.8604%" y="1423.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (1 samples, 0.03%)</title><rect x="4.6374%" y="1413" width="0.0270%" height="15" fill="rgb(247,123,22)" fg:x="172" fg:w="1"/><text x="4.8874%" y="1423.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="4.6643%" y="1413" width="0.0539%" height="15" fill="rgb(231,138,38)" fg:x="173" fg:w="2"/><text x="4.9143%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="4.7183%" y="1413" width="0.0270%" height="15" fill="rgb(231,145,46)" fg:x="175" fg:w="1"/><text x="4.9683%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="4.7452%" y="1413" width="0.0539%" height="15" fill="rgb(251,118,11)" fg:x="176" fg:w="2"/><text x="4.9952%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="4.7722%" y="1397" width="0.0270%" height="15" fill="rgb(217,147,25)" fg:x="177" fg:w="1"/><text x="5.0222%" y="1407.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="4.7722%" y="1381" width="0.0270%" height="15" fill="rgb(247,81,37)" fg:x="177" fg:w="1"/><text x="5.0222%" y="1391.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="4.7722%" y="1365" width="0.0270%" height="15" fill="rgb(209,12,38)" fg:x="177" fg:w="1"/><text x="5.0222%" y="1375.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.03%)</title><rect x="4.7991%" y="1413" width="0.0270%" height="15" fill="rgb(227,1,9)" fg:x="178" fg:w="1"/><text x="5.0491%" y="1423.50"></text></g><g><title>core::fmt::Formatter::pad_formatted_parts (1 samples, 0.03%)</title><rect x="4.8261%" y="1413" width="0.0270%" height="15" fill="rgb(248,47,43)" fg:x="179" fg:w="1"/><text x="5.0761%" y="1423.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="4.8531%" y="1413" width="0.0270%" height="15" fill="rgb(221,10,30)" fg:x="180" fg:w="1"/><text x="5.1031%" y="1423.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.03%)</title><rect x="4.8800%" y="1413" width="0.0270%" height="15" fill="rgb(210,229,1)" fg:x="181" fg:w="1"/><text x="5.1300%" y="1423.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (2 samples, 0.05%)</title><rect x="4.9070%" y="1413" width="0.0539%" height="15" fill="rgb(222,148,37)" fg:x="182" fg:w="2"/><text x="5.1570%" y="1423.50"></text></g><g><title>core::fmt::write (3 samples, 0.08%)</title><rect x="4.9609%" y="1413" width="0.0809%" height="15" fill="rgb(234,67,33)" fg:x="184" fg:w="3"/><text x="5.2109%" y="1423.50"></text></g><g><title>core::num::flt2dec::digits_to_dec_str (1 samples, 0.03%)</title><rect x="5.0418%" y="1413" width="0.0270%" height="15" fill="rgb(247,98,35)" fg:x="187" fg:w="1"/><text x="5.2918%" y="1423.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (1 samples, 0.03%)</title><rect x="5.0688%" y="1413" width="0.0270%" height="15" fill="rgb(247,138,52)" fg:x="188" fg:w="1"/><text x="5.3188%" y="1423.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (1 samples, 0.03%)</title><rect x="5.0957%" y="1413" width="0.0270%" height="15" fill="rgb(213,79,30)" fg:x="189" fg:w="1"/><text x="5.3457%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;kvlr::connection::ConnectionFrameSender::send_frame::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="5.1227%" y="1413" width="0.0270%" height="15" fill="rgb(246,177,23)" fg:x="190" fg:w="1"/><text x="5.3727%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;(kvlr::connection::frame::Frame,tokio::sync::oneshot::Sender&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;)&gt;::send::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="5.1496%" y="1413" width="0.0270%" height="15" fill="rgb(230,62,27)" fg:x="191" fg:w="1"/><text x="5.3996%" y="1423.50"></text></g><g><title>core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="5.1766%" y="1413" width="0.0270%" height="15" fill="rgb(216,154,8)" fg:x="192" fg:w="1"/><text x="5.4266%" y="1423.50"></text></g><g><title>kvlr::streaming::client::_::&lt;impl serde::ser::Serialize for kvlr::streaming::client::Stream&gt;::serialize (1 samples, 0.03%)</title><rect x="5.2036%" y="1413" width="0.0270%" height="15" fill="rgb(244,35,45)" fg:x="193" fg:w="1"/><text x="5.4536%" y="1423.50"></text></g><g><title>rmp::encode::uint::write_pfix (16 samples, 0.43%)</title><rect x="6.2011%" y="1381" width="0.4314%" height="15" fill="rgb(251,115,12)" fg:x="230" fg:w="16"/><text x="6.4511%" y="1391.50"></text></g><g><title>rmp::encode::uint::write_uint (62 samples, 1.67%)</title><rect x="5.2305%" y="1413" width="1.6716%" height="15" fill="rgb(240,54,50)" fg:x="194" fg:w="62"/><text x="5.4805%" y="1423.50"></text></g><g><title>rmp::encode::uint::write_uint8 (26 samples, 0.70%)</title><rect x="6.2011%" y="1397" width="0.7010%" height="15" fill="rgb(233,84,52)" fg:x="230" fg:w="26"/><text x="6.4511%" y="1407.50"></text></g><g><title>rmp::encode::uint::write_u8 (10 samples, 0.27%)</title><rect x="6.6325%" y="1381" width="0.2696%" height="15" fill="rgb(207,117,47)" fg:x="246" fg:w="10"/><text x="6.8825%" y="1391.50"></text></g><g><title>rmp::encode::write_array_len (1 samples, 0.03%)</title><rect x="6.9021%" y="1413" width="0.0270%" height="15" fill="rgb(249,43,39)" fg:x="256" fg:w="1"/><text x="7.1521%" y="1423.50"></text></g><g><title>rmp::encode::write_marker (57 samples, 1.54%)</title><rect x="6.9291%" y="1413" width="1.5368%" height="15" fill="rgb(209,38,44)" fg:x="257" fg:w="57"/><text x="7.1791%" y="1423.50"></text></g><g><title>rmp::encode::RmpWrite::write_u8 (1 samples, 0.03%)</title><rect x="8.4389%" y="1397" width="0.0270%" height="15" fill="rgb(236,212,23)" fg:x="313" fg:w="1"/><text x="8.6889%" y="1407.50"></text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (1 samples, 0.03%)</title><rect x="8.4389%" y="1381" width="0.0270%" height="15" fill="rgb(242,79,21)" fg:x="313" fg:w="1"/><text x="8.6889%" y="1391.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.03%)</title><rect x="8.4389%" y="1365" width="0.0270%" height="15" fill="rgb(211,96,35)" fg:x="313" fg:w="1"/><text x="8.6889%" y="1375.50"></text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="8.4389%" y="1349" width="0.0270%" height="15" fill="rgb(253,215,40)" fg:x="313" fg:w="1"/><text x="8.6889%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (1 samples, 0.03%)</title><rect x="8.4389%" y="1333" width="0.0270%" height="15" fill="rgb(211,81,21)" fg:x="313" fg:w="1"/><text x="8.6889%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.03%)</title><rect x="8.4389%" y="1317" width="0.0270%" height="15" fill="rgb(208,190,38)" fg:x="313" fg:w="1"/><text x="8.6889%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="8.4389%" y="1301" width="0.0270%" height="15" fill="rgb(235,213,38)" fg:x="313" fg:w="1"/><text x="8.6889%" y="1311.50"></text></g><g><title>std::io::stdio::Stderr::lock (2 samples, 0.05%)</title><rect x="8.4659%" y="1413" width="0.0539%" height="15" fill="rgb(237,122,38)" fg:x="314" fg:w="2"/><text x="8.7159%" y="1423.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.05%)</title><rect x="8.5198%" y="1413" width="0.0539%" height="15" fill="rgb(244,218,35)" fg:x="316" fg:w="2"/><text x="8.7698%" y="1423.50"></text></g><g><title>std::time::SystemTime::duration_since (2 samples, 0.05%)</title><rect x="8.5737%" y="1413" width="0.0539%" height="15" fill="rgb(240,68,47)" fg:x="318" fg:w="2"/><text x="8.8237%" y="1423.50"></text></g><g><title>std::time::SystemTime::now (1 samples, 0.03%)</title><rect x="8.6277%" y="1413" width="0.0270%" height="15" fill="rgb(210,16,53)" fg:x="320" fg:w="1"/><text x="8.8777%" y="1423.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.03%)</title><rect x="8.6546%" y="1413" width="0.0270%" height="15" fill="rgb(235,124,12)" fg:x="321" fg:w="1"/><text x="8.9046%" y="1423.50"></text></g><g><title>tokio::sync::oneshot::State::load (1 samples, 0.03%)</title><rect x="8.6816%" y="1413" width="0.0270%" height="15" fill="rgb(224,169,11)" fg:x="322" fg:w="1"/><text x="8.9316%" y="1423.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (2 samples, 0.05%)</title><rect x="8.7085%" y="1413" width="0.0539%" height="15" fill="rgb(250,166,2)" fg:x="323" fg:w="2"/><text x="8.9585%" y="1423.50"></text></g><g><title>[[stack]] (172 samples, 4.64%)</title><rect x="4.1521%" y="1429" width="4.6374%" height="15" fill="rgb(242,216,29)" fg:x="154" fg:w="172"/><text x="4.4021%" y="1439.50">[[sta..</text></g><g><title>write (1 samples, 0.03%)</title><rect x="8.7625%" y="1413" width="0.0270%" height="15" fill="rgb(230,116,27)" fg:x="325" fg:w="1"/><text x="9.0125%" y="1423.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.03%)</title><rect x="8.7894%" y="1413" width="0.0270%" height="15" fill="rgb(228,99,48)" fg:x="326" fg:w="1"/><text x="9.0394%" y="1423.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="8.8164%" y="1413" width="0.0270%" height="15" fill="rgb(253,11,6)" fg:x="327" fg:w="1"/><text x="9.0664%" y="1423.50"></text></g><g><title>rmp::encode::uint::write_uint (6 samples, 0.16%)</title><rect x="8.8434%" y="1413" width="0.1618%" height="15" fill="rgb(247,143,39)" fg:x="328" fg:w="6"/><text x="9.0934%" y="1423.50"></text></g><g><title>rmp::encode::uint::write_uint8 (1 samples, 0.03%)</title><rect x="8.9782%" y="1397" width="0.0270%" height="15" fill="rgb(236,97,10)" fg:x="333" fg:w="1"/><text x="9.2282%" y="1407.50"></text></g><g><title>rmp::encode::uint::write_u8 (1 samples, 0.03%)</title><rect x="8.9782%" y="1381" width="0.0270%" height="15" fill="rgb(233,208,19)" fg:x="333" fg:w="1"/><text x="9.2282%" y="1391.50"></text></g><g><title>[anon] (13 samples, 0.35%)</title><rect x="8.7894%" y="1429" width="0.3505%" height="15" fill="rgb(216,164,2)" fg:x="326" fg:w="13"/><text x="9.0394%" y="1439.50"></text></g><g><title>rmp::encode::write_marker (5 samples, 0.13%)</title><rect x="9.0051%" y="1413" width="0.1348%" height="15" fill="rgb(220,129,5)" fg:x="334" fg:w="5"/><text x="9.2551%" y="1423.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="9.1399%" y="1413" width="0.0270%" height="15" fill="rgb(242,17,10)" fg:x="339" fg:w="1"/><text x="9.3899%" y="1423.50"></text></g><g><title>kvlr::connection::ConnectionFrameSender::send_frame::_{{closure}} (1 samples, 0.03%)</title><rect x="9.1669%" y="1413" width="0.0270%" height="15" fill="rgb(242,107,0)" fg:x="340" fg:w="1"/><text x="9.4169%" y="1423.50"></text></g><g><title>kvlr::rpc::rpc_manager::RpcManager::call_raw::_{{closure}} (1 samples, 0.03%)</title><rect x="9.1939%" y="1413" width="0.0270%" height="15" fill="rgb(251,28,31)" fg:x="341" fg:w="1"/><text x="9.4439%" y="1423.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (2 samples, 0.05%)</title><rect x="9.2208%" y="1413" width="0.0539%" height="15" fill="rgb(233,223,10)" fg:x="342" fg:w="2"/><text x="9.4708%" y="1423.50"></text></g><g><title>[kvlr-client] (6 samples, 0.16%)</title><rect x="9.1399%" y="1429" width="0.1618%" height="15" fill="rgb(215,21,27)" fg:x="339" fg:w="6"/><text x="9.3899%" y="1439.50"></text></g><g><title>tokio::runtime::park::drop_waker (1 samples, 0.03%)</title><rect x="9.2747%" y="1413" width="0.0270%" height="15" fill="rgb(232,23,21)" fg:x="344" fg:w="1"/><text x="9.5247%" y="1423.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="9.3017%" y="1429" width="0.0270%" height="15" fill="rgb(244,5,23)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1439.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="9.3017%" y="1413" width="0.0270%" height="15" fill="rgb(226,81,46)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1423.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="9.3017%" y="1397" width="0.0270%" height="15" fill="rgb(247,70,30)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1407.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="9.3017%" y="1381" width="0.0270%" height="15" fill="rgb(212,68,19)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1391.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="9.3017%" y="1365" width="0.0270%" height="15" fill="rgb(240,187,13)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1375.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="9.3017%" y="1349" width="0.0270%" height="15" fill="rgb(223,113,26)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1359.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="9.3017%" y="1333" width="0.0270%" height="15" fill="rgb(206,192,2)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1343.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="9.3017%" y="1317" width="0.0270%" height="15" fill="rgb(241,108,4)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1327.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="9.3017%" y="1301" width="0.0270%" height="15" fill="rgb(247,173,49)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1311.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="9.3017%" y="1285" width="0.0270%" height="15" fill="rgb(224,114,35)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1295.50"></text></g><g><title>do_fault (1 samples, 0.03%)</title><rect x="9.3017%" y="1269" width="0.0270%" height="15" fill="rgb(245,159,27)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1279.50"></text></g><g><title>filemap_map_pages (1 samples, 0.03%)</title><rect x="9.3017%" y="1253" width="0.0270%" height="15" fill="rgb(245,172,44)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1263.50"></text></g><g><title>next_uptodate_folio (1 samples, 0.03%)</title><rect x="9.3017%" y="1237" width="0.0270%" height="15" fill="rgb(236,23,11)" fg:x="345" fg:w="1"/><text x="9.5517%" y="1247.50"></text></g><g><title>__mmap (1 samples, 0.03%)</title><rect x="9.3287%" y="1365" width="0.0270%" height="15" fill="rgb(205,117,38)" fg:x="346" fg:w="1"/><text x="9.5787%" y="1375.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="9.3287%" y="1349" width="0.0270%" height="15" fill="rgb(237,72,25)" fg:x="346" fg:w="1"/><text x="9.5787%" y="1359.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="9.3287%" y="1333" width="0.0270%" height="15" fill="rgb(244,70,9)" fg:x="346" fg:w="1"/><text x="9.5787%" y="1343.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="9.3287%" y="1317" width="0.0270%" height="15" fill="rgb(217,125,39)" fg:x="346" fg:w="1"/><text x="9.5787%" y="1327.50"></text></g><g><title>do_mmap (1 samples, 0.03%)</title><rect x="9.3287%" y="1301" width="0.0270%" height="15" fill="rgb(235,36,10)" fg:x="346" fg:w="1"/><text x="9.5787%" y="1311.50"></text></g><g><title>mmap_region (1 samples, 0.03%)</title><rect x="9.3287%" y="1285" width="0.0270%" height="15" fill="rgb(251,123,47)" fg:x="346" fg:w="1"/><text x="9.5787%" y="1295.50"></text></g><g><title>mas_store_prealloc (1 samples, 0.03%)</title><rect x="9.3287%" y="1269" width="0.0270%" height="15" fill="rgb(221,13,13)" fg:x="346" fg:w="1"/><text x="9.5787%" y="1279.50"></text></g><g><title>mas_wr_store_entry.isra.0 (1 samples, 0.03%)</title><rect x="9.3287%" y="1253" width="0.0270%" height="15" fill="rgb(238,131,9)" fg:x="346" fg:w="1"/><text x="9.5787%" y="1263.50"></text></g><g><title>mas_wr_node_store (1 samples, 0.03%)</title><rect x="9.3287%" y="1237" width="0.0270%" height="15" fill="rgb(211,50,8)" fg:x="346" fg:w="1"/><text x="9.5787%" y="1247.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.03%)</title><rect x="9.3556%" y="1205" width="0.0270%" height="15" fill="rgb(245,182,24)" fg:x="347" fg:w="1"/><text x="9.6056%" y="1215.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.03%)</title><rect x="9.3556%" y="1189" width="0.0270%" height="15" fill="rgb(242,14,37)" fg:x="347" fg:w="1"/><text x="9.6056%" y="1199.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="9.3287%" y="1429" width="0.1078%" height="15" fill="rgb(246,228,12)" fg:x="346" fg:w="4"/><text x="9.5787%" y="1439.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="9.3287%" y="1413" width="0.1078%" height="15" fill="rgb(213,55,15)" fg:x="346" fg:w="4"/><text x="9.5787%" y="1423.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (4 samples, 0.11%)</title><rect x="9.3287%" y="1397" width="0.1078%" height="15" fill="rgb(209,9,3)" fg:x="346" fg:w="4"/><text x="9.5787%" y="1407.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (4 samples, 0.11%)</title><rect x="9.3287%" y="1381" width="0.1078%" height="15" fill="rgb(230,59,30)" fg:x="346" fg:w="4"/><text x="9.5787%" y="1391.50"></text></g><g><title>pthread_getattr_np (3 samples, 0.08%)</title><rect x="9.3556%" y="1365" width="0.0809%" height="15" fill="rgb(209,121,21)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1375.50"></text></g><g><title>malloc (3 samples, 0.08%)</title><rect x="9.3556%" y="1349" width="0.0809%" height="15" fill="rgb(220,109,13)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1359.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="9.3556%" y="1333" width="0.0809%" height="15" fill="rgb(232,18,1)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1343.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="9.3556%" y="1317" width="0.0809%" height="15" fill="rgb(215,41,42)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1327.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="9.3556%" y="1301" width="0.0809%" height="15" fill="rgb(224,123,36)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1311.50"></text></g><g><title>__munmap (3 samples, 0.08%)</title><rect x="9.3556%" y="1285" width="0.0809%" height="15" fill="rgb(240,125,3)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1295.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.08%)</title><rect x="9.3556%" y="1269" width="0.0809%" height="15" fill="rgb(205,98,50)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1279.50"></text></g><g><title>do_syscall_64 (3 samples, 0.08%)</title><rect x="9.3556%" y="1253" width="0.0809%" height="15" fill="rgb(205,185,37)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1263.50"></text></g><g><title>__x64_sys_munmap (3 samples, 0.08%)</title><rect x="9.3556%" y="1237" width="0.0809%" height="15" fill="rgb(238,207,15)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1247.50"></text></g><g><title>__vm_munmap (3 samples, 0.08%)</title><rect x="9.3556%" y="1221" width="0.0809%" height="15" fill="rgb(213,199,42)" fg:x="347" fg:w="3"/><text x="9.6056%" y="1231.50"></text></g><g><title>down_write_killable (2 samples, 0.05%)</title><rect x="9.3826%" y="1205" width="0.0539%" height="15" fill="rgb(235,201,11)" fg:x="348" fg:w="2"/><text x="9.6326%" y="1215.50"></text></g><g><title>rwsem_down_write_slowpath (2 samples, 0.05%)</title><rect x="9.3826%" y="1189" width="0.0539%" height="15" fill="rgb(207,46,11)" fg:x="348" fg:w="2"/><text x="9.6326%" y="1199.50"></text></g><g><title>osq_lock (2 samples, 0.05%)</title><rect x="9.3826%" y="1173" width="0.0539%" height="15" fill="rgb(241,35,35)" fg:x="348" fg:w="2"/><text x="9.6326%" y="1183.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::collect_seq (15 samples, 0.40%)</title><rect x="9.4365%" y="1413" width="0.4044%" height="15" fill="rgb(243,32,47)" fg:x="350" fg:w="15"/><text x="9.6865%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.35%)</title><rect x="9.4904%" y="1397" width="0.3505%" height="15" fill="rgb(247,202,23)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.35%)</title><rect x="9.4904%" y="1381" width="0.3505%" height="15" fill="rgb(219,102,11)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.35%)</title><rect x="9.4904%" y="1365" width="0.3505%" height="15" fill="rgb(243,110,44)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (13 samples, 0.35%)</title><rect x="9.4904%" y="1349" width="0.3505%" height="15" fill="rgb(222,74,54)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1359.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::collect_seq::_{{closure}} (13 samples, 0.35%)</title><rect x="9.4904%" y="1333" width="0.3505%" height="15" fill="rgb(216,99,12)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1343.50"></text></g><g><title>&lt;rmp_serde::encode::MaybeUnknownLengthCompound&lt;W,C&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.35%)</title><rect x="9.4904%" y="1317" width="0.3505%" height="15" fill="rgb(226,22,26)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1327.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.35%)</title><rect x="9.4904%" y="1301" width="0.3505%" height="15" fill="rgb(217,163,10)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (13 samples, 0.35%)</title><rect x="9.4904%" y="1285" width="0.3505%" height="15" fill="rgb(213,25,53)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1295.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_u8 (13 samples, 0.35%)</title><rect x="9.4904%" y="1269" width="0.3505%" height="15" fill="rgb(252,105,26)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1279.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_u64 (13 samples, 0.35%)</title><rect x="9.4904%" y="1253" width="0.3505%" height="15" fill="rgb(220,39,43)" fg:x="352" fg:w="13"/><text x="9.7404%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (4 samples, 0.11%)</title><rect x="9.8409%" y="1413" width="0.1078%" height="15" fill="rgb(229,68,48)" fg:x="365" fg:w="4"/><text x="10.0909%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.05%)</title><rect x="9.8949%" y="1397" width="0.0539%" height="15" fill="rgb(252,8,32)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.05%)</title><rect x="9.8949%" y="1381" width="0.0539%" height="15" fill="rgb(223,20,43)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1391.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (2 samples, 0.05%)</title><rect x="9.8949%" y="1365" width="0.0539%" height="15" fill="rgb(229,81,49)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1375.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="9.8949%" y="1349" width="0.0539%" height="15" fill="rgb(236,28,36)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1359.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="9.8949%" y="1333" width="0.0539%" height="15" fill="rgb(249,185,26)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1343.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="9.8949%" y="1317" width="0.0539%" height="15" fill="rgb(249,174,33)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1327.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="9.8949%" y="1301" width="0.0539%" height="15" fill="rgb(233,201,37)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1311.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="9.8949%" y="1285" width="0.0539%" height="15" fill="rgb(221,78,26)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1295.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="9.8949%" y="1269" width="0.0539%" height="15" fill="rgb(250,127,30)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1279.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2 samples, 0.05%)</title><rect x="9.8949%" y="1253" width="0.0539%" height="15" fill="rgb(230,49,44)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="9.8949%" y="1237" width="0.0539%" height="15" fill="rgb(229,67,23)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1247.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="9.8949%" y="1221" width="0.0539%" height="15" fill="rgb(249,83,47)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1231.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.05%)</title><rect x="9.8949%" y="1205" width="0.0539%" height="15" fill="rgb(215,43,3)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1215.50"></text></g><g><title>&lt;std::sys::pal::unix::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.05%)</title><rect x="9.8949%" y="1189" width="0.0539%" height="15" fill="rgb(238,154,13)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1199.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (2 samples, 0.05%)</title><rect x="9.8949%" y="1173" width="0.0539%" height="15" fill="rgb(219,56,2)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1183.50"></text></g><g><title>write (2 samples, 0.05%)</title><rect x="9.8949%" y="1157" width="0.0539%" height="15" fill="rgb(233,0,4)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1167.50"></text></g><g><title>error_entry (2 samples, 0.05%)</title><rect x="9.8949%" y="1141" width="0.0539%" height="15" fill="rgb(235,30,7)" fg:x="367" fg:w="2"/><text x="10.1449%" y="1151.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::collect_seq (1 samples, 0.03%)</title><rect x="9.9488%" y="1397" width="0.0270%" height="15" fill="rgb(250,79,13)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.03%)</title><rect x="9.9488%" y="1381" width="0.0270%" height="15" fill="rgb(211,146,34)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="9.9488%" y="1365" width="0.0270%" height="15" fill="rgb(228,22,38)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="9.9488%" y="1349" width="0.0270%" height="15" fill="rgb(235,168,5)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.03%)</title><rect x="9.9488%" y="1333" width="0.0270%" height="15" fill="rgb(221,155,16)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1343.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::collect_seq::_{{closure}} (1 samples, 0.03%)</title><rect x="9.9488%" y="1317" width="0.0270%" height="15" fill="rgb(215,215,53)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1327.50"></text></g><g><title>&lt;rmp_serde::encode::MaybeUnknownLengthCompound&lt;W,C&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.03%)</title><rect x="9.9488%" y="1301" width="0.0270%" height="15" fill="rgb(223,4,10)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.03%)</title><rect x="9.9488%" y="1285" width="0.0270%" height="15" fill="rgb(234,103,6)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1295.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (1 samples, 0.03%)</title><rect x="9.9488%" y="1269" width="0.0270%" height="15" fill="rgb(227,97,0)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1279.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_u8 (1 samples, 0.03%)</title><rect x="9.9488%" y="1253" width="0.0270%" height="15" fill="rgb(234,150,53)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1263.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.03%)</title><rect x="9.9488%" y="1237" width="0.0270%" height="15" fill="rgb(228,201,54)" fg:x="369" fg:w="1"/><text x="10.1988%" y="1247.50"></text></g><g><title>[kvlr-client] (2 samples, 0.05%)</title><rect x="9.9488%" y="1413" width="0.0539%" height="15" fill="rgb(222,22,37)" fg:x="369" fg:w="2"/><text x="10.1988%" y="1423.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="9.9757%" y="1397" width="0.0270%" height="15" fill="rgb(237,53,32)" fg:x="370" fg:w="1"/><text x="10.2257%" y="1407.50"></text></g><g><title>tokio::io::blocking::Buf::copy_to (1 samples, 0.03%)</title><rect x="9.9757%" y="1381" width="0.0270%" height="15" fill="rgb(233,25,53)" fg:x="370" fg:w="1"/><text x="10.2257%" y="1391.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (1 samples, 0.03%)</title><rect x="9.9757%" y="1365" width="0.0270%" height="15" fill="rgb(210,40,34)" fg:x="370" fg:w="1"/><text x="10.2257%" y="1375.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.03%)</title><rect x="9.9757%" y="1349" width="0.0270%" height="15" fill="rgb(241,220,44)" fg:x="370" fg:w="1"/><text x="10.2257%" y="1359.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="9.9757%" y="1333" width="0.0270%" height="15" fill="rgb(235,28,35)" fg:x="370" fg:w="1"/><text x="10.2257%" y="1343.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="10.0027%" y="1413" width="0.0270%" height="15" fill="rgb(210,56,17)" fg:x="371" fg:w="1"/><text x="10.2527%" y="1423.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.03%)</title><rect x="10.0297%" y="1413" width="0.0270%" height="15" fill="rgb(224,130,29)" fg:x="372" fg:w="1"/><text x="10.2797%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.19%)</title><rect x="10.0566%" y="1413" width="0.1887%" height="15" fill="rgb(235,212,8)" fg:x="373" fg:w="7"/><text x="10.3066%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="10.2184%" y="1397" width="0.0270%" height="15" fill="rgb(223,33,50)" fg:x="379" fg:w="1"/><text x="10.4684%" y="1407.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="10.2184%" y="1381" width="0.0270%" height="15" fill="rgb(219,149,13)" fg:x="379" fg:w="1"/><text x="10.4684%" y="1391.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="10.2184%" y="1365" width="0.0270%" height="15" fill="rgb(250,156,29)" fg:x="379" fg:w="1"/><text x="10.4684%" y="1375.50"></text></g><g><title>cfree (2 samples, 0.05%)</title><rect x="10.2453%" y="1413" width="0.0539%" height="15" fill="rgb(216,193,19)" fg:x="380" fg:w="2"/><text x="10.4953%" y="1423.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="10.2993%" y="1413" width="0.0270%" height="15" fill="rgb(216,135,14)" fg:x="382" fg:w="1"/><text x="10.5493%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="10.3262%" y="1413" width="0.0539%" height="15" fill="rgb(241,47,5)" fg:x="383" fg:w="2"/><text x="10.5762%" y="1423.50"></text></g><g><title>malloc (2 samples, 0.05%)</title><rect x="10.3802%" y="1413" width="0.0539%" height="15" fill="rgb(233,42,35)" fg:x="385" fg:w="2"/><text x="10.6302%" y="1423.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="10.4341%" y="1413" width="0.0270%" height="15" fill="rgb(231,13,6)" fg:x="387" fg:w="1"/><text x="10.6841%" y="1423.50"></text></g><g><title>rmp::encode::uint::write_uint (56 samples, 1.51%)</title><rect x="10.4610%" y="1413" width="1.5098%" height="15" fill="rgb(207,181,40)" fg:x="388" fg:w="56"/><text x="10.7110%" y="1423.50"></text></g><g><title>rmp::encode::write_array_len (1 samples, 0.03%)</title><rect x="11.9709%" y="1413" width="0.0270%" height="15" fill="rgb(254,173,49)" fg:x="444" fg:w="1"/><text x="12.2209%" y="1423.50"></text></g><g><title>rmp::encode::write_marker (21 samples, 0.57%)</title><rect x="11.9978%" y="1413" width="0.5662%" height="15" fill="rgb(221,1,38)" fg:x="445" fg:w="21"/><text x="12.2478%" y="1423.50"></text></g><g><title>rmp::encode::RmpWrite::write_u8 (1 samples, 0.03%)</title><rect x="12.5371%" y="1397" width="0.0270%" height="15" fill="rgb(206,124,46)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1407.50"></text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (1 samples, 0.03%)</title><rect x="12.5371%" y="1381" width="0.0270%" height="15" fill="rgb(249,21,11)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1391.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.03%)</title><rect x="12.5371%" y="1365" width="0.0270%" height="15" fill="rgb(222,201,40)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1375.50"></text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="12.5371%" y="1349" width="0.0270%" height="15" fill="rgb(235,61,29)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="12.5371%" y="1333" width="0.0270%" height="15" fill="rgb(219,207,3)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="12.5371%" y="1317" width="0.0270%" height="15" fill="rgb(222,56,46)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="12.5371%" y="1301" width="0.0270%" height="15" fill="rgb(239,76,54)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="12.5371%" y="1285" width="0.0270%" height="15" fill="rgb(231,124,27)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="12.5371%" y="1269" width="0.0270%" height="15" fill="rgb(249,195,6)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.03%)</title><rect x="12.5371%" y="1253" width="0.0270%" height="15" fill="rgb(237,174,47)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1263.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="12.5371%" y="1237" width="0.0270%" height="15" fill="rgb(206,201,31)" fg:x="465" fg:w="1"/><text x="12.7871%" y="1247.50"></text></g><g><title>rmp::marker::Marker::to_u8 (15 samples, 0.40%)</title><rect x="12.5640%" y="1413" width="0.4044%" height="15" fill="rgb(231,57,52)" fg:x="466" fg:w="15"/><text x="12.8140%" y="1423.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="12.9685%" y="1413" width="0.0270%" height="15" fill="rgb(248,177,22)" fg:x="481" fg:w="1"/><text x="13.2185%" y="1423.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 0.03%)</title><rect x="12.9954%" y="1413" width="0.0270%" height="15" fill="rgb(215,211,37)" fg:x="482" fg:w="1"/><text x="13.2454%" y="1423.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.03%)</title><rect x="12.9954%" y="1397" width="0.0270%" height="15" fill="rgb(241,128,51)" fg:x="482" fg:w="1"/><text x="13.2454%" y="1407.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.03%)</title><rect x="12.9954%" y="1381" width="0.0270%" height="15" fill="rgb(227,165,31)" fg:x="482" fg:w="1"/><text x="13.2454%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (1 samples, 0.03%)</title><rect x="12.9954%" y="1365" width="0.0270%" height="15" fill="rgb(228,167,24)" fg:x="482" fg:w="1"/><text x="13.2454%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (1 samples, 0.03%)</title><rect x="12.9954%" y="1349" width="0.0270%" height="15" fill="rgb(228,143,12)" fg:x="482" fg:w="1"/><text x="13.2454%" y="1359.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (1 samples, 0.03%)</title><rect x="13.0224%" y="1413" width="0.0270%" height="15" fill="rgb(249,149,8)" fg:x="483" fg:w="1"/><text x="13.2724%" y="1423.50"></text></g><g><title>[unknown] (136 samples, 3.67%)</title><rect x="9.4365%" y="1429" width="3.6668%" height="15" fill="rgb(243,35,44)" fg:x="350" fg:w="136"/><text x="9.6865%" y="1439.50">[unk..</text></g><g><title>tracing::__macro_support::__is_enabled (2 samples, 0.05%)</title><rect x="13.0493%" y="1413" width="0.0539%" height="15" fill="rgb(246,89,9)" fg:x="484" fg:w="2"/><text x="13.2993%" y="1423.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="13.1033%" y="1429" width="0.0270%" height="15" fill="rgb(233,213,13)" fg:x="486" fg:w="1"/><text x="13.3533%" y="1439.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="13.1033%" y="1413" width="0.0270%" height="15" fill="rgb(233,141,41)" fg:x="486" fg:w="1"/><text x="13.3533%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.03%)</title><rect x="13.1302%" y="1429" width="0.0270%" height="15" fill="rgb(239,167,4)" fg:x="487" fg:w="1"/><text x="13.3802%" y="1439.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::get_mut_unchecked (1 samples, 0.03%)</title><rect x="13.1302%" y="1413" width="0.0270%" height="15" fill="rgb(209,217,16)" fg:x="487" fg:w="1"/><text x="13.3802%" y="1423.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="13.1572%" y="1429" width="0.0270%" height="15" fill="rgb(219,88,35)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1439.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="13.1572%" y="1413" width="0.0270%" height="15" fill="rgb(220,193,23)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1423.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="13.1572%" y="1397" width="0.0270%" height="15" fill="rgb(230,90,52)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1407.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="13.1572%" y="1381" width="0.0270%" height="15" fill="rgb(252,106,19)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1391.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="13.1572%" y="1365" width="0.0270%" height="15" fill="rgb(206,74,20)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1375.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="13.1572%" y="1349" width="0.0270%" height="15" fill="rgb(230,138,44)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1359.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="13.1572%" y="1333" width="0.0270%" height="15" fill="rgb(235,182,43)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1343.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="13.1572%" y="1317" width="0.0270%" height="15" fill="rgb(242,16,51)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1327.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="13.1572%" y="1301" width="0.0270%" height="15" fill="rgb(248,9,4)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1311.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="13.1572%" y="1285" width="0.0270%" height="15" fill="rgb(210,31,22)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1295.50"></text></g><g><title>clear_page_erms (1 samples, 0.03%)</title><rect x="13.1572%" y="1269" width="0.0270%" height="15" fill="rgb(239,54,39)" fg:x="488" fg:w="1"/><text x="13.4072%" y="1279.50"></text></g><g><title>asm_sysvec_reschedule_ipi (2 samples, 0.05%)</title><rect x="13.1841%" y="1429" width="0.0539%" height="15" fill="rgb(230,99,41)" fg:x="489" fg:w="2"/><text x="13.4341%" y="1439.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="13.2381%" y="1429" width="0.0270%" height="15" fill="rgb(253,106,12)" fg:x="491" fg:w="1"/><text x="13.4881%" y="1439.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.03%)</title><rect x="13.2381%" y="1413" width="0.0270%" height="15" fill="rgb(213,46,41)" fg:x="491" fg:w="1"/><text x="13.4881%" y="1423.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="13.2381%" y="1397" width="0.0270%" height="15" fill="rgb(215,133,35)" fg:x="491" fg:w="1"/><text x="13.4881%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;kvlr::rpc::rpc_manager::RpcManager&gt; (2 samples, 0.05%)</title><rect x="13.2650%" y="1429" width="0.0539%" height="15" fill="rgb(213,28,5)" fg:x="492" fg:w="2"/><text x="13.5150%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;kvlr::streaming::stream_sender::StreamSender&lt;u8&gt;::send::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="13.3190%" y="1429" width="0.0270%" height="15" fill="rgb(215,77,49)" fg:x="494" fg:w="1"/><text x="13.5690%" y="1439.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.03%)</title><rect x="13.5346%" y="1397" width="0.0270%" height="15" fill="rgb(248,100,22)" fg:x="502" fg:w="1"/><text x="13.7846%" y="1407.50"></text></g><g><title>do_group_exit (1 samples, 0.03%)</title><rect x="13.5346%" y="1381" width="0.0270%" height="15" fill="rgb(208,67,9)" fg:x="502" fg:w="1"/><text x="13.7846%" y="1391.50"></text></g><g><title>do_exit (1 samples, 0.03%)</title><rect x="13.5346%" y="1365" width="0.0270%" height="15" fill="rgb(219,133,21)" fg:x="502" fg:w="1"/><text x="13.7846%" y="1375.50"></text></g><g><title>task_work_run (1 samples, 0.03%)</title><rect x="13.5346%" y="1349" width="0.0270%" height="15" fill="rgb(246,46,29)" fg:x="502" fg:w="1"/><text x="13.7846%" y="1359.50"></text></g><g><title>__fput (1 samples, 0.03%)</title><rect x="13.5346%" y="1333" width="0.0270%" height="15" fill="rgb(246,185,52)" fg:x="502" fg:w="1"/><text x="13.7846%" y="1343.50"></text></g><g><title>__dentry_kill (1 samples, 0.03%)</title><rect x="13.5346%" y="1317" width="0.0270%" height="15" fill="rgb(252,136,11)" fg:x="502" fg:w="1"/><text x="13.7846%" y="1327.50"></text></g><g><title>destroy_inode (1 samples, 0.03%)</title><rect x="13.5346%" y="1301" width="0.0270%" height="15" fill="rgb(219,138,53)" fg:x="502" fg:w="1"/><text x="13.7846%" y="1311.50"></text></g><g><title>__destroy_inode (1 samples, 0.03%)</title><rect x="13.5346%" y="1285" width="0.0270%" height="15" fill="rgb(211,51,23)" fg:x="502" fg:w="1"/><text x="13.7846%" y="1295.50"></text></g><g><title>security_inode_free (1 samples, 0.03%)</title><rect x="13.5346%" y="1269" width="0.0270%" height="15" fill="rgb(247,221,28)" fg:x="502" fg:w="1"/><text x="13.7846%" y="1279.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.24%)</title><rect x="13.3459%" y="1429" width="0.2427%" height="15" fill="rgb(251,222,45)" fg:x="495" fg:w="9"/><text x="13.5959%" y="1439.50"></text></g><g><title>do_syscall_64 (2 samples, 0.05%)</title><rect x="13.5346%" y="1413" width="0.0539%" height="15" fill="rgb(217,162,53)" fg:x="502" fg:w="2"/><text x="13.7846%" y="1423.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="13.5616%" y="1397" width="0.0270%" height="15" fill="rgb(229,93,14)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1407.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="13.5616%" y="1381" width="0.0270%" height="15" fill="rgb(209,67,49)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1391.50"></text></g><g><title>bprm_execve (1 samples, 0.03%)</title><rect x="13.5616%" y="1365" width="0.0270%" height="15" fill="rgb(213,87,29)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1375.50"></text></g><g><title>load_elf_binary (1 samples, 0.03%)</title><rect x="13.5616%" y="1349" width="0.0270%" height="15" fill="rgb(205,151,52)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1359.50"></text></g><g><title>elf_map (1 samples, 0.03%)</title><rect x="13.5616%" y="1333" width="0.0270%" height="15" fill="rgb(253,215,39)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1343.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="13.5616%" y="1317" width="0.0270%" height="15" fill="rgb(221,220,41)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1327.50"></text></g><g><title>do_mmap (1 samples, 0.03%)</title><rect x="13.5616%" y="1301" width="0.0270%" height="15" fill="rgb(218,133,21)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1311.50"></text></g><g><title>mmap_region (1 samples, 0.03%)</title><rect x="13.5616%" y="1285" width="0.0270%" height="15" fill="rgb(221,193,43)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1295.50"></text></g><g><title>perf_event_mmap (1 samples, 0.03%)</title><rect x="13.5616%" y="1269" width="0.0270%" height="15" fill="rgb(240,128,52)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1279.50"></text></g><g><title>kfree (1 samples, 0.03%)</title><rect x="13.5616%" y="1253" width="0.0270%" height="15" fill="rgb(253,114,12)" fg:x="503" fg:w="1"/><text x="13.8116%" y="1263.50"></text></g><g><title>human_format::Formatter::new (2 samples, 0.05%)</title><rect x="13.5886%" y="1429" width="0.0539%" height="15" fill="rgb(215,223,47)" fg:x="504" fg:w="2"/><text x="13.8386%" y="1439.50"></text></g><g><title>human_format::Formatter::with_units (1 samples, 0.03%)</title><rect x="13.6425%" y="1429" width="0.0270%" height="15" fill="rgb(248,225,23)" fg:x="506" fg:w="1"/><text x="13.8925%" y="1439.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.03%)</title><rect x="13.6425%" y="1413" width="0.0270%" height="15" fill="rgb(250,108,0)" fg:x="506" fg:w="1"/><text x="13.8925%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.03%)</title><rect x="13.6425%" y="1397" width="0.0270%" height="15" fill="rgb(228,208,7)" fg:x="506" fg:w="1"/><text x="13.8925%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.03%)</title><rect x="13.6425%" y="1381" width="0.0270%" height="15" fill="rgb(244,45,10)" fg:x="506" fg:w="1"/><text x="13.8925%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="13.6425%" y="1365" width="0.0270%" height="15" fill="rgb(207,125,25)" fg:x="506" fg:w="1"/><text x="13.8925%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="13.6425%" y="1349" width="0.0270%" height="15" fill="rgb(210,195,18)" fg:x="506" fg:w="1"/><text x="13.8925%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="13.6425%" y="1333" width="0.0270%" height="15" fill="rgb(249,80,12)" fg:x="506" fg:w="1"/><text x="13.8925%" y="1343.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="13.6425%" y="1317" width="0.0270%" height="15" fill="rgb(221,65,9)" fg:x="506" fg:w="1"/><text x="13.8925%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="13.6425%" y="1301" width="0.0270%" height="15" fill="rgb(235,49,36)" fg:x="506" fg:w="1"/><text x="13.8925%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (1 samples, 0.03%)</title><rect x="13.6964%" y="1269" width="0.0270%" height="15" fill="rgb(225,32,20)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (1 samples, 0.03%)</title><rect x="13.6964%" y="1253" width="0.0270%" height="15" fill="rgb(215,141,46)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1263.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="13.6964%" y="1237" width="0.0270%" height="15" fill="rgb(250,160,47)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1247.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.03%)</title><rect x="13.6964%" y="1221" width="0.0270%" height="15" fill="rgb(216,222,40)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="13.6964%" y="1205" width="0.0270%" height="15" fill="rgb(234,217,39)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1215.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1 samples, 0.03%)</title><rect x="13.6964%" y="1189" width="0.0270%" height="15" fill="rgb(207,178,40)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1199.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop::_{{closure}} (1 samples, 0.03%)</title><rect x="13.6964%" y="1173" width="0.0270%" height="15" fill="rgb(221,136,13)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1183.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="13.6964%" y="1157" width="0.0270%" height="15" fill="rgb(249,199,10)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="13.6964%" y="1141" width="0.0270%" height="15" fill="rgb(249,222,13)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1151.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="13.6964%" y="1125" width="0.0270%" height="15" fill="rgb(244,185,38)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1135.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="13.6964%" y="1109" width="0.0270%" height="15" fill="rgb(236,202,9)" fg:x="508" fg:w="1"/><text x="13.9464%" y="1119.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.05%)</title><rect x="13.7234%" y="1173" width="0.0539%" height="15" fill="rgb(250,229,37)" fg:x="509" fg:w="2"/><text x="13.9734%" y="1183.50"></text></g><g><title>tokio::runtime::coop::budget (4 samples, 0.11%)</title><rect x="13.6964%" y="1301" width="0.1078%" height="15" fill="rgb(206,174,23)" fg:x="508" fg:w="4"/><text x="13.9464%" y="1311.50"></text></g><g><title>tokio::runtime::coop::with_budget (4 samples, 0.11%)</title><rect x="13.6964%" y="1285" width="0.1078%" height="15" fill="rgb(211,33,43)" fg:x="508" fg:w="4"/><text x="13.9464%" y="1295.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (3 samples, 0.08%)</title><rect x="13.7234%" y="1269" width="0.0809%" height="15" fill="rgb(245,58,50)" fg:x="509" fg:w="3"/><text x="13.9734%" y="1279.50"></text></g><g><title>tokio::runtime::park::Inner::park (3 samples, 0.08%)</title><rect x="13.7234%" y="1253" width="0.0809%" height="15" fill="rgb(244,68,36)" fg:x="509" fg:w="3"/><text x="13.9734%" y="1263.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (3 samples, 0.08%)</title><rect x="13.7234%" y="1237" width="0.0809%" height="15" fill="rgb(232,229,15)" fg:x="509" fg:w="3"/><text x="13.9734%" y="1247.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (3 samples, 0.08%)</title><rect x="13.7234%" y="1221" width="0.0809%" height="15" fill="rgb(254,30,23)" fg:x="509" fg:w="3"/><text x="13.9734%" y="1231.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.08%)</title><rect x="13.7234%" y="1205" width="0.0809%" height="15" fill="rgb(235,160,14)" fg:x="509" fg:w="3"/><text x="13.9734%" y="1215.50"></text></g><g><title>syscall (3 samples, 0.08%)</title><rect x="13.7234%" y="1189" width="0.0809%" height="15" fill="rgb(212,155,44)" fg:x="509" fg:w="3"/><text x="13.9734%" y="1199.50"></text></g><g><title>error_entry (1 samples, 0.03%)</title><rect x="13.7773%" y="1173" width="0.0270%" height="15" fill="rgb(226,2,50)" fg:x="511" fg:w="1"/><text x="14.0273%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.08%)</title><rect x="13.8043%" y="1237" width="0.0809%" height="15" fill="rgb(234,177,6)" fg:x="512" fg:w="3"/><text x="14.0543%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.08%)</title><rect x="13.8043%" y="1221" width="0.0809%" height="15" fill="rgb(217,24,9)" fg:x="512" fg:w="3"/><text x="14.0543%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.08%)</title><rect x="13.8043%" y="1205" width="0.0809%" height="15" fill="rgb(220,13,46)" fg:x="512" fg:w="3"/><text x="14.0543%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;parking_lot_core::parking_lot::ThreadData&gt;&gt; (1 samples, 0.03%)</title><rect x="13.8851%" y="1205" width="0.0270%" height="15" fill="rgb(239,221,27)" fg:x="515" fg:w="1"/><text x="14.1351%" y="1215.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.03%)</title><rect x="13.9121%" y="1189" width="0.0270%" height="15" fill="rgb(222,198,25)" fg:x="516" fg:w="1"/><text x="14.1621%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.03%)</title><rect x="13.9121%" y="1173" width="0.0270%" height="15" fill="rgb(211,99,13)" fg:x="516" fg:w="1"/><text x="14.1621%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="13.9121%" y="1157" width="0.0270%" height="15" fill="rgb(232,111,31)" fg:x="516" fg:w="1"/><text x="14.1621%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="13.9391%" y="1189" width="0.0270%" height="15" fill="rgb(245,82,37)" fg:x="517" fg:w="1"/><text x="14.1891%" y="1199.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="13.9391%" y="1173" width="0.0270%" height="15" fill="rgb(227,149,46)" fg:x="517" fg:w="1"/><text x="14.1891%" y="1183.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="13.9391%" y="1157" width="0.0270%" height="15" fill="rgb(218,36,50)" fg:x="517" fg:w="1"/><text x="14.1891%" y="1167.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="13.9391%" y="1141" width="0.0270%" height="15" fill="rgb(226,80,48)" fg:x="517" fg:w="1"/><text x="14.1891%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (1 samples, 0.03%)</title><rect x="13.9660%" y="1173" width="0.0270%" height="15" fill="rgb(238,224,15)" fg:x="518" fg:w="1"/><text x="14.2160%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.03%)</title><rect x="13.9660%" y="1157" width="0.0270%" height="15" fill="rgb(241,136,10)" fg:x="518" fg:w="1"/><text x="14.2160%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="13.9660%" y="1141" width="0.0270%" height="15" fill="rgb(208,32,45)" fg:x="518" fg:w="1"/><text x="14.2160%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.16%)</title><rect x="13.8851%" y="1237" width="0.1618%" height="15" fill="rgb(207,135,9)" fg:x="515" fg:w="6"/><text x="14.1351%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.16%)</title><rect x="13.8851%" y="1221" width="0.1618%" height="15" fill="rgb(206,86,44)" fg:x="515" fg:w="6"/><text x="14.1351%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (5 samples, 0.13%)</title><rect x="13.9121%" y="1205" width="0.1348%" height="15" fill="rgb(245,177,15)" fg:x="516" fg:w="5"/><text x="14.1621%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (3 samples, 0.08%)</title><rect x="13.9660%" y="1189" width="0.0809%" height="15" fill="rgb(206,64,50)" fg:x="518" fg:w="3"/><text x="14.2160%" y="1199.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (2 samples, 0.05%)</title><rect x="13.9930%" y="1173" width="0.0539%" height="15" fill="rgb(234,36,40)" fg:x="519" fg:w="2"/><text x="14.2430%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.05%)</title><rect x="13.9930%" y="1157" width="0.0539%" height="15" fill="rgb(213,64,8)" fg:x="519" fg:w="2"/><text x="14.2430%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.05%)</title><rect x="13.9930%" y="1141" width="0.0539%" height="15" fill="rgb(210,75,36)" fg:x="519" fg:w="2"/><text x="14.2430%" y="1151.50"></text></g><g><title>futex_unqueue (1 samples, 0.03%)</title><rect x="14.3165%" y="1141" width="0.0270%" height="15" fill="rgb(229,88,21)" fg:x="531" fg:w="1"/><text x="14.5665%" y="1151.50"></text></g><g><title>__futex_queue (1 samples, 0.03%)</title><rect x="14.3435%" y="1125" width="0.0270%" height="15" fill="rgb(252,204,47)" fg:x="532" fg:w="1"/><text x="14.5935%" y="1135.50"></text></g><g><title>plist_add (1 samples, 0.03%)</title><rect x="14.3435%" y="1109" width="0.0270%" height="15" fill="rgb(208,77,27)" fg:x="532" fg:w="1"/><text x="14.5935%" y="1119.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="14.4513%" y="1077" width="0.0270%" height="15" fill="rgb(221,76,26)" fg:x="536" fg:w="1"/><text x="14.7013%" y="1087.50"></text></g><g><title>perf_ctx_disable (1 samples, 0.03%)</title><rect x="14.4783%" y="1077" width="0.0270%" height="15" fill="rgb(225,139,18)" fg:x="537" fg:w="1"/><text x="14.7283%" y="1087.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.03%)</title><rect x="14.4783%" y="1061" width="0.0270%" height="15" fill="rgb(230,137,11)" fg:x="537" fg:w="1"/><text x="14.7283%" y="1071.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.08%)</title><rect x="14.4513%" y="1093" width="0.0809%" height="15" fill="rgb(212,28,1)" fg:x="536" fg:w="3"/><text x="14.7013%" y="1103.50"></text></g><g><title>perf_ctx_enable (1 samples, 0.03%)</title><rect x="14.5053%" y="1077" width="0.0270%" height="15" fill="rgb(248,164,17)" fg:x="538" fg:w="1"/><text x="14.7553%" y="1087.50"></text></g><g><title>update_curr (3 samples, 0.08%)</title><rect x="14.5861%" y="1061" width="0.0809%" height="15" fill="rgb(222,171,42)" fg:x="541" fg:w="3"/><text x="14.8361%" y="1071.50"></text></g><g><title>__cgroup_account_cputime (2 samples, 0.05%)</title><rect x="14.6131%" y="1045" width="0.0539%" height="15" fill="rgb(243,84,45)" fg:x="542" fg:w="2"/><text x="14.8631%" y="1055.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.05%)</title><rect x="14.6131%" y="1029" width="0.0539%" height="15" fill="rgb(252,49,23)" fg:x="542" fg:w="2"/><text x="14.8631%" y="1039.50"></text></g><g><title>dequeue_entity (4 samples, 0.11%)</title><rect x="14.5861%" y="1077" width="0.1078%" height="15" fill="rgb(215,19,7)" fg:x="541" fg:w="4"/><text x="14.8361%" y="1087.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="14.6670%" y="1061" width="0.0270%" height="15" fill="rgb(238,81,41)" fg:x="544" fg:w="1"/><text x="14.9170%" y="1071.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="14.6670%" y="1045" width="0.0270%" height="15" fill="rgb(210,199,37)" fg:x="544" fg:w="1"/><text x="14.9170%" y="1055.50"></text></g><g><title>avg_vruntime (1 samples, 0.03%)</title><rect x="14.8018%" y="1061" width="0.0270%" height="15" fill="rgb(244,192,49)" fg:x="549" fg:w="1"/><text x="15.0518%" y="1071.50"></text></g><g><title>__calc_delta.constprop.0 (2 samples, 0.05%)</title><rect x="14.8827%" y="1045" width="0.0539%" height="15" fill="rgb(226,211,11)" fg:x="552" fg:w="2"/><text x="15.1327%" y="1055.50"></text></g><g><title>reweight_entity (10 samples, 0.27%)</title><rect x="14.6940%" y="1077" width="0.2696%" height="15" fill="rgb(236,162,54)" fg:x="545" fg:w="10"/><text x="14.9440%" y="1087.50"></text></g><g><title>update_curr (5 samples, 0.13%)</title><rect x="14.8288%" y="1061" width="0.1348%" height="15" fill="rgb(220,229,9)" fg:x="550" fg:w="5"/><text x="15.0788%" y="1071.50"></text></g><g><title>update_min_vruntime (1 samples, 0.03%)</title><rect x="14.9366%" y="1045" width="0.0270%" height="15" fill="rgb(250,87,22)" fg:x="554" fg:w="1"/><text x="15.1866%" y="1055.50"></text></g><g><title>set_next_buddy (1 samples, 0.03%)</title><rect x="14.9636%" y="1077" width="0.0270%" height="15" fill="rgb(239,43,17)" fg:x="555" fg:w="1"/><text x="15.2136%" y="1087.50"></text></g><g><title>update_cfs_group (2 samples, 0.05%)</title><rect x="14.9906%" y="1077" width="0.0539%" height="15" fill="rgb(231,177,25)" fg:x="556" fg:w="2"/><text x="15.2406%" y="1087.50"></text></g><g><title>dequeue_task_fair (20 samples, 0.54%)</title><rect x="14.5322%" y="1093" width="0.5392%" height="15" fill="rgb(219,179,1)" fg:x="539" fg:w="20"/><text x="14.7822%" y="1103.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="15.0445%" y="1077" width="0.0270%" height="15" fill="rgb(238,219,53)" fg:x="558" fg:w="1"/><text x="15.2945%" y="1087.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="15.0445%" y="1061" width="0.0270%" height="15" fill="rgb(232,167,36)" fg:x="558" fg:w="1"/><text x="15.2945%" y="1071.50"></text></g><g><title>__mmdrop (1 samples, 0.03%)</title><rect x="15.0714%" y="1077" width="0.0270%" height="15" fill="rgb(244,19,51)" fg:x="559" fg:w="1"/><text x="15.3214%" y="1087.50"></text></g><g><title>free_unref_page (1 samples, 0.03%)</title><rect x="15.0714%" y="1061" width="0.0270%" height="15" fill="rgb(224,6,22)" fg:x="559" fg:w="1"/><text x="15.3214%" y="1071.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.03%)</title><rect x="15.0714%" y="1045" width="0.0270%" height="15" fill="rgb(224,145,5)" fg:x="559" fg:w="1"/><text x="15.3214%" y="1055.50"></text></g><g><title>__free_one_page (1 samples, 0.03%)</title><rect x="15.0714%" y="1029" width="0.0270%" height="15" fill="rgb(234,130,49)" fg:x="559" fg:w="1"/><text x="15.3214%" y="1039.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="15.0984%" y="1061" width="0.0270%" height="15" fill="rgb(254,6,2)" fg:x="560" fg:w="1"/><text x="15.3484%" y="1071.50"></text></g><g><title>finish_task_switch.isra.0 (32 samples, 0.86%)</title><rect x="15.0714%" y="1093" width="0.8628%" height="15" fill="rgb(208,96,46)" fg:x="559" fg:w="32"/><text x="15.3214%" y="1103.50"></text></g><g><title>__perf_event_task_sched_in (31 samples, 0.84%)</title><rect x="15.0984%" y="1077" width="0.8358%" height="15" fill="rgb(239,3,39)" fg:x="560" fg:w="31"/><text x="15.3484%" y="1087.50"></text></g><g><title>perf_ctx_enable (30 samples, 0.81%)</title><rect x="15.1254%" y="1061" width="0.8088%" height="15" fill="rgb(233,210,1)" fg:x="561" fg:w="30"/><text x="15.3754%" y="1071.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (30 samples, 0.81%)</title><rect x="15.1254%" y="1045" width="0.8088%" height="15" fill="rgb(244,137,37)" fg:x="561" fg:w="30"/><text x="15.3754%" y="1055.50"></text></g><g><title>native_write_msr (30 samples, 0.81%)</title><rect x="15.1254%" y="1029" width="0.8088%" height="15" fill="rgb(240,136,2)" fg:x="561" fg:w="30"/><text x="15.3754%" y="1039.50"></text></g><g><title>newidle_balance (1 samples, 0.03%)</title><rect x="15.9881%" y="1077" width="0.0270%" height="15" fill="rgb(239,18,37)" fg:x="593" fg:w="1"/><text x="16.2381%" y="1087.50"></text></g><g><title>load_balance (1 samples, 0.03%)</title><rect x="15.9881%" y="1061" width="0.0270%" height="15" fill="rgb(218,185,22)" fg:x="593" fg:w="1"/><text x="16.2381%" y="1071.50"></text></g><g><title>activate_task (1 samples, 0.03%)</title><rect x="15.9881%" y="1045" width="0.0270%" height="15" fill="rgb(225,218,4)" fg:x="593" fg:w="1"/><text x="16.2381%" y="1055.50"></text></g><g><title>enqueue_task (1 samples, 0.03%)</title><rect x="15.9881%" y="1029" width="0.0270%" height="15" fill="rgb(230,182,32)" fg:x="593" fg:w="1"/><text x="16.2381%" y="1039.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.03%)</title><rect x="15.9881%" y="1013" width="0.0270%" height="15" fill="rgb(242,56,43)" fg:x="593" fg:w="1"/><text x="16.2381%" y="1023.50"></text></g><g><title>enqueue_entity (1 samples, 0.03%)</title><rect x="15.9881%" y="997" width="0.0270%" height="15" fill="rgb(233,99,24)" fg:x="593" fg:w="1"/><text x="16.2381%" y="1007.50"></text></g><g><title>__enqueue_entity (1 samples, 0.03%)</title><rect x="15.9881%" y="981" width="0.0270%" height="15" fill="rgb(234,209,42)" fg:x="593" fg:w="1"/><text x="16.2381%" y="991.50"></text></g><g><title>pick_next_entity.isra.0 (2 samples, 0.05%)</title><rect x="16.0151%" y="1077" width="0.0539%" height="15" fill="rgb(227,7,12)" fg:x="594" fg:w="2"/><text x="16.2651%" y="1087.50"></text></g><g><title>__pick_eevdf (2 samples, 0.05%)</title><rect x="16.0151%" y="1061" width="0.0539%" height="15" fill="rgb(245,203,43)" fg:x="594" fg:w="2"/><text x="16.2651%" y="1071.50"></text></g><g><title>entity_eligible (1 samples, 0.03%)</title><rect x="16.0421%" y="1045" width="0.0270%" height="15" fill="rgb(238,205,33)" fg:x="595" fg:w="1"/><text x="16.2921%" y="1055.50"></text></g><g><title>pick_next_task_fair (7 samples, 0.19%)</title><rect x="15.9342%" y="1093" width="0.1887%" height="15" fill="rgb(231,56,7)" fg:x="591" fg:w="7"/><text x="16.1842%" y="1103.50"></text></g><g><title>set_next_entity (2 samples, 0.05%)</title><rect x="16.0690%" y="1077" width="0.0539%" height="15" fill="rgb(244,186,29)" fg:x="596" fg:w="2"/><text x="16.3190%" y="1087.50"></text></g><g><title>update_load_avg (2 samples, 0.05%)</title><rect x="16.0690%" y="1061" width="0.0539%" height="15" fill="rgb(234,111,31)" fg:x="596" fg:w="2"/><text x="16.3190%" y="1071.50"></text></g><g><title>psi_flags_change (1 samples, 0.03%)</title><rect x="16.1499%" y="1077" width="0.0270%" height="15" fill="rgb(241,149,10)" fg:x="599" fg:w="1"/><text x="16.3999%" y="1087.50"></text></g><g><title>psi_task_switch (7 samples, 0.19%)</title><rect x="16.1229%" y="1093" width="0.1887%" height="15" fill="rgb(249,206,44)" fg:x="598" fg:w="7"/><text x="16.3729%" y="1103.50"></text></g><g><title>psi_group_change (5 samples, 0.13%)</title><rect x="16.1769%" y="1077" width="0.1348%" height="15" fill="rgb(251,153,30)" fg:x="600" fg:w="5"/><text x="16.4269%" y="1087.50"></text></g><g><title>futex_wait_queue (74 samples, 2.00%)</title><rect x="14.3435%" y="1141" width="1.9951%" height="15" fill="rgb(239,152,38)" fg:x="532" fg:w="74"/><text x="14.5935%" y="1151.50">f..</text></g><g><title>schedule (73 samples, 1.97%)</title><rect x="14.3705%" y="1125" width="1.9682%" height="15" fill="rgb(249,139,47)" fg:x="533" fg:w="73"/><text x="14.6205%" y="1135.50">s..</text></g><g><title>__schedule (73 samples, 1.97%)</title><rect x="14.3705%" y="1109" width="1.9682%" height="15" fill="rgb(244,64,35)" fg:x="533" fg:w="73"/><text x="14.6205%" y="1119.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="16.3117%" y="1093" width="0.0270%" height="15" fill="rgb(216,46,15)" fg:x="605" fg:w="1"/><text x="16.5617%" y="1103.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="16.3117%" y="1077" width="0.0270%" height="15" fill="rgb(250,74,19)" fg:x="605" fg:w="1"/><text x="16.5617%" y="1087.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="16.3117%" y="1061" width="0.0270%" height="15" fill="rgb(249,42,33)" fg:x="605" fg:w="1"/><text x="16.5617%" y="1071.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="16.3117%" y="1045" width="0.0270%" height="15" fill="rgb(242,149,17)" fg:x="605" fg:w="1"/><text x="16.5617%" y="1055.50"></text></g><g><title>__x64_sys_futex (84 samples, 2.26%)</title><rect x="14.1278%" y="1189" width="2.2648%" height="15" fill="rgb(244,29,21)" fg:x="524" fg:w="84"/><text x="14.3778%" y="1199.50">_..</text></g><g><title>do_futex (82 samples, 2.21%)</title><rect x="14.1817%" y="1173" width="2.2108%" height="15" fill="rgb(220,130,37)" fg:x="526" fg:w="82"/><text x="14.4317%" y="1183.50">d..</text></g><g><title>futex_wait (81 samples, 2.18%)</title><rect x="14.2087%" y="1157" width="2.1839%" height="15" fill="rgb(211,67,2)" fg:x="527" fg:w="81"/><text x="14.4587%" y="1167.50">f..</text></g><g><title>futex_wait_setup (2 samples, 0.05%)</title><rect x="16.3386%" y="1141" width="0.0539%" height="15" fill="rgb(235,68,52)" fg:x="606" fg:w="2"/><text x="16.5886%" y="1151.50"></text></g><g><title>futex_q_lock (2 samples, 0.05%)</title><rect x="16.3386%" y="1125" width="0.0539%" height="15" fill="rgb(246,142,3)" fg:x="606" fg:w="2"/><text x="16.5886%" y="1135.50"></text></g><g><title>__rseq_handle_notify_resume (3 samples, 0.08%)</title><rect x="16.4734%" y="1157" width="0.0809%" height="15" fill="rgb(241,25,7)" fg:x="611" fg:w="3"/><text x="16.7234%" y="1167.50"></text></g><g><title>__get_user_8 (2 samples, 0.05%)</title><rect x="16.5004%" y="1141" width="0.0539%" height="15" fill="rgb(242,119,39)" fg:x="612" fg:w="2"/><text x="16.7504%" y="1151.50"></text></g><g><title>mem_cgroup_handle_over_high (1 samples, 0.03%)</title><rect x="16.5543%" y="1157" width="0.0270%" height="15" fill="rgb(241,98,45)" fg:x="614" fg:w="1"/><text x="16.8043%" y="1167.50"></text></g><g><title>entry_SYSCALL_64 (96 samples, 2.59%)</title><rect x="14.0739%" y="1221" width="2.5883%" height="15" fill="rgb(254,28,30)" fg:x="522" fg:w="96"/><text x="14.3239%" y="1231.50">en..</text></g><g><title>do_syscall_64 (94 samples, 2.53%)</title><rect x="14.1278%" y="1205" width="2.5344%" height="15" fill="rgb(241,142,54)" fg:x="524" fg:w="94"/><text x="14.3778%" y="1215.50">do..</text></g><g><title>syscall_exit_to_user_mode (10 samples, 0.27%)</title><rect x="16.3926%" y="1189" width="0.2696%" height="15" fill="rgb(222,85,15)" fg:x="608" fg:w="10"/><text x="16.6426%" y="1199.50"></text></g><g><title>exit_to_user_mode_prepare (10 samples, 0.27%)</title><rect x="16.3926%" y="1173" width="0.2696%" height="15" fill="rgb(210,85,47)" fg:x="608" fg:w="10"/><text x="16.6426%" y="1183.50"></text></g><g><title>switch_fpu_return (3 samples, 0.08%)</title><rect x="16.5813%" y="1157" width="0.0809%" height="15" fill="rgb(224,206,25)" fg:x="615" fg:w="3"/><text x="16.8313%" y="1167.50"></text></g><g><title>restore_fpregs_from_fpstate (3 samples, 0.08%)</title><rect x="16.5813%" y="1141" width="0.0809%" height="15" fill="rgb(243,201,19)" fg:x="615" fg:w="3"/><text x="16.8313%" y="1151.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (3 samples, 0.08%)</title><rect x="16.6622%" y="1221" width="0.0809%" height="15" fill="rgb(236,59,4)" fg:x="618" fg:w="3"/><text x="16.9122%" y="1231.50"></text></g><g><title>native_load_tls (1 samples, 0.03%)</title><rect x="16.7431%" y="1221" width="0.0270%" height="15" fill="rgb(254,179,45)" fg:x="621" fg:w="1"/><text x="16.9931%" y="1231.50"></text></g><g><title>save_fpregs_to_fpstate (1 samples, 0.03%)</title><rect x="16.7700%" y="1221" width="0.0270%" height="15" fill="rgb(226,14,10)" fg:x="622" fg:w="1"/><text x="17.0200%" y="1231.50"></text></g><g><title>kvlr_client::main (118 samples, 3.18%)</title><rect x="13.6695%" y="1429" width="3.1815%" height="15" fill="rgb(244,27,41)" fg:x="507" fg:w="118"/><text x="13.9195%" y="1439.50">kvl..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (118 samples, 3.18%)</title><rect x="13.6695%" y="1413" width="3.1815%" height="15" fill="rgb(235,35,32)" fg:x="507" fg:w="118"/><text x="13.9195%" y="1423.50">tok..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (118 samples, 3.18%)</title><rect x="13.6695%" y="1397" width="3.1815%" height="15" fill="rgb(218,68,31)" fg:x="507" fg:w="118"/><text x="13.9195%" y="1407.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (118 samples, 3.18%)</title><rect x="13.6695%" y="1381" width="3.1815%" height="15" fill="rgb(207,120,37)" fg:x="507" fg:w="118"/><text x="13.9195%" y="1391.50">tok..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (118 samples, 3.18%)</title><rect x="13.6695%" y="1365" width="3.1815%" height="15" fill="rgb(227,98,0)" fg:x="507" fg:w="118"/><text x="13.9195%" y="1375.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (118 samples, 3.18%)</title><rect x="13.6695%" y="1349" width="3.1815%" height="15" fill="rgb(207,7,3)" fg:x="507" fg:w="118"/><text x="13.9195%" y="1359.50">tok..</text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (118 samples, 3.18%)</title><rect x="13.6695%" y="1333" width="3.1815%" height="15" fill="rgb(206,98,19)" fg:x="507" fg:w="118"/><text x="13.9195%" y="1343.50">tok..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (118 samples, 3.18%)</title><rect x="13.6695%" y="1317" width="3.1815%" height="15" fill="rgb(217,5,26)" fg:x="507" fg:w="118"/><text x="13.9195%" y="1327.50">tok..</text></g><g><title>tokio::runtime::park::Inner::park (113 samples, 3.05%)</title><rect x="13.8043%" y="1301" width="3.0466%" height="15" fill="rgb(235,190,38)" fg:x="512" fg:w="113"/><text x="14.0543%" y="1311.50">tok..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (113 samples, 3.05%)</title><rect x="13.8043%" y="1285" width="3.0466%" height="15" fill="rgb(247,86,24)" fg:x="512" fg:w="113"/><text x="14.0543%" y="1295.50">tok..</text></g><g><title>parking_lot::condvar::Condvar::wait (113 samples, 3.05%)</title><rect x="13.8043%" y="1269" width="3.0466%" height="15" fill="rgb(205,101,16)" fg:x="512" fg:w="113"/><text x="14.0543%" y="1279.50">par..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (113 samples, 3.05%)</title><rect x="13.8043%" y="1253" width="3.0466%" height="15" fill="rgb(246,168,33)" fg:x="512" fg:w="113"/><text x="14.0543%" y="1263.50">par..</text></g><g><title>syscall (104 samples, 2.80%)</title><rect x="14.0469%" y="1237" width="2.8040%" height="15" fill="rgb(231,114,1)" fg:x="521" fg:w="104"/><text x="14.2969%" y="1247.50">sy..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.05%)</title><rect x="16.7970%" y="1221" width="0.0539%" height="15" fill="rgb(207,184,53)" fg:x="623" fg:w="2"/><text x="17.0470%" y="1231.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.08%)</title><rect x="16.8509%" y="1429" width="0.0809%" height="15" fill="rgb(224,95,51)" fg:x="625" fg:w="3"/><text x="17.1009%" y="1439.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.03%)</title><rect x="16.9318%" y="1429" width="0.0270%" height="15" fill="rgb(212,188,45)" fg:x="628" fg:w="1"/><text x="17.1818%" y="1439.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="16.9587%" y="1429" width="0.0270%" height="15" fill="rgb(223,154,38)" fg:x="629" fg:w="1"/><text x="17.2087%" y="1439.50"></text></g><g><title>calculate_sigpending (1 samples, 0.03%)</title><rect x="16.9857%" y="1397" width="0.0270%" height="15" fill="rgb(251,22,52)" fg:x="630" fg:w="1"/><text x="17.2357%" y="1407.50"></text></g><g><title>ret_from_fork (29 samples, 0.78%)</title><rect x="16.9857%" y="1413" width="0.7819%" height="15" fill="rgb(229,209,22)" fg:x="630" fg:w="29"/><text x="17.2357%" y="1423.50"></text></g><g><title>schedule_tail (28 samples, 0.75%)</title><rect x="17.0127%" y="1397" width="0.7549%" height="15" fill="rgb(234,138,34)" fg:x="631" fg:w="28"/><text x="17.2627%" y="1407.50"></text></g><g><title>finish_task_switch.isra.0 (28 samples, 0.75%)</title><rect x="17.0127%" y="1381" width="0.7549%" height="15" fill="rgb(212,95,11)" fg:x="631" fg:w="28"/><text x="17.2627%" y="1391.50"></text></g><g><title>__perf_event_task_sched_in (28 samples, 0.75%)</title><rect x="17.0127%" y="1365" width="0.7549%" height="15" fill="rgb(240,179,47)" fg:x="631" fg:w="28"/><text x="17.2627%" y="1375.50"></text></g><g><title>perf_ctx_enable (28 samples, 0.75%)</title><rect x="17.0127%" y="1349" width="0.7549%" height="15" fill="rgb(240,163,11)" fg:x="631" fg:w="28"/><text x="17.2627%" y="1359.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (27 samples, 0.73%)</title><rect x="17.0396%" y="1333" width="0.7280%" height="15" fill="rgb(236,37,12)" fg:x="632" fg:w="27"/><text x="17.2896%" y="1343.50"></text></g><g><title>native_write_msr (27 samples, 0.73%)</title><rect x="17.0396%" y="1317" width="0.7280%" height="15" fill="rgb(232,164,16)" fg:x="632" fg:w="27"/><text x="17.2896%" y="1327.50"></text></g><g><title>ret_from_fork_asm (30 samples, 0.81%)</title><rect x="16.9857%" y="1429" width="0.8088%" height="15" fill="rgb(244,205,15)" fg:x="630" fg:w="30"/><text x="17.2357%" y="1439.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="17.7676%" y="1413" width="0.0270%" height="15" fill="rgb(223,117,47)" fg:x="659" fg:w="1"/><text x="18.0176%" y="1423.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="17.7676%" y="1397" width="0.0270%" height="15" fill="rgb(244,107,35)" fg:x="659" fg:w="1"/><text x="18.0176%" y="1407.50"></text></g><g><title>switch_fpu_return (1 samples, 0.03%)</title><rect x="17.7676%" y="1381" width="0.0270%" height="15" fill="rgb(205,140,8)" fg:x="659" fg:w="1"/><text x="18.0176%" y="1391.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.03%)</title><rect x="17.7676%" y="1365" width="0.0270%" height="15" fill="rgb(228,84,46)" fg:x="659" fg:w="1"/><text x="18.0176%" y="1375.50"></text></g><g><title>rmp::encode::uint::write_uint (8 samples, 0.22%)</title><rect x="17.7946%" y="1429" width="0.2157%" height="15" fill="rgb(254,188,9)" fg:x="660" fg:w="8"/><text x="18.0446%" y="1439.50"></text></g><g><title>rmp::encode::write_marker (5 samples, 0.13%)</title><rect x="18.0102%" y="1429" width="0.1348%" height="15" fill="rgb(206,112,54)" fg:x="668" fg:w="5"/><text x="18.2602%" y="1439.50"></text></g><g><title>rmp::marker::Marker::to_u8 (10 samples, 0.27%)</title><rect x="18.1451%" y="1429" width="0.2696%" height="15" fill="rgb(216,84,49)" fg:x="673" fg:w="10"/><text x="18.3951%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::fs::file::State&gt; (1 samples, 0.03%)</title><rect x="18.6304%" y="1173" width="0.0270%" height="15" fill="rgb(214,194,35)" fg:x="691" fg:w="1"/><text x="18.8804%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;(tokio::fs::file::Operation,tokio::io::blocking::Buf)&gt;&gt; (1 samples, 0.03%)</title><rect x="18.6304%" y="1157" width="0.0270%" height="15" fill="rgb(249,28,3)" fg:x="691" fg:w="1"/><text x="18.8804%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="18.6304%" y="1141" width="0.0270%" height="15" fill="rgb(222,56,52)" fg:x="691" fg:w="1"/><text x="18.8804%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::drop_join_handle_slow (1 samples, 0.03%)</title><rect x="18.6304%" y="1125" width="0.0270%" height="15" fill="rgb(245,217,50)" fg:x="691" fg:w="1"/><text x="18.8804%" y="1135.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="18.6304%" y="1109" width="0.0270%" height="15" fill="rgb(213,201,24)" fg:x="691" fg:w="1"/><text x="18.8804%" y="1119.50"></text></g><g><title>tokio::io::blocking::Buf::copy_to (1 samples, 0.03%)</title><rect x="18.6573%" y="1173" width="0.0270%" height="15" fill="rgb(248,116,28)" fg:x="692" fg:w="1"/><text x="18.9073%" y="1183.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (1 samples, 0.03%)</title><rect x="18.6573%" y="1157" width="0.0270%" height="15" fill="rgb(219,72,43)" fg:x="692" fg:w="1"/><text x="18.9073%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.03%)</title><rect x="18.6573%" y="1141" width="0.0270%" height="15" fill="rgb(209,138,14)" fg:x="692" fg:w="1"/><text x="18.9073%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="18.6573%" y="1125" width="0.0270%" height="15" fill="rgb(222,18,33)" fg:x="692" fg:w="1"/><text x="18.9073%" y="1135.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.6573%" y="1109" width="0.0270%" height="15" fill="rgb(213,199,7)" fg:x="692" fg:w="1"/><text x="18.9073%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (1 samples, 0.03%)</title><rect x="18.6843%" y="1157" width="0.0270%" height="15" fill="rgb(250,110,10)" fg:x="693" fg:w="1"/><text x="18.9343%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (1 samples, 0.03%)</title><rect x="18.6843%" y="1141" width="0.0270%" height="15" fill="rgb(248,123,6)" fg:x="693" fg:w="1"/><text x="18.9343%" y="1151.50"></text></g><g><title>place_entity (1 samples, 0.03%)</title><rect x="18.7652%" y="837" width="0.0270%" height="15" fill="rgb(206,91,31)" fg:x="696" fg:w="1"/><text x="19.0152%" y="847.50"></text></g><g><title>avg_vruntime (1 samples, 0.03%)</title><rect x="18.7652%" y="821" width="0.0270%" height="15" fill="rgb(211,154,13)" fg:x="696" fg:w="1"/><text x="19.0152%" y="831.50"></text></g><g><title>enqueue_entity (3 samples, 0.08%)</title><rect x="18.7652%" y="853" width="0.0809%" height="15" fill="rgb(225,148,7)" fg:x="696" fg:w="3"/><text x="19.0152%" y="863.50"></text></g><g><title>update_load_avg (2 samples, 0.05%)</title><rect x="18.7921%" y="837" width="0.0539%" height="15" fill="rgb(220,160,43)" fg:x="697" fg:w="2"/><text x="19.0421%" y="847.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="18.8191%" y="821" width="0.0270%" height="15" fill="rgb(213,52,39)" fg:x="698" fg:w="1"/><text x="19.0691%" y="831.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.16%)</title><rect x="18.7112%" y="981" width="0.1618%" height="15" fill="rgb(243,137,7)" fg:x="694" fg:w="6"/><text x="18.9612%" y="991.50"></text></g><g><title>do_futex (6 samples, 0.16%)</title><rect x="18.7112%" y="965" width="0.1618%" height="15" fill="rgb(230,79,13)" fg:x="694" fg:w="6"/><text x="18.9612%" y="975.50"></text></g><g><title>futex_wake (6 samples, 0.16%)</title><rect x="18.7112%" y="949" width="0.1618%" height="15" fill="rgb(247,105,23)" fg:x="694" fg:w="6"/><text x="18.9612%" y="959.50"></text></g><g><title>wake_up_q (5 samples, 0.13%)</title><rect x="18.7382%" y="933" width="0.1348%" height="15" fill="rgb(223,179,41)" fg:x="695" fg:w="5"/><text x="18.9882%" y="943.50"></text></g><g><title>try_to_wake_up (5 samples, 0.13%)</title><rect x="18.7382%" y="917" width="0.1348%" height="15" fill="rgb(218,9,34)" fg:x="695" fg:w="5"/><text x="18.9882%" y="927.50"></text></g><g><title>ttwu_do_activate (5 samples, 0.13%)</title><rect x="18.7382%" y="901" width="0.1348%" height="15" fill="rgb(222,106,8)" fg:x="695" fg:w="5"/><text x="18.9882%" y="911.50"></text></g><g><title>enqueue_task (5 samples, 0.13%)</title><rect x="18.7382%" y="885" width="0.1348%" height="15" fill="rgb(211,220,0)" fg:x="695" fg:w="5"/><text x="18.9882%" y="895.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.13%)</title><rect x="18.7382%" y="869" width="0.1348%" height="15" fill="rgb(229,52,16)" fg:x="695" fg:w="5"/><text x="18.9882%" y="879.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="18.8461%" y="853" width="0.0270%" height="15" fill="rgb(212,155,18)" fg:x="699" fg:w="1"/><text x="19.0961%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.35%)</title><rect x="18.7112%" y="1013" width="0.3505%" height="15" fill="rgb(242,21,14)" fg:x="694" fg:w="13"/><text x="18.9612%" y="1023.50"></text></g><g><title>do_syscall_64 (13 samples, 0.35%)</title><rect x="18.7112%" y="997" width="0.3505%" height="15" fill="rgb(222,19,48)" fg:x="694" fg:w="13"/><text x="18.9612%" y="1007.50"></text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.19%)</title><rect x="18.8730%" y="981" width="0.1887%" height="15" fill="rgb(232,45,27)" fg:x="700" fg:w="7"/><text x="19.1230%" y="991.50"></text></g><g><title>exit_to_user_mode_prepare (7 samples, 0.19%)</title><rect x="18.8730%" y="965" width="0.1887%" height="15" fill="rgb(249,103,42)" fg:x="700" fg:w="7"/><text x="19.1230%" y="975.50"></text></g><g><title>schedule (7 samples, 0.19%)</title><rect x="18.8730%" y="949" width="0.1887%" height="15" fill="rgb(246,81,33)" fg:x="700" fg:w="7"/><text x="19.1230%" y="959.50"></text></g><g><title>__schedule (7 samples, 0.19%)</title><rect x="18.8730%" y="933" width="0.1887%" height="15" fill="rgb(252,33,42)" fg:x="700" fg:w="7"/><text x="19.1230%" y="943.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.19%)</title><rect x="18.8730%" y="917" width="0.1887%" height="15" fill="rgb(209,212,41)" fg:x="700" fg:w="7"/><text x="19.1230%" y="927.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.16%)</title><rect x="18.9000%" y="901" width="0.1618%" height="15" fill="rgb(207,154,6)" fg:x="701" fg:w="6"/><text x="19.1500%" y="911.50"></text></g><g><title>perf_ctx_enable (6 samples, 0.16%)</title><rect x="18.9000%" y="885" width="0.1618%" height="15" fill="rgb(223,64,47)" fg:x="701" fg:w="6"/><text x="19.1500%" y="895.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (6 samples, 0.16%)</title><rect x="18.9000%" y="869" width="0.1618%" height="15" fill="rgb(211,161,38)" fg:x="701" fg:w="6"/><text x="19.1500%" y="879.50"></text></g><g><title>native_write_msr (6 samples, 0.16%)</title><rect x="18.9000%" y="853" width="0.1618%" height="15" fill="rgb(219,138,40)" fg:x="701" fg:w="6"/><text x="19.1500%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (14 samples, 0.38%)</title><rect x="18.7112%" y="1093" width="0.3775%" height="15" fill="rgb(241,228,46)" fg:x="694" fg:w="14"/><text x="18.9612%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (14 samples, 0.38%)</title><rect x="18.7112%" y="1077" width="0.3775%" height="15" fill="rgb(223,209,38)" fg:x="694" fg:w="14"/><text x="18.9612%" y="1087.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.38%)</title><rect x="18.7112%" y="1061" width="0.3775%" height="15" fill="rgb(236,164,45)" fg:x="694" fg:w="14"/><text x="18.9612%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (14 samples, 0.38%)</title><rect x="18.7112%" y="1045" width="0.3775%" height="15" fill="rgb(231,15,5)" fg:x="694" fg:w="14"/><text x="18.9612%" y="1055.50"></text></g><g><title>syscall (14 samples, 0.38%)</title><rect x="18.7112%" y="1029" width="0.3775%" height="15" fill="rgb(252,35,15)" fg:x="694" fg:w="14"/><text x="18.9612%" y="1039.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.03%)</title><rect x="19.0617%" y="1013" width="0.0270%" height="15" fill="rgb(248,181,18)" fg:x="707" fg:w="1"/><text x="19.3117%" y="1023.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (15 samples, 0.40%)</title><rect x="18.7112%" y="1109" width="0.4044%" height="15" fill="rgb(233,39,42)" fg:x="694" fg:w="15"/><text x="18.9612%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 0.03%)</title><rect x="19.0887%" y="1093" width="0.0270%" height="15" fill="rgb(238,110,33)" fg:x="708" fg:w="1"/><text x="19.3387%" y="1103.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (1 samples, 0.03%)</title><rect x="19.0887%" y="1077" width="0.0270%" height="15" fill="rgb(233,195,10)" fg:x="708" fg:w="1"/><text x="19.3387%" y="1087.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.03%)</title><rect x="19.0887%" y="1061" width="0.0270%" height="15" fill="rgb(254,105,3)" fg:x="708" fg:w="1"/><text x="19.3387%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.03%)</title><rect x="19.0887%" y="1045" width="0.0270%" height="15" fill="rgb(221,225,9)" fg:x="708" fg:w="1"/><text x="19.3387%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="19.0887%" y="1029" width="0.0270%" height="15" fill="rgb(224,227,45)" fg:x="708" fg:w="1"/><text x="19.3387%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="19.0887%" y="1013" width="0.0270%" height="15" fill="rgb(229,198,43)" fg:x="708" fg:w="1"/><text x="19.3387%" y="1023.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (23 samples, 0.62%)</title><rect x="18.6034%" y="1205" width="0.6201%" height="15" fill="rgb(206,209,35)" fg:x="690" fg:w="23"/><text x="18.8534%" y="1215.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read (22 samples, 0.59%)</title><rect x="18.6304%" y="1189" width="0.5932%" height="15" fill="rgb(245,195,53)" fg:x="691" fg:w="22"/><text x="18.8804%" y="1199.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (20 samples, 0.54%)</title><rect x="18.6843%" y="1173" width="0.5392%" height="15" fill="rgb(240,92,26)" fg:x="693" fg:w="20"/><text x="18.9343%" y="1183.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (19 samples, 0.51%)</title><rect x="18.7112%" y="1157" width="0.5123%" height="15" fill="rgb(207,40,23)" fg:x="694" fg:w="19"/><text x="18.9612%" y="1167.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (19 samples, 0.51%)</title><rect x="18.7112%" y="1141" width="0.5123%" height="15" fill="rgb(223,111,35)" fg:x="694" fg:w="19"/><text x="18.9612%" y="1151.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (19 samples, 0.51%)</title><rect x="18.7112%" y="1125" width="0.5123%" height="15" fill="rgb(229,147,28)" fg:x="694" fg:w="19"/><text x="18.9612%" y="1135.50"></text></g><g><title>tokio::runtime::task::unowned (4 samples, 0.11%)</title><rect x="19.1157%" y="1109" width="0.1078%" height="15" fill="rgb(211,29,28)" fg:x="709" fg:w="4"/><text x="19.3657%" y="1119.50"></text></g><g><title>tokio::runtime::task::new_task (4 samples, 0.11%)</title><rect x="19.1157%" y="1093" width="0.1078%" height="15" fill="rgb(228,72,33)" fg:x="709" fg:w="4"/><text x="19.3657%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (4 samples, 0.11%)</title><rect x="19.1157%" y="1077" width="0.1078%" height="15" fill="rgb(205,214,31)" fg:x="709" fg:w="4"/><text x="19.3657%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (4 samples, 0.11%)</title><rect x="19.1157%" y="1061" width="0.1078%" height="15" fill="rgb(224,111,15)" fg:x="709" fg:w="4"/><text x="19.3657%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.11%)</title><rect x="19.1157%" y="1045" width="0.1078%" height="15" fill="rgb(253,21,26)" fg:x="709" fg:w="4"/><text x="19.3657%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.11%)</title><rect x="19.1157%" y="1029" width="0.1078%" height="15" fill="rgb(245,139,43)" fg:x="709" fg:w="4"/><text x="19.3657%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.11%)</title><rect x="19.1157%" y="1013" width="0.1078%" height="15" fill="rgb(252,170,7)" fg:x="709" fg:w="4"/><text x="19.3657%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.11%)</title><rect x="19.1157%" y="997" width="0.1078%" height="15" fill="rgb(231,118,14)" fg:x="709" fg:w="4"/><text x="19.3657%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.11%)</title><rect x="19.1157%" y="981" width="0.1078%" height="15" fill="rgb(238,83,0)" fg:x="709" fg:w="4"/><text x="19.3657%" y="991.50"></text></g><g><title>__rdl_alloc (4 samples, 0.11%)</title><rect x="19.1157%" y="965" width="0.1078%" height="15" fill="rgb(221,39,39)" fg:x="709" fg:w="4"/><text x="19.3657%" y="975.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.11%)</title><rect x="19.1157%" y="949" width="0.1078%" height="15" fill="rgb(222,119,46)" fg:x="709" fg:w="4"/><text x="19.3657%" y="959.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (4 samples, 0.11%)</title><rect x="19.1157%" y="933" width="0.1078%" height="15" fill="rgb(222,165,49)" fg:x="709" fg:w="4"/><text x="19.3657%" y="943.50"></text></g><g><title>posix_memalign (4 samples, 0.11%)</title><rect x="19.1157%" y="917" width="0.1078%" height="15" fill="rgb(219,113,52)" fg:x="709" fg:w="4"/><text x="19.3657%" y="927.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="19.1426%" y="901" width="0.0809%" height="15" fill="rgb(214,7,15)" fg:x="710" fg:w="3"/><text x="19.3926%" y="911.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (27 samples, 0.73%)</title><rect x="18.6034%" y="1253" width="0.7280%" height="15" fill="rgb(235,32,4)" fg:x="690" fg:w="27"/><text x="18.8534%" y="1263.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (27 samples, 0.73%)</title><rect x="18.6034%" y="1237" width="0.7280%" height="15" fill="rgb(238,90,54)" fg:x="690" fg:w="27"/><text x="18.8534%" y="1247.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (27 samples, 0.73%)</title><rect x="18.6034%" y="1221" width="0.7280%" height="15" fill="rgb(213,208,19)" fg:x="690" fg:w="27"/><text x="18.8534%" y="1231.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (4 samples, 0.11%)</title><rect x="19.2235%" y="1205" width="0.1078%" height="15" fill="rgb(233,156,4)" fg:x="713" fg:w="4"/><text x="19.4735%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (4 samples, 0.11%)</title><rect x="19.2235%" y="1189" width="0.1078%" height="15" fill="rgb(207,194,5)" fg:x="713" fg:w="4"/><text x="19.4735%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.11%)</title><rect x="19.2235%" y="1173" width="0.1078%" height="15" fill="rgb(206,111,30)" fg:x="713" fg:w="4"/><text x="19.4735%" y="1183.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="19.2235%" y="1157" width="0.1078%" height="15" fill="rgb(243,70,54)" fg:x="713" fg:w="4"/><text x="19.4735%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.03%)</title><rect x="19.3314%" y="1253" width="0.0270%" height="15" fill="rgb(242,28,8)" fg:x="717" fg:w="1"/><text x="19.5814%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.11%)</title><rect x="19.3583%" y="1253" width="0.1078%" height="15" fill="rgb(219,106,18)" fg:x="718" fg:w="4"/><text x="19.6083%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.11%)</title><rect x="19.3583%" y="1237" width="0.1078%" height="15" fill="rgb(244,222,10)" fg:x="718" fg:w="4"/><text x="19.6083%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.11%)</title><rect x="19.3583%" y="1221" width="0.1078%" height="15" fill="rgb(236,179,52)" fg:x="718" fg:w="4"/><text x="19.6083%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="19.3583%" y="1205" width="0.1078%" height="15" fill="rgb(213,23,39)" fg:x="718" fg:w="4"/><text x="19.6083%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="19.4392%" y="1189" width="0.0270%" height="15" fill="rgb(238,48,10)" fg:x="721" fg:w="1"/><text x="19.6892%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="19.4392%" y="1173" width="0.0270%" height="15" fill="rgb(251,196,23)" fg:x="721" fg:w="1"/><text x="19.6892%" y="1183.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="19.4392%" y="1157" width="0.0270%" height="15" fill="rgb(250,152,24)" fg:x="721" fg:w="1"/><text x="19.6892%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="19.4392%" y="1141" width="0.0270%" height="15" fill="rgb(209,150,17)" fg:x="721" fg:w="1"/><text x="19.6892%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.08%)</title><rect x="19.4662%" y="1237" width="0.0809%" height="15" fill="rgb(234,202,34)" fg:x="722" fg:w="3"/><text x="19.7162%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.08%)</title><rect x="19.4662%" y="1221" width="0.0809%" height="15" fill="rgb(253,148,53)" fg:x="722" fg:w="3"/><text x="19.7162%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.08%)</title><rect x="19.4662%" y="1205" width="0.0809%" height="15" fill="rgb(218,129,16)" fg:x="722" fg:w="3"/><text x="19.7162%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="19.4662%" y="1189" width="0.0809%" height="15" fill="rgb(216,85,19)" fg:x="722" fg:w="3"/><text x="19.7162%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.08%)</title><rect x="19.4662%" y="1173" width="0.0809%" height="15" fill="rgb(235,228,7)" fg:x="722" fg:w="3"/><text x="19.7162%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.08%)</title><rect x="19.4662%" y="1157" width="0.0809%" height="15" fill="rgb(245,175,0)" fg:x="722" fg:w="3"/><text x="19.7162%" y="1167.50"></text></g><g><title>cfree (3 samples, 0.08%)</title><rect x="19.4662%" y="1141" width="0.0809%" height="15" fill="rgb(208,168,36)" fg:x="722" fg:w="3"/><text x="19.7162%" y="1151.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="19.4931%" y="1125" width="0.0539%" height="15" fill="rgb(246,171,24)" fg:x="723" fg:w="2"/><text x="19.7431%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.13%)</title><rect x="19.5470%" y="1205" width="0.1348%" height="15" fill="rgb(215,142,24)" fg:x="725" fg:w="5"/><text x="19.7970%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (5 samples, 0.13%)</title><rect x="19.5470%" y="1189" width="0.1348%" height="15" fill="rgb(250,187,7)" fg:x="725" fg:w="5"/><text x="19.7970%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.13%)</title><rect x="19.5470%" y="1173" width="0.1348%" height="15" fill="rgb(228,66,33)" fg:x="725" fg:w="5"/><text x="19.7970%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.13%)</title><rect x="19.5470%" y="1157" width="0.1348%" height="15" fill="rgb(234,215,21)" fg:x="725" fg:w="5"/><text x="19.7970%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.13%)</title><rect x="19.5470%" y="1141" width="0.1348%" height="15" fill="rgb(222,191,20)" fg:x="725" fg:w="5"/><text x="19.7970%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.13%)</title><rect x="19.5470%" y="1125" width="0.1348%" height="15" fill="rgb(245,79,54)" fg:x="725" fg:w="5"/><text x="19.7970%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.11%)</title><rect x="19.5740%" y="1109" width="0.1078%" height="15" fill="rgb(240,10,37)" fg:x="726" fg:w="4"/><text x="19.8240%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.11%)</title><rect x="19.5740%" y="1093" width="0.1078%" height="15" fill="rgb(214,192,32)" fg:x="726" fg:w="4"/><text x="19.8240%" y="1103.50"></text></g><g><title>cfree (3 samples, 0.08%)</title><rect x="19.6010%" y="1077" width="0.0809%" height="15" fill="rgb(209,36,54)" fg:x="727" fg:w="3"/><text x="19.8510%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;human_format::Formatter&gt; (10 samples, 0.27%)</title><rect x="19.4662%" y="1253" width="0.2696%" height="15" fill="rgb(220,10,11)" fg:x="722" fg:w="10"/><text x="19.7162%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;human_format::Scales&gt; (7 samples, 0.19%)</title><rect x="19.5470%" y="1237" width="0.1887%" height="15" fill="rgb(221,106,17)" fg:x="725" fg:w="7"/><text x="19.7970%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (7 samples, 0.19%)</title><rect x="19.5470%" y="1221" width="0.1887%" height="15" fill="rgb(251,142,44)" fg:x="725" fg:w="7"/><text x="19.7970%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (2 samples, 0.05%)</title><rect x="19.6819%" y="1205" width="0.0539%" height="15" fill="rgb(238,13,15)" fg:x="730" fg:w="2"/><text x="19.9319%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="19.6819%" y="1189" width="0.0539%" height="15" fill="rgb(208,107,27)" fg:x="730" fg:w="2"/><text x="19.9319%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="19.6819%" y="1173" width="0.0539%" height="15" fill="rgb(205,136,37)" fg:x="730" fg:w="2"/><text x="19.9319%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="19.6819%" y="1157" width="0.0539%" height="15" fill="rgb(250,205,27)" fg:x="730" fg:w="2"/><text x="19.9319%" y="1167.50"></text></g><g><title>cfree (2 samples, 0.05%)</title><rect x="19.6819%" y="1141" width="0.0539%" height="15" fill="rgb(210,80,43)" fg:x="730" fg:w="2"/><text x="19.9319%" y="1151.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="19.7088%" y="1125" width="0.0270%" height="15" fill="rgb(247,160,36)" fg:x="731" fg:w="1"/><text x="19.9588%" y="1135.50"></text></g><g><title>core::time::Duration::as_secs_f64 (2 samples, 0.05%)</title><rect x="19.7358%" y="1253" width="0.0539%" height="15" fill="rgb(234,13,49)" fg:x="732" fg:w="2"/><text x="19.9858%" y="1263.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.03%)</title><rect x="19.7897%" y="1173" width="0.0270%" height="15" fill="rgb(234,122,0)" fg:x="734" fg:w="1"/><text x="20.0397%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="19.7897%" y="1157" width="0.0270%" height="15" fill="rgb(207,146,38)" fg:x="734" fg:w="1"/><text x="20.0397%" y="1167.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="19.7897%" y="1141" width="0.0270%" height="15" fill="rgb(207,177,25)" fg:x="734" fg:w="1"/><text x="20.0397%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="19.7897%" y="1125" width="0.0270%" height="15" fill="rgb(211,178,42)" fg:x="734" fg:w="1"/><text x="20.0397%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="19.7897%" y="1109" width="0.0270%" height="15" fill="rgb(230,69,54)" fg:x="734" fg:w="1"/><text x="20.0397%" y="1119.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="19.7897%" y="1093" width="0.0270%" height="15" fill="rgb(214,135,41)" fg:x="734" fg:w="1"/><text x="20.0397%" y="1103.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (1 samples, 0.03%)</title><rect x="19.7897%" y="1077" width="0.0270%" height="15" fill="rgb(237,67,25)" fg:x="734" fg:w="1"/><text x="20.0397%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="19.8167%" y="1125" width="0.0270%" height="15" fill="rgb(222,189,50)" fg:x="735" fg:w="1"/><text x="20.0667%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="19.8167%" y="1109" width="0.0270%" height="15" fill="rgb(245,148,34)" fg:x="735" fg:w="1"/><text x="20.0667%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="19.8975%" y="1093" width="0.0270%" height="15" fill="rgb(222,29,6)" fg:x="738" fg:w="1"/><text x="20.1475%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.03%)</title><rect x="19.9245%" y="949" width="0.0270%" height="15" fill="rgb(221,189,43)" fg:x="739" fg:w="1"/><text x="20.1745%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.11%)</title><rect x="19.9245%" y="1013" width="0.1078%" height="15" fill="rgb(207,36,27)" fg:x="739" fg:w="4"/><text x="20.1745%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.11%)</title><rect x="19.9245%" y="997" width="0.1078%" height="15" fill="rgb(217,90,24)" fg:x="739" fg:w="4"/><text x="20.1745%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.11%)</title><rect x="19.9245%" y="981" width="0.1078%" height="15" fill="rgb(224,66,35)" fg:x="739" fg:w="4"/><text x="20.1745%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.11%)</title><rect x="19.9245%" y="965" width="0.1078%" height="15" fill="rgb(221,13,50)" fg:x="739" fg:w="4"/><text x="20.1745%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.08%)</title><rect x="19.9515%" y="949" width="0.0809%" height="15" fill="rgb(236,68,49)" fg:x="740" fg:w="3"/><text x="20.2015%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.08%)</title><rect x="19.9515%" y="933" width="0.0809%" height="15" fill="rgb(229,146,28)" fg:x="740" fg:w="3"/><text x="20.2015%" y="943.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.08%)</title><rect x="19.9515%" y="917" width="0.0809%" height="15" fill="rgb(225,31,38)" fg:x="740" fg:w="3"/><text x="20.2015%" y="927.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.08%)</title><rect x="19.9515%" y="901" width="0.0809%" height="15" fill="rgb(250,208,3)" fg:x="740" fg:w="3"/><text x="20.2015%" y="911.50"></text></g><g><title>realloc (3 samples, 0.08%)</title><rect x="19.9515%" y="885" width="0.0809%" height="15" fill="rgb(246,54,23)" fg:x="740" fg:w="3"/><text x="20.2015%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="20.0054%" y="869" width="0.0270%" height="15" fill="rgb(243,76,11)" fg:x="742" fg:w="1"/><text x="20.2554%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.16%)</title><rect x="19.9245%" y="1093" width="0.1618%" height="15" fill="rgb(245,21,50)" fg:x="739" fg:w="6"/><text x="20.1745%" y="1103.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.16%)</title><rect x="19.9245%" y="1077" width="0.1618%" height="15" fill="rgb(228,9,43)" fg:x="739" fg:w="6"/><text x="20.1745%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.16%)</title><rect x="19.9245%" y="1061" width="0.1618%" height="15" fill="rgb(208,100,47)" fg:x="739" fg:w="6"/><text x="20.1745%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.16%)</title><rect x="19.9245%" y="1045" width="0.1618%" height="15" fill="rgb(232,26,8)" fg:x="739" fg:w="6"/><text x="20.1745%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.16%)</title><rect x="19.9245%" y="1029" width="0.1618%" height="15" fill="rgb(216,166,38)" fg:x="739" fg:w="6"/><text x="20.1745%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="20.0324%" y="1013" width="0.0539%" height="15" fill="rgb(251,202,51)" fg:x="743" fg:w="2"/><text x="20.2824%" y="1023.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="20.0324%" y="997" width="0.0539%" height="15" fill="rgb(254,216,34)" fg:x="743" fg:w="2"/><text x="20.2824%" y="1007.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="20.1672%" y="885" width="0.0270%" height="15" fill="rgb(251,32,27)" fg:x="748" fg:w="1"/><text x="20.4172%" y="895.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="20.1672%" y="869" width="0.0270%" height="15" fill="rgb(208,127,28)" fg:x="748" fg:w="1"/><text x="20.4172%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="20.1672%" y="965" width="0.0809%" height="15" fill="rgb(224,137,22)" fg:x="748" fg:w="3"/><text x="20.4172%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="20.1672%" y="949" width="0.0809%" height="15" fill="rgb(254,70,32)" fg:x="748" fg:w="3"/><text x="20.4172%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.08%)</title><rect x="20.1672%" y="933" width="0.0809%" height="15" fill="rgb(229,75,37)" fg:x="748" fg:w="3"/><text x="20.4172%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.08%)</title><rect x="20.1672%" y="917" width="0.0809%" height="15" fill="rgb(252,64,23)" fg:x="748" fg:w="3"/><text x="20.4172%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.08%)</title><rect x="20.1672%" y="901" width="0.0809%" height="15" fill="rgb(232,162,48)" fg:x="748" fg:w="3"/><text x="20.4172%" y="911.50"></text></g><g><title>malloc (2 samples, 0.05%)</title><rect x="20.1941%" y="885" width="0.0539%" height="15" fill="rgb(246,160,12)" fg:x="749" fg:w="2"/><text x="20.4441%" y="895.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="20.1941%" y="869" width="0.0539%" height="15" fill="rgb(247,166,0)" fg:x="749" fg:w="2"/><text x="20.4441%" y="879.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (7 samples, 0.19%)</title><rect x="20.0863%" y="1077" width="0.1887%" height="15" fill="rgb(249,219,21)" fg:x="745" fg:w="7"/><text x="20.3363%" y="1087.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (5 samples, 0.13%)</title><rect x="20.1402%" y="1061" width="0.1348%" height="15" fill="rgb(205,209,3)" fg:x="747" fg:w="5"/><text x="20.3902%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.11%)</title><rect x="20.1672%" y="1045" width="0.1078%" height="15" fill="rgb(243,44,1)" fg:x="748" fg:w="4"/><text x="20.4172%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.11%)</title><rect x="20.1672%" y="1029" width="0.1078%" height="15" fill="rgb(206,159,16)" fg:x="748" fg:w="4"/><text x="20.4172%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.11%)</title><rect x="20.1672%" y="1013" width="0.1078%" height="15" fill="rgb(244,77,30)" fg:x="748" fg:w="4"/><text x="20.4172%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.11%)</title><rect x="20.1672%" y="997" width="0.1078%" height="15" fill="rgb(218,69,12)" fg:x="748" fg:w="4"/><text x="20.4172%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.11%)</title><rect x="20.1672%" y="981" width="0.1078%" height="15" fill="rgb(212,87,7)" fg:x="748" fg:w="4"/><text x="20.4172%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="20.2480%" y="965" width="0.0270%" height="15" fill="rgb(245,114,25)" fg:x="751" fg:w="1"/><text x="20.4980%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="20.2480%" y="949" width="0.0270%" height="15" fill="rgb(210,61,42)" fg:x="751" fg:w="1"/><text x="20.4980%" y="959.50"></text></g><g><title>core::num::flt2dec::digits_to_dec_str (1 samples, 0.03%)</title><rect x="20.2750%" y="1061" width="0.0270%" height="15" fill="rgb(211,52,33)" fg:x="752" fg:w="1"/><text x="20.5250%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="20.3020%" y="997" width="0.0270%" height="15" fill="rgb(234,58,33)" fg:x="753" fg:w="1"/><text x="20.5520%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="20.3020%" y="981" width="0.0270%" height="15" fill="rgb(220,115,36)" fg:x="753" fg:w="1"/><text x="20.5520%" y="991.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (2 samples, 0.05%)</title><rect x="20.3020%" y="1029" width="0.0539%" height="15" fill="rgb(243,153,54)" fg:x="753" fg:w="2"/><text x="20.5520%" y="1039.50"></text></g><g><title>core::num::bignum::Big32x40::sub (2 samples, 0.05%)</title><rect x="20.3020%" y="1013" width="0.0539%" height="15" fill="rgb(251,47,18)" fg:x="753" fg:w="2"/><text x="20.5520%" y="1023.50"></text></g><g><title>core::num::&lt;impl u32&gt;::carrying_add (1 samples, 0.03%)</title><rect x="20.3289%" y="997" width="0.0270%" height="15" fill="rgb(242,102,42)" fg:x="754" fg:w="1"/><text x="20.5789%" y="1007.50"></text></g><g><title>core::num::diy_float::Fp::mul (7 samples, 0.19%)</title><rect x="20.3559%" y="1013" width="0.1887%" height="15" fill="rgb(234,31,38)" fg:x="755" fg:w="7"/><text x="20.6059%" y="1023.50"></text></g><g><title>asm_sysvec_reschedule_ipi (6 samples, 0.16%)</title><rect x="20.3829%" y="997" width="0.1618%" height="15" fill="rgb(221,117,51)" fg:x="756" fg:w="6"/><text x="20.6329%" y="1007.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.16%)</title><rect x="20.3829%" y="981" width="0.1618%" height="15" fill="rgb(212,20,18)" fg:x="756" fg:w="6"/><text x="20.6329%" y="991.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.16%)</title><rect x="20.3829%" y="965" width="0.1618%" height="15" fill="rgb(245,133,36)" fg:x="756" fg:w="6"/><text x="20.6329%" y="975.50"></text></g><g><title>schedule (6 samples, 0.16%)</title><rect x="20.3829%" y="949" width="0.1618%" height="15" fill="rgb(212,6,19)" fg:x="756" fg:w="6"/><text x="20.6329%" y="959.50"></text></g><g><title>__schedule (6 samples, 0.16%)</title><rect x="20.3829%" y="933" width="0.1618%" height="15" fill="rgb(218,1,36)" fg:x="756" fg:w="6"/><text x="20.6329%" y="943.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.16%)</title><rect x="20.3829%" y="917" width="0.1618%" height="15" fill="rgb(246,84,54)" fg:x="756" fg:w="6"/><text x="20.6329%" y="927.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.16%)</title><rect x="20.3829%" y="901" width="0.1618%" height="15" fill="rgb(242,110,6)" fg:x="756" fg:w="6"/><text x="20.6329%" y="911.50"></text></g><g><title>perf_ctx_enable (6 samples, 0.16%)</title><rect x="20.3829%" y="885" width="0.1618%" height="15" fill="rgb(214,47,5)" fg:x="756" fg:w="6"/><text x="20.6329%" y="895.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (6 samples, 0.16%)</title><rect x="20.3829%" y="869" width="0.1618%" height="15" fill="rgb(218,159,25)" fg:x="756" fg:w="6"/><text x="20.6329%" y="879.50"></text></g><g><title>native_write_msr (6 samples, 0.16%)</title><rect x="20.3829%" y="853" width="0.1618%" height="15" fill="rgb(215,211,28)" fg:x="756" fg:w="6"/><text x="20.6329%" y="863.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::cached_power (1 samples, 0.03%)</title><rect x="20.5446%" y="1013" width="0.0270%" height="15" fill="rgb(238,59,32)" fg:x="762" fg:w="1"/><text x="20.7946%" y="1023.50"></text></g><g><title>alloc::fmt::format (30 samples, 0.81%)</title><rect x="19.7897%" y="1237" width="0.8088%" height="15" fill="rgb(226,82,3)" fg:x="734" fg:w="30"/><text x="20.0397%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (30 samples, 0.81%)</title><rect x="19.7897%" y="1221" width="0.8088%" height="15" fill="rgb(240,164,32)" fg:x="734" fg:w="30"/><text x="20.0397%" y="1231.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (30 samples, 0.81%)</title><rect x="19.7897%" y="1205" width="0.8088%" height="15" fill="rgb(232,46,7)" fg:x="734" fg:w="30"/><text x="20.0397%" y="1215.50"></text></g><g><title>alloc::fmt::format::format_inner (30 samples, 0.81%)</title><rect x="19.7897%" y="1189" width="0.8088%" height="15" fill="rgb(229,129,53)" fg:x="734" fg:w="30"/><text x="20.0397%" y="1199.50"></text></g><g><title>core::fmt::Write::write_fmt (29 samples, 0.78%)</title><rect x="19.8167%" y="1173" width="0.7819%" height="15" fill="rgb(234,188,29)" fg:x="735" fg:w="29"/><text x="20.0667%" y="1183.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (29 samples, 0.78%)</title><rect x="19.8167%" y="1157" width="0.7819%" height="15" fill="rgb(246,141,4)" fg:x="735" fg:w="29"/><text x="20.0667%" y="1167.50"></text></g><g><title>core::fmt::write (29 samples, 0.78%)</title><rect x="19.8167%" y="1141" width="0.7819%" height="15" fill="rgb(229,23,39)" fg:x="735" fg:w="29"/><text x="20.0667%" y="1151.50"></text></g><g><title>core::fmt::run (28 samples, 0.75%)</title><rect x="19.8436%" y="1125" width="0.7549%" height="15" fill="rgb(206,12,3)" fg:x="736" fg:w="28"/><text x="20.0936%" y="1135.50"></text></g><g><title>core::fmt::rt::Argument::fmt (26 samples, 0.70%)</title><rect x="19.8975%" y="1109" width="0.7010%" height="15" fill="rgb(252,226,20)" fg:x="738" fg:w="26"/><text x="20.1475%" y="1119.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (19 samples, 0.51%)</title><rect x="20.0863%" y="1093" width="0.5123%" height="15" fill="rgb(216,123,35)" fg:x="745" fg:w="19"/><text x="20.3363%" y="1103.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (12 samples, 0.32%)</title><rect x="20.2750%" y="1077" width="0.3235%" height="15" fill="rgb(212,68,40)" fg:x="752" fg:w="12"/><text x="20.5250%" y="1087.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 0.30%)</title><rect x="20.3020%" y="1061" width="0.2966%" height="15" fill="rgb(254,125,32)" fg:x="753" fg:w="11"/><text x="20.5520%" y="1071.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (11 samples, 0.30%)</title><rect x="20.3020%" y="1045" width="0.2966%" height="15" fill="rgb(253,97,22)" fg:x="753" fg:w="11"/><text x="20.5520%" y="1055.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (9 samples, 0.24%)</title><rect x="20.3559%" y="1029" width="0.2427%" height="15" fill="rgb(241,101,14)" fg:x="755" fg:w="9"/><text x="20.6059%" y="1039.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (1 samples, 0.03%)</title><rect x="20.5716%" y="1013" width="0.0270%" height="15" fill="rgb(238,103,29)" fg:x="763" fg:w="1"/><text x="20.8216%" y="1023.50"></text></g><g><title>human_format::Formatter::format (33 samples, 0.89%)</title><rect x="19.7897%" y="1253" width="0.8897%" height="15" fill="rgb(233,195,47)" fg:x="734" fg:w="33"/><text x="20.0397%" y="1263.50"></text></g><g><title>human_format::Scales::to_scaled_value (3 samples, 0.08%)</title><rect x="20.5985%" y="1237" width="0.0809%" height="15" fill="rgb(246,218,30)" fg:x="764" fg:w="3"/><text x="20.8485%" y="1247.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.03%)</title><rect x="20.6525%" y="1221" width="0.0270%" height="15" fill="rgb(219,145,47)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1231.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="20.6525%" y="1205" width="0.0270%" height="15" fill="rgb(243,12,26)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="20.6525%" y="1189" width="0.0270%" height="15" fill="rgb(214,87,16)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="20.6525%" y="1173" width="0.0270%" height="15" fill="rgb(208,99,42)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="20.6525%" y="1157" width="0.0270%" height="15" fill="rgb(253,99,2)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="20.6525%" y="1141" width="0.0270%" height="15" fill="rgb(220,168,23)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="20.6525%" y="1125" width="0.0270%" height="15" fill="rgb(242,38,24)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="20.6525%" y="1109" width="0.0270%" height="15" fill="rgb(225,182,9)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="20.6525%" y="1093" width="0.0270%" height="15" fill="rgb(243,178,37)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="20.6525%" y="1077" width="0.0270%" height="15" fill="rgb(232,139,19)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="20.6525%" y="1061" width="0.0270%" height="15" fill="rgb(225,201,24)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="20.6525%" y="1045" width="0.0270%" height="15" fill="rgb(221,47,46)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1055.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="20.6525%" y="1029" width="0.0270%" height="15" fill="rgb(249,23,13)" fg:x="766" fg:w="1"/><text x="20.9025%" y="1039.50"></text></g><g><title>__rdl_alloc (2 samples, 0.05%)</title><rect x="20.6794%" y="1029" width="0.0539%" height="15" fill="rgb(219,9,5)" fg:x="767" fg:w="2"/><text x="20.9294%" y="1039.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="20.7064%" y="1013" width="0.0270%" height="15" fill="rgb(254,171,16)" fg:x="768" fg:w="1"/><text x="20.9564%" y="1023.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="20.7334%" y="1029" width="0.0270%" height="15" fill="rgb(230,171,20)" fg:x="769" fg:w="1"/><text x="20.9834%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.11%)</title><rect x="20.6794%" y="1221" width="0.1078%" height="15" fill="rgb(210,71,41)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.11%)</title><rect x="20.6794%" y="1205" width="0.1078%" height="15" fill="rgb(206,173,20)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.11%)</title><rect x="20.6794%" y="1189" width="0.1078%" height="15" fill="rgb(233,88,34)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.11%)</title><rect x="20.6794%" y="1173" width="0.1078%" height="15" fill="rgb(223,209,46)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.11%)</title><rect x="20.6794%" y="1157" width="0.1078%" height="15" fill="rgb(250,43,18)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.11%)</title><rect x="20.6794%" y="1141" width="0.1078%" height="15" fill="rgb(208,13,10)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="20.6794%" y="1125" width="0.1078%" height="15" fill="rgb(212,200,36)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="20.6794%" y="1109" width="0.1078%" height="15" fill="rgb(225,90,30)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.11%)</title><rect x="20.6794%" y="1093" width="0.1078%" height="15" fill="rgb(236,182,39)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.11%)</title><rect x="20.6794%" y="1077" width="0.1078%" height="15" fill="rgb(212,144,35)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.11%)</title><rect x="20.6794%" y="1061" width="0.1078%" height="15" fill="rgb(228,63,44)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.11%)</title><rect x="20.6794%" y="1045" width="0.1078%" height="15" fill="rgb(228,109,6)" fg:x="767" fg:w="4"/><text x="20.9294%" y="1055.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="20.7603%" y="1029" width="0.0270%" height="15" fill="rgb(238,117,24)" fg:x="770" fg:w="1"/><text x="21.0103%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.05%)</title><rect x="20.7873%" y="1205" width="0.0539%" height="15" fill="rgb(242,26,26)" fg:x="771" fg:w="2"/><text x="21.0373%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.05%)</title><rect x="20.7873%" y="1189" width="0.0539%" height="15" fill="rgb(221,92,48)" fg:x="771" fg:w="2"/><text x="21.0373%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.05%)</title><rect x="20.7873%" y="1173" width="0.0539%" height="15" fill="rgb(209,209,32)" fg:x="771" fg:w="2"/><text x="21.0373%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.05%)</title><rect x="20.7873%" y="1157" width="0.0539%" height="15" fill="rgb(221,70,22)" fg:x="771" fg:w="2"/><text x="21.0373%" y="1167.50"></text></g><g><title>malloc (2 samples, 0.05%)</title><rect x="20.7873%" y="1141" width="0.0539%" height="15" fill="rgb(248,145,5)" fg:x="771" fg:w="2"/><text x="21.0373%" y="1151.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="20.8412%" y="1013" width="0.0270%" height="15" fill="rgb(226,116,26)" fg:x="773" fg:w="1"/><text x="21.0912%" y="1023.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="20.8412%" y="997" width="0.0270%" height="15" fill="rgb(244,5,17)" fg:x="773" fg:w="1"/><text x="21.0912%" y="1007.50"></text></g><g><title>human_format::Formatter::new (16 samples, 0.43%)</title><rect x="20.6794%" y="1253" width="0.4314%" height="15" fill="rgb(252,159,33)" fg:x="767" fg:w="16"/><text x="20.9294%" y="1263.50"></text></g><g><title>&lt;human_format::Formatter as core::default::Default&gt;::default (16 samples, 0.43%)</title><rect x="20.6794%" y="1237" width="0.4314%" height="15" fill="rgb(206,71,0)" fg:x="767" fg:w="16"/><text x="20.9294%" y="1247.50"></text></g><g><title>human_format::Scales::SI (12 samples, 0.32%)</title><rect x="20.7873%" y="1221" width="0.3235%" height="15" fill="rgb(233,118,54)" fg:x="771" fg:w="12"/><text x="21.0373%" y="1231.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (10 samples, 0.27%)</title><rect x="20.8412%" y="1205" width="0.2696%" height="15" fill="rgb(234,83,48)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (10 samples, 0.27%)</title><rect x="20.8412%" y="1189" width="0.2696%" height="15" fill="rgb(228,3,54)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.27%)</title><rect x="20.8412%" y="1173" width="0.2696%" height="15" fill="rgb(226,155,13)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.27%)</title><rect x="20.8412%" y="1157" width="0.2696%" height="15" fill="rgb(241,28,37)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.27%)</title><rect x="20.8412%" y="1141" width="0.2696%" height="15" fill="rgb(233,93,10)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.27%)</title><rect x="20.8412%" y="1125" width="0.2696%" height="15" fill="rgb(225,113,19)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.27%)</title><rect x="20.8412%" y="1109" width="0.2696%" height="15" fill="rgb(241,2,18)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.27%)</title><rect x="20.8412%" y="1093" width="0.2696%" height="15" fill="rgb(228,207,21)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (10 samples, 0.27%)</title><rect x="20.8412%" y="1077" width="0.2696%" height="15" fill="rgb(213,211,35)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.27%)</title><rect x="20.8412%" y="1061" width="0.2696%" height="15" fill="rgb(209,83,10)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.27%)</title><rect x="20.8412%" y="1045" width="0.2696%" height="15" fill="rgb(209,164,1)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.27%)</title><rect x="20.8412%" y="1029" width="0.2696%" height="15" fill="rgb(213,184,43)" fg:x="773" fg:w="10"/><text x="21.0912%" y="1039.50"></text></g><g><title>malloc (9 samples, 0.24%)</title><rect x="20.8682%" y="1013" width="0.2427%" height="15" fill="rgb(231,61,34)" fg:x="774" fg:w="9"/><text x="21.1182%" y="1023.50"></text></g><g><title>[libc.so.6] (5 samples, 0.13%)</title><rect x="20.9760%" y="997" width="0.1348%" height="15" fill="rgb(235,75,3)" fg:x="778" fg:w="5"/><text x="21.2260%" y="1007.50"></text></g><g><title>human_format::Formatter::with_units (2 samples, 0.05%)</title><rect x="21.1108%" y="1253" width="0.0539%" height="15" fill="rgb(220,106,47)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1263.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.05%)</title><rect x="21.1108%" y="1237" width="0.0539%" height="15" fill="rgb(210,196,33)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.05%)</title><rect x="21.1108%" y="1221" width="0.0539%" height="15" fill="rgb(229,154,42)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.05%)</title><rect x="21.1108%" y="1205" width="0.0539%" height="15" fill="rgb(228,114,26)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.05%)</title><rect x="21.1108%" y="1189" width="0.0539%" height="15" fill="rgb(208,144,1)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.05%)</title><rect x="21.1108%" y="1173" width="0.0539%" height="15" fill="rgb(239,112,37)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.05%)</title><rect x="21.1108%" y="1157" width="0.0539%" height="15" fill="rgb(210,96,50)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1167.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.05%)</title><rect x="21.1108%" y="1141" width="0.0539%" height="15" fill="rgb(222,178,2)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="21.1108%" y="1125" width="0.0539%" height="15" fill="rgb(226,74,18)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1135.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="21.1108%" y="1109" width="0.0539%" height="15" fill="rgb(225,67,54)" fg:x="783" fg:w="2"/><text x="21.3608%" y="1119.50"></text></g><g><title>kvlr::connection::Connection::send_handshake::_{{closure}} (1 samples, 0.03%)</title><rect x="21.1647%" y="1253" width="0.0270%" height="15" fill="rgb(251,92,32)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1263.50"></text></g><g><title>kvlr::connection::Connection::wait_for_data::_{{closure}} (1 samples, 0.03%)</title><rect x="21.1647%" y="1237" width="0.0270%" height="15" fill="rgb(228,149,22)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1247.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="21.1647%" y="1221" width="0.0270%" height="15" fill="rgb(243,54,13)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1231.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="21.1647%" y="1205" width="0.0270%" height="15" fill="rgb(243,180,28)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="21.1647%" y="1189" width="0.0270%" height="15" fill="rgb(208,167,24)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1199.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="21.1647%" y="1173" width="0.0270%" height="15" fill="rgb(245,73,45)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1183.50"></text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (1 samples, 0.03%)</title><rect x="21.1647%" y="1157" width="0.0270%" height="15" fill="rgb(237,203,48)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1167.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (1 samples, 0.03%)</title><rect x="21.1647%" y="1141" width="0.0270%" height="15" fill="rgb(211,197,16)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="21.1647%" y="1125" width="0.0270%" height="15" fill="rgb(243,99,51)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1135.50"></text></g><g><title>&lt;tokio_rustls::client::TlsStream&lt;IO&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="21.1647%" y="1109" width="0.0270%" height="15" fill="rgb(215,123,29)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1119.50"></text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="21.1647%" y="1093" width="0.0270%" height="15" fill="rgb(239,186,37)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1103.50"></text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::read_io (1 samples, 0.03%)</title><rect x="21.1647%" y="1077" width="0.0270%" height="15" fill="rgb(252,136,39)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1087.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::read_tls (1 samples, 0.03%)</title><rect x="21.1647%" y="1061" width="0.0270%" height="15" fill="rgb(223,213,32)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1071.50"></text></g><g><title>rustls::msgs::deframer::buffers::DeframerVecBuffer::read (1 samples, 0.03%)</title><rect x="21.1647%" y="1045" width="0.0270%" height="15" fill="rgb(233,115,5)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1055.50"></text></g><g><title>&lt;tokio_rustls::common::SyncReadAdapter&lt;T&gt; as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="21.1647%" y="1029" width="0.0270%" height="15" fill="rgb(207,226,44)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1039.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="21.1647%" y="1013" width="0.0270%" height="15" fill="rgb(208,126,0)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1023.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.03%)</title><rect x="21.1647%" y="997" width="0.0270%" height="15" fill="rgb(244,66,21)" fg:x="785" fg:w="1"/><text x="21.4147%" y="1007.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="21.1647%" y="981" width="0.0270%" height="15" fill="rgb(222,97,12)" fg:x="785" fg:w="1"/><text x="21.4147%" y="991.50"></text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="21.1647%" y="965" width="0.0270%" height="15" fill="rgb(219,213,19)" fg:x="785" fg:w="1"/><text x="21.4147%" y="975.50"></text></g><g><title>recv (1 samples, 0.03%)</title><rect x="21.1647%" y="949" width="0.0270%" height="15" fill="rgb(252,169,30)" fg:x="785" fg:w="1"/><text x="21.4147%" y="959.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="21.1647%" y="933" width="0.0270%" height="15" fill="rgb(206,32,51)" fg:x="785" fg:w="1"/><text x="21.4147%" y="943.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="21.1647%" y="917" width="0.0270%" height="15" fill="rgb(250,172,42)" fg:x="785" fg:w="1"/><text x="21.4147%" y="927.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="21.1647%" y="901" width="0.0270%" height="15" fill="rgb(209,34,43)" fg:x="785" fg:w="1"/><text x="21.4147%" y="911.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="21.1647%" y="885" width="0.0270%" height="15" fill="rgb(223,11,35)" fg:x="785" fg:w="1"/><text x="21.4147%" y="895.50"></text></g><g><title>sock_recvmsg (1 samples, 0.03%)</title><rect x="21.1647%" y="869" width="0.0270%" height="15" fill="rgb(251,219,26)" fg:x="785" fg:w="1"/><text x="21.4147%" y="879.50"></text></g><g><title>inet_recvmsg (1 samples, 0.03%)</title><rect x="21.1647%" y="853" width="0.0270%" height="15" fill="rgb(231,119,3)" fg:x="785" fg:w="1"/><text x="21.4147%" y="863.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.03%)</title><rect x="21.1647%" y="837" width="0.0270%" height="15" fill="rgb(216,97,11)" fg:x="785" fg:w="1"/><text x="21.4147%" y="847.50"></text></g><g><title>tcp_recvmsg_locked (1 samples, 0.03%)</title><rect x="21.1647%" y="821" width="0.0270%" height="15" fill="rgb(223,59,9)" fg:x="785" fg:w="1"/><text x="21.4147%" y="831.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="21.1647%" y="805" width="0.0270%" height="15" fill="rgb(233,93,31)" fg:x="785" fg:w="1"/><text x="21.4147%" y="815.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="21.1647%" y="789" width="0.0270%" height="15" fill="rgb(239,81,33)" fg:x="785" fg:w="1"/><text x="21.4147%" y="799.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="21.1647%" y="773" width="0.0270%" height="15" fill="rgb(213,120,34)" fg:x="785" fg:w="1"/><text x="21.4147%" y="783.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.03%)</title><rect x="21.1647%" y="757" width="0.0270%" height="15" fill="rgb(243,49,53)" fg:x="785" fg:w="1"/><text x="21.4147%" y="767.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="21.1647%" y="741" width="0.0270%" height="15" fill="rgb(247,216,33)" fg:x="785" fg:w="1"/><text x="21.4147%" y="751.50"></text></g><g><title>do_softirq.part.0 (1 samples, 0.03%)</title><rect x="21.1647%" y="725" width="0.0270%" height="15" fill="rgb(226,26,14)" fg:x="785" fg:w="1"/><text x="21.4147%" y="735.50"></text></g><g><title>handle_softirqs (1 samples, 0.03%)</title><rect x="21.1647%" y="709" width="0.0270%" height="15" fill="rgb(215,49,53)" fg:x="785" fg:w="1"/><text x="21.4147%" y="719.50"></text></g><g><title>net_rx_action (1 samples, 0.03%)</title><rect x="21.1647%" y="693" width="0.0270%" height="15" fill="rgb(245,162,40)" fg:x="785" fg:w="1"/><text x="21.4147%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="21.1917%" y="1173" width="0.0270%" height="15" fill="rgb(229,68,17)" fg:x="786" fg:w="1"/><text x="21.4417%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="21.1917%" y="1157" width="0.0270%" height="15" fill="rgb(213,182,10)" fg:x="786" fg:w="1"/><text x="21.4417%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="21.1917%" y="1141" width="0.0270%" height="15" fill="rgb(245,125,30)" fg:x="786" fg:w="1"/><text x="21.4417%" y="1151.50"></text></g><g><title>&lt;kvlr::rpc::rpc_manager::RpcManager as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="21.1917%" y="1237" width="0.0539%" height="15" fill="rgb(232,202,2)" fg:x="786" fg:w="2"/><text x="21.4417%" y="1247.50"></text></g><g><title>&lt;kvlr::connection::ConnectionFrameSender as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="21.1917%" y="1221" width="0.0539%" height="15" fill="rgb(237,140,51)" fg:x="786" fg:w="2"/><text x="21.4417%" y="1231.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="21.1917%" y="1205" width="0.0539%" height="15" fill="rgb(236,157,25)" fg:x="786" fg:w="2"/><text x="21.4417%" y="1215.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="21.1917%" y="1189" width="0.0539%" height="15" fill="rgb(219,209,0)" fg:x="786" fg:w="2"/><text x="21.4417%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="21.2187%" y="1173" width="0.0270%" height="15" fill="rgb(240,116,54)" fg:x="787" fg:w="1"/><text x="21.4687%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="21.2187%" y="1157" width="0.0270%" height="15" fill="rgb(216,10,36)" fg:x="787" fg:w="1"/><text x="21.4687%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;kvlr::streaming::client::Stream&gt; (2 samples, 0.05%)</title><rect x="21.2456%" y="1237" width="0.0539%" height="15" fill="rgb(222,72,44)" fg:x="788" fg:w="2"/><text x="21.4956%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="21.2456%" y="1221" width="0.0539%" height="15" fill="rgb(232,159,9)" fg:x="788" fg:w="2"/><text x="21.4956%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="21.2456%" y="1205" width="0.0539%" height="15" fill="rgb(210,39,32)" fg:x="788" fg:w="2"/><text x="21.4956%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="21.2456%" y="1189" width="0.0539%" height="15" fill="rgb(216,194,45)" fg:x="788" fg:w="2"/><text x="21.4956%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="21.2456%" y="1173" width="0.0539%" height="15" fill="rgb(218,18,35)" fg:x="788" fg:w="2"/><text x="21.4956%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="21.2456%" y="1157" width="0.0539%" height="15" fill="rgb(207,83,51)" fg:x="788" fg:w="2"/><text x="21.4956%" y="1167.50"></text></g><g><title>cfree (2 samples, 0.05%)</title><rect x="21.2456%" y="1141" width="0.0539%" height="15" fill="rgb(225,63,43)" fg:x="788" fg:w="2"/><text x="21.4956%" y="1151.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="21.2456%" y="1125" width="0.0539%" height="15" fill="rgb(207,57,36)" fg:x="788" fg:w="2"/><text x="21.4956%" y="1135.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="21.2726%" y="1109" width="0.0270%" height="15" fill="rgb(216,99,33)" fg:x="789" fg:w="1"/><text x="21.5226%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;kvlr::rpc::rpc_manager::RpcManager&gt; (1 samples, 0.03%)</title><rect x="21.2995%" y="1221" width="0.0270%" height="15" fill="rgb(225,42,16)" fg:x="790" fg:w="1"/><text x="21.5495%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;kvlr::connection::ConnectionFrameSender&gt; (1 samples, 0.03%)</title><rect x="21.2995%" y="1205" width="0.0270%" height="15" fill="rgb(220,201,45)" fg:x="790" fg:w="1"/><text x="21.5495%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;(kvlr::connection::frame::Frame,tokio::sync::oneshot::Sender&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;)&gt;&gt; (1 samples, 0.03%)</title><rect x="21.2995%" y="1189" width="0.0270%" height="15" fill="rgb(225,33,4)" fg:x="790" fg:w="1"/><text x="21.5495%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::chan::Tx&lt;(kvlr::connection::frame::Frame,tokio::sync::oneshot::Sender&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;),tokio::sync::mpsc::bounded::Semaphore&gt;&gt; (1 samples, 0.03%)</title><rect x="21.2995%" y="1173" width="0.0270%" height="15" fill="rgb(224,33,50)" fg:x="790" fg:w="1"/><text x="21.5495%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::mpsc::chan::Chan&lt;(kvlr::connection::frame::Frame,tokio::sync::oneshot::Sender&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;),tokio::sync::mpsc::bounded::Semaphore&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="21.2995%" y="1157" width="0.0270%" height="15" fill="rgb(246,198,51)" fg:x="790" fg:w="1"/><text x="21.5495%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="21.2995%" y="1141" width="0.0270%" height="15" fill="rgb(205,22,4)" fg:x="790" fg:w="1"/><text x="21.5495%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.03%)</title><rect x="21.2995%" y="1125" width="0.0270%" height="15" fill="rgb(206,3,8)" fg:x="790" fg:w="1"/><text x="21.5495%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.03%)</title><rect x="21.2995%" y="1109" width="0.0270%" height="15" fill="rgb(251,23,15)" fg:x="790" fg:w="1"/><text x="21.5495%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;kvlr::rpc::rpc_manager::RpcManager::call_raw::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="21.4613%" y="1205" width="0.0270%" height="15" fill="rgb(252,88,28)" fg:x="796" fg:w="1"/><text x="21.7113%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;u32&gt;&gt; (1 samples, 0.03%)</title><rect x="21.4883%" y="1205" width="0.0270%" height="15" fill="rgb(212,127,14)" fg:x="797" fg:w="1"/><text x="21.7383%" y="1215.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="21.4883%" y="1189" width="0.0270%" height="15" fill="rgb(247,145,37)" fg:x="797" fg:w="1"/><text x="21.7383%" y="1199.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.03%)</title><rect x="21.4883%" y="1173" width="0.0270%" height="15" fill="rgb(209,117,53)" fg:x="797" fg:w="1"/><text x="21.7383%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.03%)</title><rect x="21.4883%" y="1157" width="0.0270%" height="15" fill="rgb(212,90,42)" fg:x="797" fg:w="1"/><text x="21.7383%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.03%)</title><rect x="21.4883%" y="1141" width="0.0270%" height="15" fill="rgb(218,164,37)" fg:x="797" fg:w="1"/><text x="21.7383%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Receiver&lt;core::result::Result&lt;alloc::vec::Vec&lt;u8&gt;,kvlr::rpc::InternalServerError&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="21.5152%" y="1205" width="0.0270%" height="15" fill="rgb(246,65,34)" fg:x="798" fg:w="1"/><text x="21.7652%" y="1215.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="21.5152%" y="1189" width="0.0270%" height="15" fill="rgb(231,100,33)" fg:x="798" fg:w="1"/><text x="21.7652%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::close (1 samples, 0.03%)</title><rect x="21.5152%" y="1173" width="0.0270%" height="15" fill="rgb(228,126,14)" fg:x="798" fg:w="1"/><text x="21.7652%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::State::set_closed (1 samples, 0.03%)</title><rect x="21.5152%" y="1157" width="0.0270%" height="15" fill="rgb(215,173,21)" fg:x="798" fg:w="1"/><text x="21.7652%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.03%)</title><rect x="21.5152%" y="1141" width="0.0270%" height="15" fill="rgb(210,6,40)" fg:x="798" fg:w="1"/><text x="21.7652%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.03%)</title><rect x="21.5152%" y="1125" width="0.0270%" height="15" fill="rgb(212,48,18)" fg:x="798" fg:w="1"/><text x="21.7652%" y="1135.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.03%)</title><rect x="21.5692%" y="1189" width="0.0270%" height="15" fill="rgb(230,214,11)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.03%)</title><rect x="21.5692%" y="1173" width="0.0270%" height="15" fill="rgb(254,105,39)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1183.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.03%)</title><rect x="21.5692%" y="1157" width="0.0270%" height="15" fill="rgb(245,158,5)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.03%)</title><rect x="21.5692%" y="1141" width="0.0270%" height="15" fill="rgb(249,208,11)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.03%)</title><rect x="21.5692%" y="1125" width="0.0270%" height="15" fill="rgb(210,39,28)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="21.5692%" y="1109" width="0.0270%" height="15" fill="rgb(211,56,53)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="21.5692%" y="1093" width="0.0270%" height="15" fill="rgb(226,201,30)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="21.5692%" y="1077" width="0.0270%" height="15" fill="rgb(239,101,34)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="21.5692%" y="1061" width="0.0270%" height="15" fill="rgb(226,209,5)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="21.5692%" y="1045" width="0.0270%" height="15" fill="rgb(250,105,47)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="21.5692%" y="1029" width="0.0270%" height="15" fill="rgb(230,72,3)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="21.5692%" y="1013" width="0.0270%" height="15" fill="rgb(232,218,39)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="21.5692%" y="997" width="0.0270%" height="15" fill="rgb(248,166,6)" fg:x="800" fg:w="1"/><text x="21.8192%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="21.5692%" y="981" width="0.0270%" height="15" fill="rgb(247,89,20)" fg:x="800" fg:w="1"/><text x="21.8192%" y="991.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="21.5692%" y="965" width="0.0270%" height="15" fill="rgb(248,130,54)" fg:x="800" fg:w="1"/><text x="21.8192%" y="975.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="21.5961%" y="1125" width="0.0270%" height="15" fill="rgb(234,196,4)" fg:x="801" fg:w="1"/><text x="21.8461%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.05%)</title><rect x="21.5961%" y="1189" width="0.0539%" height="15" fill="rgb(250,143,31)" fg:x="801" fg:w="2"/><text x="21.8461%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.05%)</title><rect x="21.5961%" y="1173" width="0.0539%" height="15" fill="rgb(211,110,34)" fg:x="801" fg:w="2"/><text x="21.8461%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.05%)</title><rect x="21.5961%" y="1157" width="0.0539%" height="15" fill="rgb(215,124,48)" fg:x="801" fg:w="2"/><text x="21.8461%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.05%)</title><rect x="21.5961%" y="1141" width="0.0539%" height="15" fill="rgb(216,46,13)" fg:x="801" fg:w="2"/><text x="21.8461%" y="1151.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="21.6231%" y="1125" width="0.0270%" height="15" fill="rgb(205,184,25)" fg:x="802" fg:w="1"/><text x="21.8731%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.13%)</title><rect x="21.6500%" y="1157" width="0.1348%" height="15" fill="rgb(228,1,10)" fg:x="803" fg:w="5"/><text x="21.9000%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.13%)</title><rect x="21.6500%" y="1141" width="0.1348%" height="15" fill="rgb(213,116,27)" fg:x="803" fg:w="5"/><text x="21.9000%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.13%)</title><rect x="21.6500%" y="1125" width="0.1348%" height="15" fill="rgb(241,95,50)" fg:x="803" fg:w="5"/><text x="21.9000%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.13%)</title><rect x="21.6500%" y="1109" width="0.1348%" height="15" fill="rgb(238,48,32)" fg:x="803" fg:w="5"/><text x="21.9000%" y="1119.50"></text></g><g><title>[libc.so.6] (5 samples, 0.13%)</title><rect x="21.6500%" y="1093" width="0.1348%" height="15" fill="rgb(235,113,49)" fg:x="803" fg:w="5"/><text x="21.9000%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (8 samples, 0.22%)</title><rect x="21.6500%" y="1189" width="0.2157%" height="15" fill="rgb(205,127,43)" fg:x="803" fg:w="8"/><text x="21.9000%" y="1199.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (8 samples, 0.22%)</title><rect x="21.6500%" y="1173" width="0.2157%" height="15" fill="rgb(250,162,2)" fg:x="803" fg:w="8"/><text x="21.9000%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.08%)</title><rect x="21.7848%" y="1157" width="0.0809%" height="15" fill="rgb(220,13,41)" fg:x="808" fg:w="3"/><text x="22.0348%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.08%)</title><rect x="21.7848%" y="1141" width="0.0809%" height="15" fill="rgb(249,221,25)" fg:x="808" fg:w="3"/><text x="22.0348%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.08%)</title><rect x="21.7848%" y="1125" width="0.0809%" height="15" fill="rgb(215,208,19)" fg:x="808" fg:w="3"/><text x="22.0348%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.08%)</title><rect x="21.7848%" y="1109" width="0.0809%" height="15" fill="rgb(236,175,2)" fg:x="808" fg:w="3"/><text x="22.0348%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.08%)</title><rect x="21.7848%" y="1093" width="0.0809%" height="15" fill="rgb(241,52,2)" fg:x="808" fg:w="3"/><text x="22.0348%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.08%)</title><rect x="21.7848%" y="1077" width="0.0809%" height="15" fill="rgb(248,140,14)" fg:x="808" fg:w="3"/><text x="22.0348%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.08%)</title><rect x="21.7848%" y="1061" width="0.0809%" height="15" fill="rgb(253,22,42)" fg:x="808" fg:w="3"/><text x="22.0348%" y="1071.50"></text></g><g><title>malloc (3 samples, 0.08%)</title><rect x="21.7848%" y="1045" width="0.0809%" height="15" fill="rgb(234,61,47)" fg:x="808" fg:w="3"/><text x="22.0348%" y="1055.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="21.7848%" y="1029" width="0.0809%" height="15" fill="rgb(208,226,15)" fg:x="808" fg:w="3"/><text x="22.0348%" y="1039.50"></text></g><g><title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="21.8388%" y="1013" width="0.0270%" height="15" fill="rgb(217,221,4)" fg:x="810" fg:w="1"/><text x="22.0888%" y="1023.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="21.8388%" y="997" width="0.0270%" height="15" fill="rgb(212,174,34)" fg:x="810" fg:w="1"/><text x="22.0888%" y="1007.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="21.8388%" y="981" width="0.0270%" height="15" fill="rgb(253,83,4)" fg:x="810" fg:w="1"/><text x="22.0888%" y="991.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="21.8388%" y="965" width="0.0270%" height="15" fill="rgb(250,195,49)" fg:x="810" fg:w="1"/><text x="22.0888%" y="975.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="21.8388%" y="949" width="0.0270%" height="15" fill="rgb(241,192,25)" fg:x="810" fg:w="1"/><text x="22.0888%" y="959.50"></text></g><g><title>psi_task_switch (1 samples, 0.03%)</title><rect x="21.8388%" y="933" width="0.0270%" height="15" fill="rgb(208,124,10)" fg:x="810" fg:w="1"/><text x="22.0888%" y="943.50"></text></g><g><title>psi_group_change (1 samples, 0.03%)</title><rect x="21.8388%" y="917" width="0.0270%" height="15" fill="rgb(222,33,0)" fg:x="810" fg:w="1"/><text x="22.0888%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.11%)</title><rect x="21.8657%" y="1189" width="0.1078%" height="15" fill="rgb(234,209,28)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.11%)</title><rect x="21.8657%" y="1173" width="0.1078%" height="15" fill="rgb(224,11,23)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.11%)</title><rect x="21.8657%" y="1157" width="0.1078%" height="15" fill="rgb(232,99,1)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.11%)</title><rect x="21.8657%" y="1141" width="0.1078%" height="15" fill="rgb(237,95,45)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="21.8657%" y="1125" width="0.1078%" height="15" fill="rgb(208,109,11)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="21.8657%" y="1109" width="0.1078%" height="15" fill="rgb(216,190,48)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.11%)</title><rect x="21.8657%" y="1093" width="0.1078%" height="15" fill="rgb(251,171,36)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.11%)</title><rect x="21.8657%" y="1077" width="0.1078%" height="15" fill="rgb(230,62,22)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.11%)</title><rect x="21.8657%" y="1061" width="0.1078%" height="15" fill="rgb(225,114,35)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.11%)</title><rect x="21.8657%" y="1045" width="0.1078%" height="15" fill="rgb(215,118,42)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1055.50"></text></g><g><title>malloc (4 samples, 0.11%)</title><rect x="21.8657%" y="1029" width="0.1078%" height="15" fill="rgb(243,119,21)" fg:x="811" fg:w="4"/><text x="22.1157%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;: 4]&gt; (9 samples, 0.24%)</title><rect x="21.9736%" y="1189" width="0.2427%" height="15" fill="rgb(252,177,53)" fg:x="815" fg:w="9"/><text x="22.2236%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.24%)</title><rect x="21.9736%" y="1173" width="0.2427%" height="15" fill="rgb(237,209,29)" fg:x="815" fg:w="9"/><text x="22.2236%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.24%)</title><rect x="21.9736%" y="1157" width="0.2427%" height="15" fill="rgb(212,65,23)" fg:x="815" fg:w="9"/><text x="22.2236%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.24%)</title><rect x="21.9736%" y="1141" width="0.2427%" height="15" fill="rgb(230,222,46)" fg:x="815" fg:w="9"/><text x="22.2236%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.19%)</title><rect x="22.0275%" y="1125" width="0.1887%" height="15" fill="rgb(215,135,32)" fg:x="817" fg:w="7"/><text x="22.2775%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.19%)</title><rect x="22.0275%" y="1109" width="0.1887%" height="15" fill="rgb(246,101,22)" fg:x="817" fg:w="7"/><text x="22.2775%" y="1119.50"></text></g><g><title>cfree (7 samples, 0.19%)</title><rect x="22.0275%" y="1093" width="0.1887%" height="15" fill="rgb(206,107,13)" fg:x="817" fg:w="7"/><text x="22.2775%" y="1103.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="22.1353%" y="1077" width="0.0809%" height="15" fill="rgb(250,100,44)" fg:x="821" fg:w="3"/><text x="22.3853%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="22.1893%" y="1061" width="0.0270%" height="15" fill="rgb(231,147,38)" fg:x="823" fg:w="1"/><text x="22.4393%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="22.1893%" y="1045" width="0.0270%" height="15" fill="rgb(229,8,40)" fg:x="823" fg:w="1"/><text x="22.4393%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.03%)</title><rect x="22.3780%" y="1109" width="0.0270%" height="15" fill="rgb(221,135,30)" fg:x="830" fg:w="1"/><text x="22.6280%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="22.3780%" y="1093" width="0.0270%" height="15" fill="rgb(249,193,18)" fg:x="830" fg:w="1"/><text x="22.6280%" y="1103.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="22.3780%" y="1077" width="0.0270%" height="15" fill="rgb(209,133,39)" fg:x="830" fg:w="1"/><text x="22.6280%" y="1087.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task (1 samples, 0.03%)</title><rect x="22.3780%" y="1061" width="0.0270%" height="15" fill="rgb(232,100,14)" fg:x="830" fg:w="1"/><text x="22.6280%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.03%)</title><rect x="22.3780%" y="1045" width="0.0270%" height="15" fill="rgb(224,185,1)" fg:x="830" fg:w="1"/><text x="22.6280%" y="1055.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task::_{{closure}} (1 samples, 0.03%)</title><rect x="22.3780%" y="1029" width="0.0270%" height="15" fill="rgb(223,139,8)" fg:x="830" fg:w="1"/><text x="22.6280%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.03%)</title><rect x="22.3780%" y="1013" width="0.0270%" height="15" fill="rgb(232,213,38)" fg:x="830" fg:w="1"/><text x="22.6280%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.03%)</title><rect x="22.3780%" y="997" width="0.0270%" height="15" fill="rgb(207,94,22)" fg:x="830" fg:w="1"/><text x="22.6280%" y="1007.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="22.3780%" y="981" width="0.0270%" height="15" fill="rgb(219,183,54)" fg:x="830" fg:w="1"/><text x="22.6280%" y="991.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="22.4050%" y="1109" width="0.0270%" height="15" fill="rgb(216,185,54)" fg:x="831" fg:w="1"/><text x="22.6550%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="22.3780%" y="1157" width="0.0809%" height="15" fill="rgb(254,217,39)" fg:x="830" fg:w="3"/><text x="22.6280%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="22.3780%" y="1141" width="0.0809%" height="15" fill="rgb(240,178,23)" fg:x="830" fg:w="3"/><text x="22.6280%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="22.3780%" y="1125" width="0.0809%" height="15" fill="rgb(218,11,47)" fg:x="830" fg:w="3"/><text x="22.6280%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.03%)</title><rect x="22.4319%" y="1109" width="0.0270%" height="15" fill="rgb(218,51,51)" fg:x="832" fg:w="1"/><text x="22.6819%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.03%)</title><rect x="22.4319%" y="1093" width="0.0270%" height="15" fill="rgb(238,126,27)" fg:x="832" fg:w="1"/><text x="22.6819%" y="1103.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (1 samples, 0.03%)</title><rect x="22.4589%" y="1125" width="0.0270%" height="15" fill="rgb(249,202,22)" fg:x="833" fg:w="1"/><text x="22.7089%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::runtime::coop::RestoreOnPending&gt;&gt; (1 samples, 0.03%)</title><rect x="22.4589%" y="1109" width="0.0270%" height="15" fill="rgb(254,195,49)" fg:x="833" fg:w="1"/><text x="22.7089%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (1 samples, 0.03%)</title><rect x="22.4589%" y="1093" width="0.0270%" height="15" fill="rgb(208,123,14)" fg:x="833" fg:w="1"/><text x="22.7089%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="22.4589%" y="1077" width="0.0270%" height="15" fill="rgb(224,200,8)" fg:x="833" fg:w="1"/><text x="22.7089%" y="1087.50"></text></g><g><title>tokio::runtime::coop::Budget::is_unconstrained (1 samples, 0.03%)</title><rect x="22.4589%" y="1061" width="0.0270%" height="15" fill="rgb(217,61,36)" fg:x="833" fg:w="1"/><text x="22.7089%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.03%)</title><rect x="22.4589%" y="1045" width="0.0270%" height="15" fill="rgb(206,35,45)" fg:x="833" fg:w="1"/><text x="22.7089%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="22.4589%" y="1029" width="0.0270%" height="15" fill="rgb(217,65,33)" fg:x="833" fg:w="1"/><text x="22.7089%" y="1039.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (2 samples, 0.05%)</title><rect x="22.4589%" y="1141" width="0.0539%" height="15" fill="rgb(222,158,48)" fg:x="833" fg:w="2"/><text x="22.7089%" y="1151.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.03%)</title><rect x="22.4858%" y="1125" width="0.0270%" height="15" fill="rgb(254,2,54)" fg:x="834" fg:w="1"/><text x="22.7358%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="22.4858%" y="1109" width="0.0270%" height="15" fill="rgb(250,143,38)" fg:x="834" fg:w="1"/><text x="22.7358%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="22.4858%" y="1093" width="0.0270%" height="15" fill="rgb(248,25,0)" fg:x="834" fg:w="1"/><text x="22.7358%" y="1103.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1 samples, 0.03%)</title><rect x="22.4858%" y="1077" width="0.0270%" height="15" fill="rgb(206,152,27)" fg:x="834" fg:w="1"/><text x="22.7358%" y="1087.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="22.4858%" y="1061" width="0.0270%" height="15" fill="rgb(240,77,30)" fg:x="834" fg:w="1"/><text x="22.7358%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="22.4858%" y="1045" width="0.0270%" height="15" fill="rgb(231,5,3)" fg:x="834" fg:w="1"/><text x="22.7358%" y="1055.50"></text></g><g><title>tokio::sync::oneshot::State::load (1 samples, 0.03%)</title><rect x="22.5128%" y="1141" width="0.0270%" height="15" fill="rgb(207,226,32)" fg:x="835" fg:w="1"/><text x="22.7628%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="22.5128%" y="1125" width="0.0270%" height="15" fill="rgb(222,207,47)" fg:x="835" fg:w="1"/><text x="22.7628%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="22.5128%" y="1109" width="0.0270%" height="15" fill="rgb(229,115,45)" fg:x="835" fg:w="1"/><text x="22.7628%" y="1119.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.27%)</title><rect x="22.3780%" y="1173" width="0.2696%" height="15" fill="rgb(224,191,6)" fg:x="830" fg:w="10"/><text x="22.6280%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (7 samples, 0.19%)</title><rect x="22.4589%" y="1157" width="0.1887%" height="15" fill="rgb(230,227,24)" fg:x="833" fg:w="7"/><text x="22.7089%" y="1167.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (4 samples, 0.11%)</title><rect x="22.5398%" y="1141" width="0.1078%" height="15" fill="rgb(228,80,19)" fg:x="836" fg:w="4"/><text x="22.7898%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.11%)</title><rect x="22.5398%" y="1125" width="0.1078%" height="15" fill="rgb(247,229,0)" fg:x="836" fg:w="4"/><text x="22.7898%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::_{{closure}} (4 samples, 0.11%)</title><rect x="22.5398%" y="1109" width="0.1078%" height="15" fill="rgb(237,194,15)" fg:x="836" fg:w="4"/><text x="22.7898%" y="1119.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (4 samples, 0.11%)</title><rect x="22.5398%" y="1093" width="0.1078%" height="15" fill="rgb(219,203,20)" fg:x="836" fg:w="4"/><text x="22.7898%" y="1103.50"></text></g><g><title>tokio::runtime::park::clone (3 samples, 0.08%)</title><rect x="22.5667%" y="1077" width="0.0809%" height="15" fill="rgb(234,128,8)" fg:x="837" fg:w="3"/><text x="22.8167%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::increment_strong_count (3 samples, 0.08%)</title><rect x="22.5667%" y="1061" width="0.0809%" height="15" fill="rgb(248,202,8)" fg:x="837" fg:w="3"/><text x="22.8167%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::increment_strong_count_in (3 samples, 0.08%)</title><rect x="22.5667%" y="1045" width="0.0809%" height="15" fill="rgb(206,104,37)" fg:x="837" fg:w="3"/><text x="22.8167%" y="1055.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.08%)</title><rect x="22.5667%" y="1029" width="0.0809%" height="15" fill="rgb(223,8,27)" fg:x="837" fg:w="3"/><text x="22.8167%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.08%)</title><rect x="22.5667%" y="1013" width="0.0809%" height="15" fill="rgb(216,217,28)" fg:x="837" fg:w="3"/><text x="22.8167%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.08%)</title><rect x="22.5667%" y="997" width="0.0809%" height="15" fill="rgb(249,199,1)" fg:x="837" fg:w="3"/><text x="22.8167%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.08%)</title><rect x="22.5667%" y="981" width="0.0809%" height="15" fill="rgb(240,85,17)" fg:x="837" fg:w="3"/><text x="22.8167%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (1 samples, 0.03%)</title><rect x="22.6746%" y="1093" width="0.0270%" height="15" fill="rgb(206,108,45)" fg:x="841" fg:w="1"/><text x="22.9246%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.03%)</title><rect x="22.6746%" y="1077" width="0.0270%" height="15" fill="rgb(245,210,41)" fg:x="841" fg:w="1"/><text x="22.9246%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.03%)</title><rect x="22.6746%" y="1061" width="0.0270%" height="15" fill="rgb(206,13,37)" fg:x="841" fg:w="1"/><text x="22.9246%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.03%)</title><rect x="22.6746%" y="1045" width="0.0270%" height="15" fill="rgb(250,61,18)" fg:x="841" fg:w="1"/><text x="22.9246%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.03%)</title><rect x="22.7555%" y="981" width="0.0270%" height="15" fill="rgb(235,172,48)" fg:x="844" fg:w="1"/><text x="23.0055%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.03%)</title><rect x="22.7555%" y="965" width="0.0270%" height="15" fill="rgb(249,201,17)" fg:x="844" fg:w="1"/><text x="23.0055%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (2 samples, 0.05%)</title><rect x="22.7555%" y="997" width="0.0539%" height="15" fill="rgb(219,208,6)" fg:x="844" fg:w="2"/><text x="23.0055%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (1 samples, 0.03%)</title><rect x="22.7824%" y="981" width="0.0270%" height="15" fill="rgb(248,31,23)" fg:x="845" fg:w="1"/><text x="23.0324%" y="991.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (1 samples, 0.03%)</title><rect x="22.7824%" y="965" width="0.0270%" height="15" fill="rgb(245,15,42)" fg:x="845" fg:w="1"/><text x="23.0324%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.03%)</title><rect x="22.7824%" y="949" width="0.0270%" height="15" fill="rgb(222,217,39)" fg:x="845" fg:w="1"/><text x="23.0324%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.03%)</title><rect x="22.7824%" y="933" width="0.0270%" height="15" fill="rgb(210,219,27)" fg:x="845" fg:w="1"/><text x="23.0324%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="22.8094%" y="997" width="0.0270%" height="15" fill="rgb(252,166,36)" fg:x="846" fg:w="1"/><text x="23.0594%" y="1007.50"></text></g><g><title>clock_gettime (1 samples, 0.03%)</title><rect x="22.8094%" y="981" width="0.0270%" height="15" fill="rgb(245,132,34)" fg:x="846" fg:w="1"/><text x="23.0594%" y="991.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="22.8094%" y="965" width="0.0270%" height="15" fill="rgb(236,54,3)" fg:x="846" fg:w="1"/><text x="23.0594%" y="975.50"></text></g><g><title>__switch_to_asm (1 samples, 0.03%)</title><rect x="22.8633%" y="981" width="0.0270%" height="15" fill="rgb(241,173,43)" fg:x="848" fg:w="1"/><text x="23.1133%" y="991.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="22.8903%" y="981" width="0.0270%" height="15" fill="rgb(215,190,9)" fg:x="849" fg:w="1"/><text x="23.1403%" y="991.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="22.8903%" y="965" width="0.0270%" height="15" fill="rgb(242,101,16)" fg:x="849" fg:w="1"/><text x="23.1403%" y="975.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="22.8903%" y="949" width="0.0270%" height="15" fill="rgb(223,190,21)" fg:x="849" fg:w="1"/><text x="23.1403%" y="959.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="22.8903%" y="933" width="0.0270%" height="15" fill="rgb(215,228,25)" fg:x="849" fg:w="1"/><text x="23.1403%" y="943.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="22.8903%" y="917" width="0.0270%" height="15" fill="rgb(225,36,22)" fg:x="849" fg:w="1"/><text x="23.1403%" y="927.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="22.8903%" y="901" width="0.0270%" height="15" fill="rgb(251,106,46)" fg:x="849" fg:w="1"/><text x="23.1403%" y="911.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="22.8903%" y="885" width="0.0270%" height="15" fill="rgb(208,90,1)" fg:x="849" fg:w="1"/><text x="23.1403%" y="895.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="22.8903%" y="869" width="0.0270%" height="15" fill="rgb(243,10,4)" fg:x="849" fg:w="1"/><text x="23.1403%" y="879.50"></text></g><g><title>irqtime_account_process_tick (1 samples, 0.03%)</title><rect x="22.8903%" y="853" width="0.0270%" height="15" fill="rgb(212,137,27)" fg:x="849" fg:w="1"/><text x="23.1403%" y="863.50"></text></g><g><title>raw_spin_rq_lock_nested (2 samples, 0.05%)</title><rect x="23.1060%" y="869" width="0.0539%" height="15" fill="rgb(231,220,49)" fg:x="857" fg:w="2"/><text x="23.3560%" y="879.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="23.1060%" y="853" width="0.0539%" height="15" fill="rgb(237,96,20)" fg:x="857" fg:w="2"/><text x="23.3560%" y="863.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="23.1329%" y="837" width="0.0270%" height="15" fill="rgb(239,229,30)" fg:x="858" fg:w="1"/><text x="23.3829%" y="847.50"></text></g><g><title>_find_next_and_bit (1 samples, 0.03%)</title><rect x="23.2408%" y="853" width="0.0270%" height="15" fill="rgb(219,65,33)" fg:x="862" fg:w="1"/><text x="23.4908%" y="863.50"></text></g><g><title>select_task_rq_fair (5 samples, 0.13%)</title><rect x="23.1599%" y="869" width="0.1348%" height="15" fill="rgb(243,134,7)" fg:x="859" fg:w="5"/><text x="23.4099%" y="879.50"></text></g><g><title>task_h_load (1 samples, 0.03%)</title><rect x="23.2677%" y="853" width="0.0270%" height="15" fill="rgb(216,177,54)" fg:x="863" fg:w="1"/><text x="23.5177%" y="863.50"></text></g><g><title>check_preempt_curr (1 samples, 0.03%)</title><rect x="23.2947%" y="853" width="0.0270%" height="15" fill="rgb(211,160,20)" fg:x="864" fg:w="1"/><text x="23.5447%" y="863.50"></text></g><g><title>check_preempt_wakeup (1 samples, 0.03%)</title><rect x="23.2947%" y="837" width="0.0270%" height="15" fill="rgb(239,85,39)" fg:x="864" fg:w="1"/><text x="23.5447%" y="847.50"></text></g><g><title>__pick_eevdf (1 samples, 0.03%)</title><rect x="23.2947%" y="821" width="0.0270%" height="15" fill="rgb(232,125,22)" fg:x="864" fg:w="1"/><text x="23.5447%" y="831.50"></text></g><g><title>__enqueue_entity (2 samples, 0.05%)</title><rect x="23.3756%" y="805" width="0.0539%" height="15" fill="rgb(244,57,34)" fg:x="867" fg:w="2"/><text x="23.6256%" y="815.50"></text></g><g><title>enqueue_entity (5 samples, 0.13%)</title><rect x="23.3756%" y="821" width="0.1348%" height="15" fill="rgb(214,203,32)" fg:x="867" fg:w="5"/><text x="23.6256%" y="831.50"></text></g><g><title>update_curr (3 samples, 0.08%)</title><rect x="23.4295%" y="805" width="0.0809%" height="15" fill="rgb(207,58,43)" fg:x="869" fg:w="3"/><text x="23.6795%" y="815.50"></text></g><g><title>cpuacct_charge (2 samples, 0.05%)</title><rect x="23.4565%" y="789" width="0.0539%" height="15" fill="rgb(215,193,15)" fg:x="870" fg:w="2"/><text x="23.7065%" y="799.50"></text></g><g><title>reweight_entity (4 samples, 0.11%)</title><rect x="23.5104%" y="821" width="0.1078%" height="15" fill="rgb(232,15,44)" fg:x="872" fg:w="4"/><text x="23.7604%" y="831.50"></text></g><g><title>avg_vruntime (2 samples, 0.05%)</title><rect x="23.5643%" y="805" width="0.0539%" height="15" fill="rgb(212,3,48)" fg:x="874" fg:w="2"/><text x="23.8143%" y="815.50"></text></g><g><title>enqueue_task_fair (13 samples, 0.35%)</title><rect x="23.3486%" y="837" width="0.3505%" height="15" fill="rgb(218,128,7)" fg:x="866" fg:w="13"/><text x="23.5986%" y="847.50"></text></g><g><title>update_load_avg (3 samples, 0.08%)</title><rect x="23.6182%" y="821" width="0.0809%" height="15" fill="rgb(226,216,39)" fg:x="876" fg:w="3"/><text x="23.8682%" y="831.50"></text></g><g><title>hrtick_update (1 samples, 0.03%)</title><rect x="23.6991%" y="837" width="0.0270%" height="15" fill="rgb(243,47,51)" fg:x="879" fg:w="1"/><text x="23.9491%" y="847.50"></text></g><g><title>ttwu_do_activate (23 samples, 0.62%)</title><rect x="23.2947%" y="869" width="0.6201%" height="15" fill="rgb(241,183,40)" fg:x="864" fg:w="23"/><text x="23.5447%" y="879.50"></text></g><g><title>enqueue_task (22 samples, 0.59%)</title><rect x="23.3217%" y="853" width="0.5932%" height="15" fill="rgb(231,217,32)" fg:x="865" fg:w="22"/><text x="23.5717%" y="863.50"></text></g><g><title>psi_task_change (7 samples, 0.19%)</title><rect x="23.7261%" y="837" width="0.1887%" height="15" fill="rgb(229,61,38)" fg:x="880" fg:w="7"/><text x="23.9761%" y="847.50"></text></g><g><title>psi_group_change (6 samples, 0.16%)</title><rect x="23.7530%" y="821" width="0.1618%" height="15" fill="rgb(225,210,5)" fg:x="881" fg:w="6"/><text x="24.0030%" y="831.50"></text></g><g><title>__x64_sys_futex (34 samples, 0.92%)</title><rect x="23.0251%" y="949" width="0.9167%" height="15" fill="rgb(231,79,45)" fg:x="854" fg:w="34"/><text x="23.2751%" y="959.50"></text></g><g><title>do_futex (33 samples, 0.89%)</title><rect x="23.0520%" y="933" width="0.8897%" height="15" fill="rgb(224,100,7)" fg:x="855" fg:w="33"/><text x="23.3020%" y="943.50"></text></g><g><title>futex_wake (33 samples, 0.89%)</title><rect x="23.0520%" y="917" width="0.8897%" height="15" fill="rgb(241,198,18)" fg:x="855" fg:w="33"/><text x="23.3020%" y="927.50"></text></g><g><title>wake_up_q (31 samples, 0.84%)</title><rect x="23.1060%" y="901" width="0.8358%" height="15" fill="rgb(252,97,53)" fg:x="857" fg:w="31"/><text x="23.3560%" y="911.50"></text></g><g><title>try_to_wake_up (31 samples, 0.84%)</title><rect x="23.1060%" y="885" width="0.8358%" height="15" fill="rgb(220,88,7)" fg:x="857" fg:w="31"/><text x="23.3560%" y="895.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="23.9148%" y="869" width="0.0270%" height="15" fill="rgb(213,176,14)" fg:x="887" fg:w="1"/><text x="24.1648%" y="879.50"></text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.03%)</title><rect x="23.9418%" y="949" width="0.0270%" height="15" fill="rgb(246,73,7)" fg:x="888" fg:w="1"/><text x="24.1918%" y="959.50"></text></g><g><title>__rseq_handle_notify_resume (2 samples, 0.05%)</title><rect x="23.9687%" y="917" width="0.0539%" height="15" fill="rgb(245,64,36)" fg:x="889" fg:w="2"/><text x="24.2187%" y="927.50"></text></g><g><title>__put_user_8 (1 samples, 0.03%)</title><rect x="23.9957%" y="901" width="0.0270%" height="15" fill="rgb(245,80,10)" fg:x="890" fg:w="1"/><text x="24.2457%" y="911.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.03%)</title><rect x="24.0226%" y="885" width="0.0270%" height="15" fill="rgb(232,107,50)" fg:x="891" fg:w="1"/><text x="24.2726%" y="895.50"></text></g><g><title>perf_ctx_enable (1 samples, 0.03%)</title><rect x="24.0226%" y="869" width="0.0270%" height="15" fill="rgb(253,3,0)" fg:x="891" fg:w="1"/><text x="24.2726%" y="879.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (1 samples, 0.03%)</title><rect x="24.0226%" y="853" width="0.0270%" height="15" fill="rgb(212,99,53)" fg:x="891" fg:w="1"/><text x="24.2726%" y="863.50"></text></g><g><title>native_write_msr (1 samples, 0.03%)</title><rect x="24.0226%" y="837" width="0.0270%" height="15" fill="rgb(249,111,54)" fg:x="891" fg:w="1"/><text x="24.2726%" y="847.50"></text></g><g><title>finish_task_switch.isra.0 (13 samples, 0.35%)</title><rect x="24.0496%" y="885" width="0.3505%" height="15" fill="rgb(249,55,30)" fg:x="892" fg:w="13"/><text x="24.2996%" y="895.50"></text></g><g><title>__perf_event_task_sched_in (13 samples, 0.35%)</title><rect x="24.0496%" y="869" width="0.3505%" height="15" fill="rgb(237,47,42)" fg:x="892" fg:w="13"/><text x="24.2996%" y="879.50"></text></g><g><title>perf_ctx_enable (12 samples, 0.32%)</title><rect x="24.0766%" y="853" width="0.3235%" height="15" fill="rgb(211,20,18)" fg:x="893" fg:w="12"/><text x="24.3266%" y="863.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (12 samples, 0.32%)</title><rect x="24.0766%" y="837" width="0.3235%" height="15" fill="rgb(231,203,46)" fg:x="893" fg:w="12"/><text x="24.3266%" y="847.50"></text></g><g><title>native_write_msr (12 samples, 0.32%)</title><rect x="24.0766%" y="821" width="0.3235%" height="15" fill="rgb(237,142,3)" fg:x="893" fg:w="12"/><text x="24.3266%" y="831.50"></text></g><g><title>pick_next_entity.isra.0 (1 samples, 0.03%)</title><rect x="24.4271%" y="869" width="0.0270%" height="15" fill="rgb(241,107,1)" fg:x="906" fg:w="1"/><text x="24.6771%" y="879.50"></text></g><g><title>schedule (17 samples, 0.46%)</title><rect x="24.0226%" y="917" width="0.4583%" height="15" fill="rgb(229,83,13)" fg:x="891" fg:w="17"/><text x="24.2726%" y="927.50"></text></g><g><title>__schedule (17 samples, 0.46%)</title><rect x="24.0226%" y="901" width="0.4583%" height="15" fill="rgb(241,91,40)" fg:x="891" fg:w="17"/><text x="24.2726%" y="911.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.08%)</title><rect x="24.4001%" y="885" width="0.0809%" height="15" fill="rgb(225,3,45)" fg:x="905" fg:w="3"/><text x="24.6501%" y="895.50"></text></g><g><title>put_prev_entity (1 samples, 0.03%)</title><rect x="24.4540%" y="869" width="0.0270%" height="15" fill="rgb(244,223,14)" fg:x="907" fg:w="1"/><text x="24.7040%" y="879.50"></text></g><g><title>__enqueue_entity (1 samples, 0.03%)</title><rect x="24.4540%" y="853" width="0.0270%" height="15" fill="rgb(224,124,37)" fg:x="907" fg:w="1"/><text x="24.7040%" y="863.50"></text></g><g><title>exit_to_user_mode_prepare (20 samples, 0.54%)</title><rect x="23.9687%" y="933" width="0.5392%" height="15" fill="rgb(251,171,30)" fg:x="889" fg:w="20"/><text x="24.2187%" y="943.50"></text></g><g><title>switch_fpu_return (1 samples, 0.03%)</title><rect x="24.4810%" y="917" width="0.0270%" height="15" fill="rgb(236,46,54)" fg:x="908" fg:w="1"/><text x="24.7310%" y="927.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.03%)</title><rect x="24.4810%" y="901" width="0.0270%" height="15" fill="rgb(245,213,5)" fg:x="908" fg:w="1"/><text x="24.7310%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (60 samples, 1.62%)</title><rect x="22.9172%" y="981" width="1.6177%" height="15" fill="rgb(230,144,27)" fg:x="850" fg:w="60"/><text x="23.1672%" y="991.50"></text></g><g><title>do_syscall_64 (56 samples, 1.51%)</title><rect x="23.0251%" y="965" width="1.5098%" height="15" fill="rgb(220,86,6)" fg:x="854" fg:w="56"/><text x="23.2751%" y="975.50"></text></g><g><title>syscall_exit_to_user_mode (21 samples, 0.57%)</title><rect x="23.9687%" y="949" width="0.5662%" height="15" fill="rgb(240,20,13)" fg:x="889" fg:w="21"/><text x="24.2187%" y="959.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="24.5080%" y="933" width="0.0270%" height="15" fill="rgb(217,89,34)" fg:x="909" fg:w="1"/><text x="24.7580%" y="943.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (6 samples, 0.16%)</title><rect x="24.5349%" y="981" width="0.1618%" height="15" fill="rgb(229,13,5)" fg:x="910" fg:w="6"/><text x="24.7849%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (73 samples, 1.97%)</title><rect x="22.7555%" y="1013" width="1.9682%" height="15" fill="rgb(244,67,35)" fg:x="844" fg:w="73"/><text x="23.0055%" y="1023.50">p..</text></g><g><title>syscall (70 samples, 1.89%)</title><rect x="22.8363%" y="997" width="1.8873%" height="15" fill="rgb(221,40,2)" fg:x="847" fg:w="70"/><text x="23.0863%" y="1007.50">s..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.03%)</title><rect x="24.6967%" y="981" width="0.0270%" height="15" fill="rgb(237,157,21)" fg:x="916" fg:w="1"/><text x="24.9467%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.03%)</title><rect x="24.7236%" y="917" width="0.0270%" height="15" fill="rgb(222,94,11)" fg:x="917" fg:w="1"/><text x="24.9736%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.03%)</title><rect x="24.7236%" y="901" width="0.0270%" height="15" fill="rgb(249,113,6)" fg:x="917" fg:w="1"/><text x="24.9736%" y="911.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="24.7236%" y="885" width="0.0270%" height="15" fill="rgb(238,137,36)" fg:x="917" fg:w="1"/><text x="24.9736%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.03%)</title><rect x="24.7236%" y="869" width="0.0270%" height="15" fill="rgb(210,102,26)" fg:x="917" fg:w="1"/><text x="24.9736%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.03%)</title><rect x="24.7236%" y="853" width="0.0270%" height="15" fill="rgb(218,30,30)" fg:x="917" fg:w="1"/><text x="24.9736%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="24.7236%" y="837" width="0.0270%" height="15" fill="rgb(214,67,26)" fg:x="917" fg:w="1"/><text x="24.9736%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.05%)</title><rect x="24.7236%" y="1013" width="0.0539%" height="15" fill="rgb(251,9,53)" fg:x="917" fg:w="2"/><text x="24.9736%" y="1023.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (2 samples, 0.05%)</title><rect x="24.7236%" y="997" width="0.0539%" height="15" fill="rgb(228,204,25)" fg:x="917" fg:w="2"/><text x="24.9736%" y="1007.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.05%)</title><rect x="24.7236%" y="981" width="0.0539%" height="15" fill="rgb(207,153,8)" fg:x="917" fg:w="2"/><text x="24.9736%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (2 samples, 0.05%)</title><rect x="24.7236%" y="965" width="0.0539%" height="15" fill="rgb(242,9,16)" fg:x="917" fg:w="2"/><text x="24.9736%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.05%)</title><rect x="24.7236%" y="949" width="0.0539%" height="15" fill="rgb(217,211,10)" fg:x="917" fg:w="2"/><text x="24.9736%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (2 samples, 0.05%)</title><rect x="24.7236%" y="933" width="0.0539%" height="15" fill="rgb(219,228,52)" fg:x="917" fg:w="2"/><text x="24.9736%" y="943.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="24.7506%" y="917" width="0.0270%" height="15" fill="rgb(231,92,29)" fg:x="918" fg:w="1"/><text x="25.0006%" y="927.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.03%)</title><rect x="24.7506%" y="901" width="0.0270%" height="15" fill="rgb(232,8,23)" fg:x="918" fg:w="1"/><text x="25.0006%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.03%)</title><rect x="24.7506%" y="885" width="0.0270%" height="15" fill="rgb(216,211,34)" fg:x="918" fg:w="1"/><text x="25.0006%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.03%)</title><rect x="24.7506%" y="869" width="0.0270%" height="15" fill="rgb(236,151,0)" fg:x="918" fg:w="1"/><text x="25.0006%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.03%)</title><rect x="24.7506%" y="853" width="0.0270%" height="15" fill="rgb(209,168,3)" fg:x="918" fg:w="1"/><text x="25.0006%" y="863.50"></text></g><g><title>__fdget_pos (1 samples, 0.03%)</title><rect x="24.8315%" y="837" width="0.0270%" height="15" fill="rgb(208,129,28)" fg:x="921" fg:w="1"/><text x="25.0815%" y="847.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="24.8315%" y="821" width="0.0270%" height="15" fill="rgb(229,78,22)" fg:x="921" fg:w="1"/><text x="25.0815%" y="831.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.05%)</title><rect x="24.8854%" y="709" width="0.0539%" height="15" fill="rgb(228,187,13)" fg:x="923" fg:w="2"/><text x="25.1354%" y="719.50"></text></g><g><title>__bitmap_and (1 samples, 0.03%)</title><rect x="24.9124%" y="693" width="0.0270%" height="15" fill="rgb(240,119,24)" fg:x="924" fg:w="1"/><text x="25.1624%" y="703.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.08%)</title><rect x="24.9393%" y="677" width="0.0809%" height="15" fill="rgb(209,194,42)" fg:x="925" fg:w="3"/><text x="25.1893%" y="687.50"></text></g><g><title>enqueue_entity (3 samples, 0.08%)</title><rect x="24.9393%" y="661" width="0.0809%" height="15" fill="rgb(247,200,46)" fg:x="925" fg:w="3"/><text x="25.1893%" y="671.50"></text></g><g><title>__rb_insert_augmented (1 samples, 0.03%)</title><rect x="24.9933%" y="645" width="0.0270%" height="15" fill="rgb(218,76,16)" fg:x="927" fg:w="1"/><text x="25.2433%" y="655.50"></text></g><g><title>__wake_up_common (7 samples, 0.19%)</title><rect x="24.8854%" y="805" width="0.1887%" height="15" fill="rgb(225,21,48)" fg:x="923" fg:w="7"/><text x="25.1354%" y="815.50"></text></g><g><title>ep_poll_callback (7 samples, 0.19%)</title><rect x="24.8854%" y="789" width="0.1887%" height="15" fill="rgb(239,223,50)" fg:x="923" fg:w="7"/><text x="25.1354%" y="799.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.19%)</title><rect x="24.8854%" y="773" width="0.1887%" height="15" fill="rgb(244,45,21)" fg:x="923" fg:w="7"/><text x="25.1354%" y="783.50"></text></g><g><title>__wake_up_common (7 samples, 0.19%)</title><rect x="24.8854%" y="757" width="0.1887%" height="15" fill="rgb(232,33,43)" fg:x="923" fg:w="7"/><text x="25.1354%" y="767.50"></text></g><g><title>ep_autoremove_wake_function (7 samples, 0.19%)</title><rect x="24.8854%" y="741" width="0.1887%" height="15" fill="rgb(209,8,3)" fg:x="923" fg:w="7"/><text x="25.1354%" y="751.50"></text></g><g><title>try_to_wake_up (7 samples, 0.19%)</title><rect x="24.8854%" y="725" width="0.1887%" height="15" fill="rgb(214,25,53)" fg:x="923" fg:w="7"/><text x="25.1354%" y="735.50"></text></g><g><title>ttwu_do_activate (5 samples, 0.13%)</title><rect x="24.9393%" y="709" width="0.1348%" height="15" fill="rgb(254,186,54)" fg:x="925" fg:w="5"/><text x="25.1893%" y="719.50"></text></g><g><title>enqueue_task (5 samples, 0.13%)</title><rect x="24.9393%" y="693" width="0.1348%" height="15" fill="rgb(208,174,49)" fg:x="925" fg:w="5"/><text x="25.1893%" y="703.50"></text></g><g><title>psi_task_change (2 samples, 0.05%)</title><rect x="25.0202%" y="677" width="0.0539%" height="15" fill="rgb(233,191,51)" fg:x="928" fg:w="2"/><text x="25.2702%" y="687.50"></text></g><g><title>ksys_write (11 samples, 0.30%)</title><rect x="24.8315%" y="853" width="0.2966%" height="15" fill="rgb(222,134,10)" fg:x="921" fg:w="11"/><text x="25.0815%" y="863.50"></text></g><g><title>vfs_write (10 samples, 0.27%)</title><rect x="24.8585%" y="837" width="0.2696%" height="15" fill="rgb(230,226,20)" fg:x="922" fg:w="10"/><text x="25.1085%" y="847.50"></text></g><g><title>eventfd_write (10 samples, 0.27%)</title><rect x="24.8585%" y="821" width="0.2696%" height="15" fill="rgb(251,111,25)" fg:x="922" fg:w="10"/><text x="25.1085%" y="831.50"></text></g><g><title>_copy_from_user (2 samples, 0.05%)</title><rect x="25.0741%" y="805" width="0.0539%" height="15" fill="rgb(224,40,46)" fg:x="930" fg:w="2"/><text x="25.3241%" y="815.50"></text></g><g><title>rep_movs_alternative (2 samples, 0.05%)</title><rect x="25.0741%" y="789" width="0.0539%" height="15" fill="rgb(236,108,47)" fg:x="930" fg:w="2"/><text x="25.3241%" y="799.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.03%)</title><rect x="25.1281%" y="789" width="0.0270%" height="15" fill="rgb(234,93,0)" fg:x="932" fg:w="1"/><text x="25.3781%" y="799.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.03%)</title><rect x="25.1281%" y="773" width="0.0270%" height="15" fill="rgb(224,213,32)" fg:x="932" fg:w="1"/><text x="25.3781%" y="783.50"></text></g><g><title>perf_ctx_enable (1 samples, 0.03%)</title><rect x="25.1281%" y="757" width="0.0270%" height="15" fill="rgb(251,11,48)" fg:x="932" fg:w="1"/><text x="25.3781%" y="767.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (1 samples, 0.03%)</title><rect x="25.1281%" y="741" width="0.0270%" height="15" fill="rgb(236,173,5)" fg:x="932" fg:w="1"/><text x="25.3781%" y="751.50"></text></g><g><title>native_write_msr (1 samples, 0.03%)</title><rect x="25.1281%" y="725" width="0.0270%" height="15" fill="rgb(230,95,12)" fg:x="932" fg:w="1"/><text x="25.3781%" y="735.50"></text></g><g><title>pick_next_entity.isra.0 (1 samples, 0.03%)</title><rect x="25.1550%" y="773" width="0.0270%" height="15" fill="rgb(232,209,1)" fg:x="933" fg:w="1"/><text x="25.4050%" y="783.50"></text></g><g><title>schedule (3 samples, 0.08%)</title><rect x="25.1281%" y="821" width="0.0809%" height="15" fill="rgb(232,6,1)" fg:x="932" fg:w="3"/><text x="25.3781%" y="831.50"></text></g><g><title>__schedule (3 samples, 0.08%)</title><rect x="25.1281%" y="805" width="0.0809%" height="15" fill="rgb(210,224,50)" fg:x="932" fg:w="3"/><text x="25.3781%" y="815.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.05%)</title><rect x="25.1550%" y="789" width="0.0539%" height="15" fill="rgb(228,127,35)" fg:x="933" fg:w="2"/><text x="25.4050%" y="799.50"></text></g><g><title>set_next_entity (1 samples, 0.03%)</title><rect x="25.1820%" y="773" width="0.0270%" height="15" fill="rgb(245,102,45)" fg:x="934" fg:w="1"/><text x="25.4320%" y="783.50"></text></g><g><title>__dequeue_entity (1 samples, 0.03%)</title><rect x="25.1820%" y="757" width="0.0270%" height="15" fill="rgb(214,1,49)" fg:x="934" fg:w="1"/><text x="25.4320%" y="767.50"></text></g><g><title>rb_next (1 samples, 0.03%)</title><rect x="25.1820%" y="741" width="0.0270%" height="15" fill="rgb(226,163,40)" fg:x="934" fg:w="1"/><text x="25.4320%" y="751.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.11%)</title><rect x="25.1281%" y="853" width="0.1078%" height="15" fill="rgb(239,212,28)" fg:x="932" fg:w="4"/><text x="25.3781%" y="863.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.11%)</title><rect x="25.1281%" y="837" width="0.1078%" height="15" fill="rgb(220,20,13)" fg:x="932" fg:w="4"/><text x="25.3781%" y="847.50"></text></g><g><title>switch_fpu_return (1 samples, 0.03%)</title><rect x="25.2090%" y="821" width="0.0270%" height="15" fill="rgb(210,164,35)" fg:x="935" fg:w="1"/><text x="25.4590%" y="831.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.03%)</title><rect x="25.2090%" y="805" width="0.0270%" height="15" fill="rgb(248,109,41)" fg:x="935" fg:w="1"/><text x="25.4590%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 0.46%)</title><rect x="24.8045%" y="885" width="0.4583%" height="15" fill="rgb(238,23,50)" fg:x="920" fg:w="17"/><text x="25.0545%" y="895.50"></text></g><g><title>do_syscall_64 (16 samples, 0.43%)</title><rect x="24.8315%" y="869" width="0.4314%" height="15" fill="rgb(211,48,49)" fg:x="921" fg:w="16"/><text x="25.0815%" y="879.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="25.2359%" y="853" width="0.0270%" height="15" fill="rgb(223,36,21)" fg:x="936" fg:w="1"/><text x="25.4859%" y="863.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (19 samples, 0.51%)</title><rect x="24.7776%" y="1013" width="0.5123%" height="15" fill="rgb(207,123,46)" fg:x="919" fg:w="19"/><text x="25.0276%" y="1023.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (19 samples, 0.51%)</title><rect x="24.7776%" y="997" width="0.5123%" height="15" fill="rgb(240,218,32)" fg:x="919" fg:w="19"/><text x="25.0276%" y="1007.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (19 samples, 0.51%)</title><rect x="24.7776%" y="981" width="0.5123%" height="15" fill="rgb(252,5,43)" fg:x="919" fg:w="19"/><text x="25.0276%" y="991.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (19 samples, 0.51%)</title><rect x="24.7776%" y="965" width="0.5123%" height="15" fill="rgb(252,84,19)" fg:x="919" fg:w="19"/><text x="25.0276%" y="975.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (19 samples, 0.51%)</title><rect x="24.7776%" y="949" width="0.5123%" height="15" fill="rgb(243,152,39)" fg:x="919" fg:w="19"/><text x="25.0276%" y="959.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (19 samples, 0.51%)</title><rect x="24.7776%" y="933" width="0.5123%" height="15" fill="rgb(234,160,15)" fg:x="919" fg:w="19"/><text x="25.0276%" y="943.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (19 samples, 0.51%)</title><rect x="24.7776%" y="917" width="0.5123%" height="15" fill="rgb(237,34,20)" fg:x="919" fg:w="19"/><text x="25.0276%" y="927.50"></text></g><g><title>write (19 samples, 0.51%)</title><rect x="24.7776%" y="901" width="0.5123%" height="15" fill="rgb(229,97,13)" fg:x="919" fg:w="19"/><text x="25.0276%" y="911.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.03%)</title><rect x="25.2629%" y="885" width="0.0270%" height="15" fill="rgb(234,71,50)" fg:x="937" fg:w="1"/><text x="25.5129%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (2 samples, 0.05%)</title><rect x="25.2898%" y="1013" width="0.0539%" height="15" fill="rgb(253,155,4)" fg:x="938" fg:w="2"/><text x="25.5398%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (2 samples, 0.05%)</title><rect x="25.2898%" y="997" width="0.0539%" height="15" fill="rgb(222,185,37)" fg:x="938" fg:w="2"/><text x="25.5398%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.03%)</title><rect x="25.3168%" y="981" width="0.0270%" height="15" fill="rgb(251,177,13)" fg:x="939" fg:w="1"/><text x="25.5668%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.03%)</title><rect x="25.3168%" y="965" width="0.0270%" height="15" fill="rgb(250,179,40)" fg:x="939" fg:w="1"/><text x="25.5668%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.03%)</title><rect x="25.3438%" y="981" width="0.0270%" height="15" fill="rgb(242,44,2)" fg:x="940" fg:w="1"/><text x="25.5938%" y="991.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="25.3438%" y="965" width="0.0270%" height="15" fill="rgb(216,177,13)" fg:x="940" fg:w="1"/><text x="25.5938%" y="975.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (103 samples, 2.78%)</title><rect x="22.6746%" y="1125" width="2.7770%" height="15" fill="rgb(216,106,43)" fg:x="841" fg:w="103"/><text x="22.9246%" y="1135.50">to..</text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (103 samples, 2.78%)</title><rect x="22.6746%" y="1109" width="2.7770%" height="15" fill="rgb(216,183,2)" fg:x="841" fg:w="103"/><text x="22.9246%" y="1119.50">to..</text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (102 samples, 2.75%)</title><rect x="22.7015%" y="1093" width="2.7501%" height="15" fill="rgb(249,75,3)" fg:x="842" fg:w="102"/><text x="22.9515%" y="1103.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (101 samples, 2.72%)</title><rect x="22.7285%" y="1077" width="2.7231%" height="15" fill="rgb(219,67,39)" fg:x="843" fg:w="101"/><text x="22.9785%" y="1087.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (101 samples, 2.72%)</title><rect x="22.7285%" y="1061" width="2.7231%" height="15" fill="rgb(253,228,2)" fg:x="843" fg:w="101"/><text x="22.9785%" y="1071.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (101 samples, 2.72%)</title><rect x="22.7285%" y="1045" width="2.7231%" height="15" fill="rgb(235,138,27)" fg:x="843" fg:w="101"/><text x="22.9785%" y="1055.50">to..</text></g><g><title>tokio::runtime::context::with_scheduler (101 samples, 2.72%)</title><rect x="22.7285%" y="1029" width="2.7231%" height="15" fill="rgb(236,97,51)" fg:x="843" fg:w="101"/><text x="22.9785%" y="1039.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (4 samples, 0.11%)</title><rect x="25.3438%" y="1013" width="0.1078%" height="15" fill="rgb(240,80,30)" fg:x="940" fg:w="4"/><text x="25.5938%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (4 samples, 0.11%)</title><rect x="25.3438%" y="997" width="0.1078%" height="15" fill="rgb(230,178,19)" fg:x="940" fg:w="4"/><text x="25.5938%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (3 samples, 0.08%)</title><rect x="25.3707%" y="981" width="0.0809%" height="15" fill="rgb(210,190,27)" fg:x="941" fg:w="3"/><text x="25.6207%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.08%)</title><rect x="25.3707%" y="965" width="0.0809%" height="15" fill="rgb(222,107,31)" fg:x="941" fg:w="3"/><text x="25.6207%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.08%)</title><rect x="25.3707%" y="949" width="0.0809%" height="15" fill="rgb(216,127,34)" fg:x="941" fg:w="3"/><text x="25.6207%" y="959.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (1 samples, 0.03%)</title><rect x="25.4516%" y="1125" width="0.0270%" height="15" fill="rgb(234,116,52)" fg:x="944" fg:w="1"/><text x="25.7016%" y="1135.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.03%)</title><rect x="25.4516%" y="1109" width="0.0270%" height="15" fill="rgb(222,124,15)" fg:x="944" fg:w="1"/><text x="25.7016%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (1 samples, 0.03%)</title><rect x="25.4516%" y="1093" width="0.0270%" height="15" fill="rgb(231,179,28)" fg:x="944" fg:w="1"/><text x="25.7016%" y="1103.50"></text></g><g><title>&lt;tokio::sync::mpsc::block::Values&lt;T&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (1 samples, 0.03%)</title><rect x="25.4516%" y="1077" width="0.0270%" height="15" fill="rgb(226,93,45)" fg:x="944" fg:w="1"/><text x="25.7016%" y="1087.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.03%)</title><rect x="25.4516%" y="1061" width="0.0270%" height="15" fill="rgb(215,8,51)" fg:x="944" fg:w="1"/><text x="25.7016%" y="1071.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="25.4516%" y="1045" width="0.0270%" height="15" fill="rgb(223,106,5)" fg:x="944" fg:w="1"/><text x="25.7016%" y="1055.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="25.4516%" y="1029" width="0.0270%" height="15" fill="rgb(250,191,5)" fg:x="944" fg:w="1"/><text x="25.7016%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.08%)</title><rect x="25.4786%" y="1109" width="0.0809%" height="15" fill="rgb(242,132,44)" fg:x="945" fg:w="3"/><text x="25.7286%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (108 samples, 2.91%)</title><rect x="22.6746%" y="1157" width="2.9118%" height="15" fill="rgb(251,152,29)" fg:x="841" fg:w="108"/><text x="22.9246%" y="1167.50">to..</text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (108 samples, 2.91%)</title><rect x="22.6746%" y="1141" width="2.9118%" height="15" fill="rgb(218,179,5)" fg:x="841" fg:w="108"/><text x="22.9246%" y="1151.50">to..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (4 samples, 0.11%)</title><rect x="25.4786%" y="1125" width="0.1078%" height="15" fill="rgb(227,67,19)" fg:x="945" fg:w="4"/><text x="25.7286%" y="1135.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (1 samples, 0.03%)</title><rect x="25.5594%" y="1109" width="0.0270%" height="15" fill="rgb(233,119,31)" fg:x="948" fg:w="1"/><text x="25.8094%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.03%)</title><rect x="25.5594%" y="1093" width="0.0270%" height="15" fill="rgb(241,120,22)" fg:x="948" fg:w="1"/><text x="25.8094%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.03%)</title><rect x="25.5594%" y="1077" width="0.0270%" height="15" fill="rgb(224,102,30)" fg:x="948" fg:w="1"/><text x="25.8094%" y="1087.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::_{{closure}} (110 samples, 2.97%)</title><rect x="22.6476%" y="1173" width="2.9658%" height="15" fill="rgb(210,164,37)" fg:x="840" fg:w="110"/><text x="22.8976%" y="1183.50">tok..</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::_{{closure}} (1 samples, 0.03%)</title><rect x="25.5864%" y="1157" width="0.0270%" height="15" fill="rgb(226,191,16)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::_{{closure}} (1 samples, 0.03%)</title><rect x="25.5864%" y="1141" width="0.0270%" height="15" fill="rgb(214,40,45)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1151.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="25.5864%" y="1125" width="0.0270%" height="15" fill="rgb(244,29,26)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1135.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1 samples, 0.03%)</title><rect x="25.5864%" y="1109" width="0.0270%" height="15" fill="rgb(216,16,5)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1119.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.03%)</title><rect x="25.5864%" y="1093" width="0.0270%" height="15" fill="rgb(249,76,35)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="25.5864%" y="1077" width="0.0270%" height="15" fill="rgb(207,11,44)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="25.5864%" y="1061" width="0.0270%" height="15" fill="rgb(228,190,49)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1071.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1 samples, 0.03%)</title><rect x="25.5864%" y="1045" width="0.0270%" height="15" fill="rgb(214,173,12)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1055.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="25.5864%" y="1029" width="0.0270%" height="15" fill="rgb(218,26,35)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="25.5864%" y="1013" width="0.0270%" height="15" fill="rgb(220,200,19)" fg:x="949" fg:w="1"/><text x="25.8364%" y="1023.50"></text></g><g><title>kvlr::connection::ConnectionFrameSender::send_frame::_{{closure}} (127 samples, 3.42%)</title><rect x="22.2162%" y="1189" width="3.4241%" height="15" fill="rgb(239,95,49)" fg:x="824" fg:w="127"/><text x="22.4662%" y="1199.50">kvl..</text></g><g><title>tokio::sync::oneshot::channel (1 samples, 0.03%)</title><rect x="25.6134%" y="1173" width="0.0270%" height="15" fill="rgb(235,85,53)" fg:x="950" fg:w="1"/><text x="25.8634%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="25.6134%" y="1157" width="0.0270%" height="15" fill="rgb(233,133,31)" fg:x="950" fg:w="1"/><text x="25.8634%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="25.6134%" y="1141" width="0.0270%" height="15" fill="rgb(218,25,20)" fg:x="950" fg:w="1"/><text x="25.8634%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="25.6134%" y="1125" width="0.0270%" height="15" fill="rgb(252,210,38)" fg:x="950" fg:w="1"/><text x="25.8634%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="25.6134%" y="1109" width="0.0270%" height="15" fill="rgb(242,134,21)" fg:x="950" fg:w="1"/><text x="25.8634%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="25.6134%" y="1093" width="0.0270%" height="15" fill="rgb(213,28,48)" fg:x="950" fg:w="1"/><text x="25.8634%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="25.6134%" y="1077" width="0.0270%" height="15" fill="rgb(250,196,2)" fg:x="950" fg:w="1"/><text x="25.8634%" y="1087.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="25.6134%" y="1061" width="0.0270%" height="15" fill="rgb(227,5,17)" fg:x="950" fg:w="1"/><text x="25.8634%" y="1071.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="25.6403%" y="1141" width="0.0270%" height="15" fill="rgb(221,226,24)" fg:x="951" fg:w="1"/><text x="25.8903%" y="1151.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.03%)</title><rect x="25.6403%" y="1125" width="0.0270%" height="15" fill="rgb(211,5,48)" fg:x="951" fg:w="1"/><text x="25.8903%" y="1135.50"></text></g><g><title>kvlr::rpc::connection_state::Promises::register::_{{closure}} (2 samples, 0.05%)</title><rect x="25.6403%" y="1189" width="0.0539%" height="15" fill="rgb(219,150,6)" fg:x="951" fg:w="2"/><text x="25.8903%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.05%)</title><rect x="25.6403%" y="1173" width="0.0539%" height="15" fill="rgb(251,46,16)" fg:x="951" fg:w="2"/><text x="25.8903%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="25.6403%" y="1157" width="0.0539%" height="15" fill="rgb(220,204,40)" fg:x="951" fg:w="2"/><text x="25.8903%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.03%)</title><rect x="25.6673%" y="1141" width="0.0270%" height="15" fill="rgb(211,85,2)" fg:x="952" fg:w="1"/><text x="25.9173%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.03%)</title><rect x="25.6673%" y="1125" width="0.0270%" height="15" fill="rgb(229,17,7)" fg:x="952" fg:w="1"/><text x="25.9173%" y="1135.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="25.6673%" y="1109" width="0.0270%" height="15" fill="rgb(239,72,28)" fg:x="952" fg:w="1"/><text x="25.9173%" y="1119.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="25.6673%" y="1093" width="0.0270%" height="15" fill="rgb(230,47,54)" fg:x="952" fg:w="1"/><text x="25.9173%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="25.6673%" y="1077" width="0.0270%" height="15" fill="rgb(214,50,8)" fg:x="952" fg:w="1"/><text x="25.9173%" y="1087.50"></text></g><g><title>kvlr::rpc::rpc_manager::RpcManager::get_next_call_id::_{{closure}} (1 samples, 0.03%)</title><rect x="25.6943%" y="1189" width="0.0270%" height="15" fill="rgb(216,198,43)" fg:x="953" fg:w="1"/><text x="25.9443%" y="1199.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="25.6943%" y="1173" width="0.0270%" height="15" fill="rgb(234,20,35)" fg:x="953" fg:w="1"/><text x="25.9443%" y="1183.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.03%)</title><rect x="25.6943%" y="1157" width="0.0270%" height="15" fill="rgb(254,45,19)" fg:x="953" fg:w="1"/><text x="25.9443%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.03%)</title><rect x="25.6943%" y="1141" width="0.0270%" height="15" fill="rgb(219,14,44)" fg:x="953" fg:w="1"/><text x="25.9443%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="25.6943%" y="1125" width="0.0270%" height="15" fill="rgb(217,220,26)" fg:x="953" fg:w="1"/><text x="25.9443%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="25.7212%" y="1173" width="0.0270%" height="15" fill="rgb(213,158,28)" fg:x="954" fg:w="1"/><text x="25.9712%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="25.7212%" y="1157" width="0.0270%" height="15" fill="rgb(252,51,52)" fg:x="954" fg:w="1"/><text x="25.9712%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="25.7212%" y="1141" width="0.0270%" height="15" fill="rgb(246,89,16)" fg:x="954" fg:w="1"/><text x="25.9712%" y="1151.50"></text></g><g><title>kvlr::rpc::rpc_manager::RpcManager::call_raw::_{{closure}} (159 samples, 4.29%)</title><rect x="21.5422%" y="1205" width="4.2869%" height="15" fill="rgb(216,158,49)" fg:x="799" fg:w="159"/><text x="21.7922%" y="1215.50">kvlr:..</text></g><g><title>tokio::sync::oneshot::channel (4 samples, 0.11%)</title><rect x="25.7212%" y="1189" width="0.1078%" height="15" fill="rgb(236,107,19)" fg:x="954" fg:w="4"/><text x="25.9712%" y="1199.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.08%)</title><rect x="25.7482%" y="1173" width="0.0809%" height="15" fill="rgb(228,185,30)" fg:x="955" fg:w="3"/><text x="25.9982%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.08%)</title><rect x="25.7482%" y="1157" width="0.0809%" height="15" fill="rgb(246,134,8)" fg:x="955" fg:w="3"/><text x="25.9982%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.08%)</title><rect x="25.7482%" y="1141" width="0.0809%" height="15" fill="rgb(214,143,50)" fg:x="955" fg:w="3"/><text x="25.9982%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.08%)</title><rect x="25.7482%" y="1125" width="0.0809%" height="15" fill="rgb(228,75,8)" fg:x="955" fg:w="3"/><text x="25.9982%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.08%)</title><rect x="25.7482%" y="1109" width="0.0809%" height="15" fill="rgb(207,175,4)" fg:x="955" fg:w="3"/><text x="25.9982%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.08%)</title><rect x="25.7482%" y="1093" width="0.0809%" height="15" fill="rgb(205,108,24)" fg:x="955" fg:w="3"/><text x="25.9982%" y="1103.50"></text></g><g><title>malloc (3 samples, 0.08%)</title><rect x="25.7482%" y="1077" width="0.0809%" height="15" fill="rgb(244,120,49)" fg:x="955" fg:w="3"/><text x="25.9982%" y="1087.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="25.7751%" y="1061" width="0.0539%" height="15" fill="rgb(223,47,38)" fg:x="956" fg:w="2"/><text x="26.0251%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="25.8021%" y="1045" width="0.0270%" height="15" fill="rgb(229,179,11)" fg:x="957" fg:w="1"/><text x="26.0521%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="25.8291%" y="1189" width="0.0270%" height="15" fill="rgb(231,122,1)" fg:x="958" fg:w="1"/><text x="26.0791%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="25.8830%" y="997" width="0.0270%" height="15" fill="rgb(245,119,9)" fg:x="960" fg:w="1"/><text x="26.1330%" y="1007.50"></text></g><g><title>rmp::encode::write_array_len (3 samples, 0.08%)</title><rect x="25.8560%" y="1141" width="0.0809%" height="15" fill="rgb(241,163,25)" fg:x="959" fg:w="3"/><text x="26.1060%" y="1151.50"></text></g><g><title>rmp::encode::write_marker (2 samples, 0.05%)</title><rect x="25.8830%" y="1125" width="0.0539%" height="15" fill="rgb(217,214,3)" fg:x="960" fg:w="2"/><text x="26.1330%" y="1135.50"></text></g><g><title>rmp::encode::RmpWrite::write_u8 (2 samples, 0.05%)</title><rect x="25.8830%" y="1109" width="0.0539%" height="15" fill="rgb(240,86,28)" fg:x="960" fg:w="2"/><text x="26.1330%" y="1119.50"></text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (2 samples, 0.05%)</title><rect x="25.8830%" y="1093" width="0.0539%" height="15" fill="rgb(215,47,9)" fg:x="960" fg:w="2"/><text x="26.1330%" y="1103.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.05%)</title><rect x="25.8830%" y="1077" width="0.0539%" height="15" fill="rgb(252,25,45)" fg:x="960" fg:w="2"/><text x="26.1330%" y="1087.50"></text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="25.8830%" y="1061" width="0.0539%" height="15" fill="rgb(251,164,9)" fg:x="960" fg:w="2"/><text x="26.1330%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (2 samples, 0.05%)</title><rect x="25.8830%" y="1045" width="0.0539%" height="15" fill="rgb(233,194,0)" fg:x="960" fg:w="2"/><text x="26.1330%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.05%)</title><rect x="25.8830%" y="1029" width="0.0539%" height="15" fill="rgb(249,111,24)" fg:x="960" fg:w="2"/><text x="26.1330%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="25.8830%" y="1013" width="0.0539%" height="15" fill="rgb(250,223,3)" fg:x="960" fg:w="2"/><text x="26.1330%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="25.9099%" y="997" width="0.0270%" height="15" fill="rgb(236,178,37)" fg:x="961" fg:w="1"/><text x="26.1599%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="25.9099%" y="981" width="0.0270%" height="15" fill="rgb(241,158,50)" fg:x="961" fg:w="1"/><text x="26.1599%" y="991.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_struct (4 samples, 0.11%)</title><rect x="25.8560%" y="1157" width="0.1078%" height="15" fill="rgb(213,121,41)" fg:x="959" fg:w="4"/><text x="26.1060%" y="1167.50"></text></g><g><title>rmp_serde::encode::Serializer&lt;W,C&gt;::compound (1 samples, 0.03%)</title><rect x="25.9369%" y="1141" width="0.0270%" height="15" fill="rgb(240,92,3)" fg:x="962" fg:w="1"/><text x="26.1869%" y="1151.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.03%)</title><rect x="25.9908%" y="1109" width="0.0270%" height="15" fill="rgb(205,123,3)" fg:x="964" fg:w="1"/><text x="26.2408%" y="1119.50"></text></g><g><title>rmp_serde::encode::Serializer&lt;W,C&gt;::maybe_unknown_len_compound (1 samples, 0.03%)</title><rect x="25.9908%" y="1093" width="0.0270%" height="15" fill="rgb(205,97,47)" fg:x="964" fg:w="1"/><text x="26.2408%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="25.9908%" y="1077" width="0.0270%" height="15" fill="rgb(247,152,14)" fg:x="964" fg:w="1"/><text x="26.2408%" y="1087.50"></text></g><g><title>&lt;rmp_serde::encode::MaybeUnknownLengthCompound&lt;W,C&gt; as serde::ser::SerializeSeq&gt;::end (1 samples, 0.03%)</title><rect x="26.0178%" y="1109" width="0.0270%" height="15" fill="rgb(248,195,53)" fg:x="965" fg:w="1"/><text x="26.2678%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.16%)</title><rect x="26.1256%" y="1061" width="0.1618%" height="15" fill="rgb(226,201,16)" fg:x="969" fg:w="6"/><text x="26.3756%" y="1071.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.16%)</title><rect x="26.1256%" y="1045" width="0.1618%" height="15" fill="rgb(205,98,0)" fg:x="969" fg:w="6"/><text x="26.3756%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.08%)</title><rect x="26.4492%" y="949" width="0.0809%" height="15" fill="rgb(214,191,48)" fg:x="981" fg:w="3"/><text x="26.6992%" y="959.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="26.6918%" y="933" width="0.0270%" height="15" fill="rgb(237,112,39)" fg:x="990" fg:w="1"/><text x="26.9418%" y="943.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="26.7188%" y="933" width="0.0270%" height="15" fill="rgb(247,203,27)" fg:x="991" fg:w="1"/><text x="26.9688%" y="943.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="26.7188%" y="917" width="0.0270%" height="15" fill="rgb(235,124,28)" fg:x="991" fg:w="1"/><text x="26.9688%" y="927.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="26.7188%" y="901" width="0.0270%" height="15" fill="rgb(208,207,46)" fg:x="991" fg:w="1"/><text x="26.9688%" y="911.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="26.7188%" y="885" width="0.0270%" height="15" fill="rgb(234,176,4)" fg:x="991" fg:w="1"/><text x="26.9688%" y="895.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="26.7188%" y="869" width="0.0270%" height="15" fill="rgb(230,133,28)" fg:x="991" fg:w="1"/><text x="26.9688%" y="879.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="26.7188%" y="853" width="0.0270%" height="15" fill="rgb(211,137,40)" fg:x="991" fg:w="1"/><text x="26.9688%" y="863.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="26.7188%" y="837" width="0.0270%" height="15" fill="rgb(254,35,13)" fg:x="991" fg:w="1"/><text x="26.9688%" y="847.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="26.7188%" y="821" width="0.0270%" height="15" fill="rgb(225,49,51)" fg:x="991" fg:w="1"/><text x="26.9688%" y="831.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="26.7188%" y="805" width="0.0270%" height="15" fill="rgb(251,10,15)" fg:x="991" fg:w="1"/><text x="26.9688%" y="815.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="26.7188%" y="789" width="0.0270%" height="15" fill="rgb(228,207,15)" fg:x="991" fg:w="1"/><text x="26.9688%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and (11 samples, 0.30%)</title><rect x="26.8806%" y="917" width="0.2966%" height="15" fill="rgb(241,99,19)" fg:x="997" fg:w="11"/><text x="27.1306%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (21 samples, 0.57%)</title><rect x="27.1771%" y="917" width="0.5662%" height="15" fill="rgb(207,104,49)" fg:x="1008" fg:w="21"/><text x="27.4271%" y="927.50"></text></g><g><title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="28.4982%" y="885" width="0.0270%" height="15" fill="rgb(234,99,18)" fg:x="1057" fg:w="1"/><text x="28.7482%" y="895.50"></text></g><g><title>sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="28.4982%" y="869" width="0.0270%" height="15" fill="rgb(213,191,49)" fg:x="1057" fg:w="1"/><text x="28.7482%" y="879.50"></text></g><g><title>native_apic_msr_eoi (1 samples, 0.03%)</title><rect x="28.4982%" y="853" width="0.0270%" height="15" fill="rgb(210,226,19)" fg:x="1057" fg:w="1"/><text x="28.7482%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (8 samples, 0.22%)</title><rect x="28.6870%" y="773" width="0.2157%" height="15" fill="rgb(229,97,18)" fg:x="1064" fg:w="8"/><text x="28.9370%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.22%)</title><rect x="28.6870%" y="757" width="0.2157%" height="15" fill="rgb(211,167,15)" fg:x="1064" fg:w="8"/><text x="28.9370%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="28.9027%" y="773" width="0.0270%" height="15" fill="rgb(210,169,34)" fg:x="1072" fg:w="1"/><text x="29.1527%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="28.9027%" y="757" width="0.0270%" height="15" fill="rgb(241,121,31)" fg:x="1072" fg:w="1"/><text x="29.1527%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.03%)</title><rect x="28.9027%" y="741" width="0.0270%" height="15" fill="rgb(232,40,11)" fg:x="1072" fg:w="1"/><text x="29.1527%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (31 samples, 0.84%)</title><rect x="28.5252%" y="821" width="0.8358%" height="15" fill="rgb(205,86,26)" fg:x="1058" fg:w="31"/><text x="28.7752%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.84%)</title><rect x="28.5252%" y="805" width="0.8358%" height="15" fill="rgb(231,126,28)" fg:x="1058" fg:w="31"/><text x="28.7752%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.84%)</title><rect x="28.5252%" y="789" width="0.8358%" height="15" fill="rgb(219,221,18)" fg:x="1058" fg:w="31"/><text x="28.7752%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.43%)</title><rect x="28.9296%" y="773" width="0.4314%" height="15" fill="rgb(211,40,0)" fg:x="1073" fg:w="16"/><text x="29.1796%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="29.4149%" y="773" width="0.0270%" height="15" fill="rgb(239,85,43)" fg:x="1091" fg:w="1"/><text x="29.6649%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.24%)</title><rect x="29.4419%" y="757" width="0.2427%" height="15" fill="rgb(231,55,21)" fg:x="1092" fg:w="9"/><text x="29.6919%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.24%)</title><rect x="29.4419%" y="741" width="0.2427%" height="15" fill="rgb(225,184,43)" fg:x="1092" fg:w="9"/><text x="29.6919%" y="751.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.24%)</title><rect x="29.4419%" y="725" width="0.2427%" height="15" fill="rgb(251,158,41)" fg:x="1092" fg:w="9"/><text x="29.6919%" y="735.50"></text></g><g><title>realloc (9 samples, 0.24%)</title><rect x="29.4419%" y="709" width="0.2427%" height="15" fill="rgb(234,159,37)" fg:x="1092" fg:w="9"/><text x="29.6919%" y="719.50"></text></g><g><title>[libc.so.6] (8 samples, 0.22%)</title><rect x="29.4689%" y="693" width="0.2157%" height="15" fill="rgb(216,204,22)" fg:x="1093" fg:w="8"/><text x="29.7189%" y="703.50"></text></g><g><title>[libc.so.6] (7 samples, 0.19%)</title><rect x="29.4958%" y="677" width="0.1887%" height="15" fill="rgb(214,17,3)" fg:x="1094" fg:w="7"/><text x="29.7458%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="29.6576%" y="661" width="0.0270%" height="15" fill="rgb(212,111,17)" fg:x="1100" fg:w="1"/><text x="29.9076%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.27%)</title><rect x="29.4419%" y="773" width="0.2696%" height="15" fill="rgb(221,157,24)" fg:x="1092" fg:w="10"/><text x="29.6919%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="29.6846%" y="757" width="0.0270%" height="15" fill="rgb(252,16,13)" fg:x="1101" fg:w="1"/><text x="29.9346%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.32%)</title><rect x="29.4149%" y="789" width="0.3235%" height="15" fill="rgb(221,62,2)" fg:x="1091" fg:w="12"/><text x="29.6649%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="29.7115%" y="773" width="0.0270%" height="15" fill="rgb(247,87,22)" fg:x="1102" fg:w="1"/><text x="29.9615%" y="783.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="29.7115%" y="757" width="0.0270%" height="15" fill="rgb(215,73,9)" fg:x="1102" fg:w="1"/><text x="29.9615%" y="767.50"></text></g><g><title>rmp::encode::RmpWrite::write_u8 (48 samples, 1.29%)</title><rect x="28.5252%" y="885" width="1.2941%" height="15" fill="rgb(207,175,33)" fg:x="1058" fg:w="48"/><text x="28.7752%" y="895.50"></text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (48 samples, 1.29%)</title><rect x="28.5252%" y="869" width="1.2941%" height="15" fill="rgb(243,129,54)" fg:x="1058" fg:w="48"/><text x="28.7752%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (48 samples, 1.29%)</title><rect x="28.5252%" y="853" width="1.2941%" height="15" fill="rgb(227,119,45)" fg:x="1058" fg:w="48"/><text x="28.7752%" y="863.50"></text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (48 samples, 1.29%)</title><rect x="28.5252%" y="837" width="1.2941%" height="15" fill="rgb(205,109,36)" fg:x="1058" fg:w="48"/><text x="28.7752%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (17 samples, 0.46%)</title><rect x="29.3610%" y="821" width="0.4583%" height="15" fill="rgb(205,6,39)" fg:x="1089" fg:w="17"/><text x="29.6110%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (17 samples, 0.46%)</title><rect x="29.3610%" y="805" width="0.4583%" height="15" fill="rgb(221,32,16)" fg:x="1089" fg:w="17"/><text x="29.6110%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.08%)</title><rect x="29.7385%" y="789" width="0.0809%" height="15" fill="rgb(228,144,50)" fg:x="1103" fg:w="3"/><text x="29.9885%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.08%)</title><rect x="29.7385%" y="773" width="0.0809%" height="15" fill="rgb(229,201,53)" fg:x="1103" fg:w="3"/><text x="29.9885%" y="783.50"></text></g><g><title>rmp::encode::uint::write_pfix (87 samples, 2.35%)</title><rect x="27.7433%" y="917" width="2.3456%" height="15" fill="rgb(249,153,27)" fg:x="1029" fg:w="87"/><text x="27.9933%" y="927.50">r..</text></g><g><title>rmp::encode::write_marker (65 samples, 1.75%)</title><rect x="28.3365%" y="901" width="1.7525%" height="15" fill="rgb(227,106,25)" fg:x="1051" fg:w="65"/><text x="28.5865%" y="911.50"></text></g><g><title>rmp::marker::Marker::to_u8 (10 samples, 0.27%)</title><rect x="29.8194%" y="885" width="0.2696%" height="15" fill="rgb(230,65,29)" fg:x="1106" fg:w="10"/><text x="30.0694%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.13%)</title><rect x="30.9517%" y="901" width="0.1348%" height="15" fill="rgb(221,57,46)" fg:x="1148" fg:w="5"/><text x="31.2017%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.22%)</title><rect x="31.1674%" y="773" width="0.2157%" height="15" fill="rgb(229,161,17)" fg:x="1156" fg:w="8"/><text x="31.4174%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.22%)</title><rect x="31.1674%" y="757" width="0.2157%" height="15" fill="rgb(222,213,11)" fg:x="1156" fg:w="8"/><text x="31.4174%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (8 samples, 0.22%)</title><rect x="31.1674%" y="741" width="0.2157%" height="15" fill="rgb(235,35,13)" fg:x="1156" fg:w="8"/><text x="31.4174%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (53 samples, 1.43%)</title><rect x="31.0865%" y="821" width="1.4290%" height="15" fill="rgb(233,158,34)" fg:x="1153" fg:w="53"/><text x="31.3365%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (53 samples, 1.43%)</title><rect x="31.0865%" y="805" width="1.4290%" height="15" fill="rgb(215,151,48)" fg:x="1153" fg:w="53"/><text x="31.3365%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (53 samples, 1.43%)</title><rect x="31.0865%" y="789" width="1.4290%" height="15" fill="rgb(229,84,14)" fg:x="1153" fg:w="53"/><text x="31.3365%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 1.13%)</title><rect x="31.3831%" y="773" width="1.1324%" height="15" fill="rgb(229,68,14)" fg:x="1164" fg:w="42"/><text x="31.6331%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.27%)</title><rect x="32.7042%" y="773" width="0.2696%" height="15" fill="rgb(243,106,26)" fg:x="1213" fg:w="10"/><text x="32.9542%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.27%)</title><rect x="32.7042%" y="757" width="0.2696%" height="15" fill="rgb(206,45,38)" fg:x="1213" fg:w="10"/><text x="32.9542%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.27%)</title><rect x="32.7042%" y="741" width="0.2696%" height="15" fill="rgb(226,6,15)" fg:x="1213" fg:w="10"/><text x="32.9542%" y="751.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.27%)</title><rect x="32.7042%" y="725" width="0.2696%" height="15" fill="rgb(232,22,54)" fg:x="1213" fg:w="10"/><text x="32.9542%" y="735.50"></text></g><g><title>realloc (10 samples, 0.27%)</title><rect x="32.7042%" y="709" width="0.2696%" height="15" fill="rgb(229,222,32)" fg:x="1213" fg:w="10"/><text x="32.9542%" y="719.50"></text></g><g><title>[libc.so.6] (8 samples, 0.22%)</title><rect x="32.7582%" y="693" width="0.2157%" height="15" fill="rgb(228,62,29)" fg:x="1215" fg:w="8"/><text x="33.0082%" y="703.50"></text></g><g><title>[libc.so.6] (6 samples, 0.16%)</title><rect x="32.8121%" y="677" width="0.1618%" height="15" fill="rgb(251,103,34)" fg:x="1217" fg:w="6"/><text x="33.0621%" y="687.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="32.9199%" y="661" width="0.0539%" height="15" fill="rgb(233,12,30)" fg:x="1221" fg:w="2"/><text x="33.1699%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.30%)</title><rect x="32.7042%" y="789" width="0.2966%" height="15" fill="rgb(238,52,0)" fg:x="1213" fg:w="11"/><text x="32.9542%" y="799.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="32.9738%" y="773" width="0.0270%" height="15" fill="rgb(223,98,5)" fg:x="1223" fg:w="1"/><text x="33.2238%" y="783.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.03%)</title><rect x="32.9738%" y="757" width="0.0270%" height="15" fill="rgb(228,75,37)" fg:x="1223" fg:w="1"/><text x="33.2238%" y="767.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.03%)</title><rect x="32.9738%" y="741" width="0.0270%" height="15" fill="rgb(205,115,49)" fg:x="1223" fg:w="1"/><text x="33.2238%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (38 samples, 1.02%)</title><rect x="32.5694%" y="805" width="1.0245%" height="15" fill="rgb(250,154,43)" fg:x="1208" fg:w="38"/><text x="32.8194%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (22 samples, 0.59%)</title><rect x="33.0008%" y="789" width="0.5932%" height="15" fill="rgb(226,43,29)" fg:x="1224" fg:w="22"/><text x="33.2508%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (22 samples, 0.59%)</title><rect x="33.0008%" y="773" width="0.5932%" height="15" fill="rgb(249,228,39)" fg:x="1224" fg:w="22"/><text x="33.2508%" y="783.50"></text></g><g><title>rmp::encode::RmpWrite::write_data_u8 (94 samples, 2.53%)</title><rect x="31.0865%" y="901" width="2.5344%" height="15" fill="rgb(216,79,43)" fg:x="1153" fg:w="94"/><text x="31.3365%" y="911.50">rm..</text></g><g><title>rmp::encode::RmpWrite::write_u8 (94 samples, 2.53%)</title><rect x="31.0865%" y="885" width="2.5344%" height="15" fill="rgb(228,95,12)" fg:x="1153" fg:w="94"/><text x="31.3365%" y="895.50">rm..</text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (94 samples, 2.53%)</title><rect x="31.0865%" y="869" width="2.5344%" height="15" fill="rgb(249,221,15)" fg:x="1153" fg:w="94"/><text x="31.3365%" y="879.50">&lt;T..</text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (94 samples, 2.53%)</title><rect x="31.0865%" y="853" width="2.5344%" height="15" fill="rgb(233,34,13)" fg:x="1153" fg:w="94"/><text x="31.3365%" y="863.50">st..</text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (94 samples, 2.53%)</title><rect x="31.0865%" y="837" width="2.5344%" height="15" fill="rgb(214,103,39)" fg:x="1153" fg:w="94"/><text x="31.3365%" y="847.50">&lt;r..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (41 samples, 1.11%)</title><rect x="32.5155%" y="821" width="1.1054%" height="15" fill="rgb(251,126,39)" fg:x="1206" fg:w="41"/><text x="32.7655%" y="831.50"></text></g><g><title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="33.5940%" y="805" width="0.0270%" height="15" fill="rgb(214,216,36)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="815.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="33.5940%" y="789" width="0.0270%" height="15" fill="rgb(220,221,8)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="799.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="33.5940%" y="773" width="0.0270%" height="15" fill="rgb(240,216,3)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="783.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="33.5940%" y="757" width="0.0270%" height="15" fill="rgb(232,218,17)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="767.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="33.5940%" y="741" width="0.0270%" height="15" fill="rgb(229,163,45)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.03%)</title><rect x="33.5940%" y="725" width="0.0270%" height="15" fill="rgb(231,110,42)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="735.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.03%)</title><rect x="33.5940%" y="709" width="0.0270%" height="15" fill="rgb(208,170,48)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="719.50"></text></g><g><title>perf_ctx_enable (1 samples, 0.03%)</title><rect x="33.5940%" y="693" width="0.0270%" height="15" fill="rgb(239,116,25)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (1 samples, 0.03%)</title><rect x="33.5940%" y="677" width="0.0270%" height="15" fill="rgb(219,200,50)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="687.50"></text></g><g><title>native_write_msr (1 samples, 0.03%)</title><rect x="33.5940%" y="661" width="0.0270%" height="15" fill="rgb(245,200,0)" fg:x="1246" fg:w="1"/><text x="33.8440%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.16%)</title><rect x="34.1871%" y="773" width="0.1618%" height="15" fill="rgb(245,119,33)" fg:x="1268" fg:w="6"/><text x="34.4371%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.16%)</title><rect x="34.1871%" y="757" width="0.1618%" height="15" fill="rgb(231,125,12)" fg:x="1268" fg:w="6"/><text x="34.4371%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.19%)</title><rect x="34.3489%" y="773" width="0.1887%" height="15" fill="rgb(216,96,41)" fg:x="1274" fg:w="7"/><text x="34.5989%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.19%)</title><rect x="34.3489%" y="757" width="0.1887%" height="15" fill="rgb(248,43,45)" fg:x="1274" fg:w="7"/><text x="34.5989%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (7 samples, 0.19%)</title><rect x="34.3489%" y="741" width="0.1887%" height="15" fill="rgb(217,222,7)" fg:x="1274" fg:w="7"/><text x="34.5989%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (50 samples, 1.35%)</title><rect x="33.8636%" y="821" width="1.3481%" height="15" fill="rgb(233,28,6)" fg:x="1256" fg:w="50"/><text x="34.1136%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 1.35%)</title><rect x="33.8636%" y="805" width="1.3481%" height="15" fill="rgb(231,218,15)" fg:x="1256" fg:w="50"/><text x="34.1136%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (50 samples, 1.35%)</title><rect x="33.8636%" y="789" width="1.3481%" height="15" fill="rgb(226,171,48)" fg:x="1256" fg:w="50"/><text x="34.1136%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.67%)</title><rect x="34.5376%" y="773" width="0.6740%" height="15" fill="rgb(235,201,9)" fg:x="1281" fg:w="25"/><text x="34.7876%" y="783.50"></text></g><g><title>__rdl_realloc (1 samples, 0.03%)</title><rect x="35.3465%" y="709" width="0.0270%" height="15" fill="rgb(217,80,15)" fg:x="1311" fg:w="1"/><text x="35.5965%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.03%)</title><rect x="35.3465%" y="693" width="0.0270%" height="15" fill="rgb(219,152,8)" fg:x="1311" fg:w="1"/><text x="35.5965%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.46%)</title><rect x="35.3465%" y="789" width="0.4583%" height="15" fill="rgb(243,107,38)" fg:x="1311" fg:w="17"/><text x="35.5965%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.46%)</title><rect x="35.3465%" y="773" width="0.4583%" height="15" fill="rgb(231,17,5)" fg:x="1311" fg:w="17"/><text x="35.5965%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.46%)</title><rect x="35.3465%" y="757" width="0.4583%" height="15" fill="rgb(209,25,54)" fg:x="1311" fg:w="17"/><text x="35.5965%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.46%)</title><rect x="35.3465%" y="741" width="0.4583%" height="15" fill="rgb(219,0,2)" fg:x="1311" fg:w="17"/><text x="35.5965%" y="751.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.46%)</title><rect x="35.3465%" y="725" width="0.4583%" height="15" fill="rgb(246,9,5)" fg:x="1311" fg:w="17"/><text x="35.5965%" y="735.50"></text></g><g><title>realloc (16 samples, 0.43%)</title><rect x="35.3734%" y="709" width="0.4314%" height="15" fill="rgb(226,159,4)" fg:x="1312" fg:w="16"/><text x="35.6234%" y="719.50"></text></g><g><title>[libc.so.6] (11 samples, 0.30%)</title><rect x="35.5082%" y="693" width="0.2966%" height="15" fill="rgb(219,175,34)" fg:x="1317" fg:w="11"/><text x="35.7582%" y="703.50"></text></g><g><title>[libc.so.6] (9 samples, 0.24%)</title><rect x="35.5621%" y="677" width="0.2427%" height="15" fill="rgb(236,10,46)" fg:x="1319" fg:w="9"/><text x="35.8121%" y="687.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="35.7509%" y="661" width="0.0539%" height="15" fill="rgb(240,211,16)" fg:x="1326" fg:w="2"/><text x="36.0009%" y="671.50"></text></g><g><title>rmp::encode::RmpWrite::write_u8 (80 samples, 2.16%)</title><rect x="33.8636%" y="885" width="2.1569%" height="15" fill="rgb(205,3,43)" fg:x="1256" fg:w="80"/><text x="34.1136%" y="895.50">r..</text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (80 samples, 2.16%)</title><rect x="33.8636%" y="869" width="2.1569%" height="15" fill="rgb(245,7,22)" fg:x="1256" fg:w="80"/><text x="34.1136%" y="879.50">&lt;..</text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (80 samples, 2.16%)</title><rect x="33.8636%" y="853" width="2.1569%" height="15" fill="rgb(239,132,32)" fg:x="1256" fg:w="80"/><text x="34.1136%" y="863.50">s..</text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (80 samples, 2.16%)</title><rect x="33.8636%" y="837" width="2.1569%" height="15" fill="rgb(228,202,34)" fg:x="1256" fg:w="80"/><text x="34.1136%" y="847.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (30 samples, 0.81%)</title><rect x="35.2116%" y="821" width="0.8088%" height="15" fill="rgb(254,200,22)" fg:x="1306" fg:w="30"/><text x="35.4616%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (29 samples, 0.78%)</title><rect x="35.2386%" y="805" width="0.7819%" height="15" fill="rgb(219,10,39)" fg:x="1307" fg:w="29"/><text x="35.4886%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (8 samples, 0.22%)</title><rect x="35.8048%" y="789" width="0.2157%" height="15" fill="rgb(226,210,39)" fg:x="1328" fg:w="8"/><text x="36.0548%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (8 samples, 0.22%)</title><rect x="35.8048%" y="773" width="0.2157%" height="15" fill="rgb(208,219,16)" fg:x="1328" fg:w="8"/><text x="36.0548%" y="783.50"></text></g><g><title>rmp_serde::encode::to_vec (385 samples, 10.38%)</title><rect x="25.8291%" y="1205" width="10.3802%" height="15" fill="rgb(216,158,51)" fg:x="958" fg:w="385"/><text x="26.0791%" y="1215.50">rmp_serde::enco..</text></g><g><title>rmp_serde::encode::write (384 samples, 10.35%)</title><rect x="25.8560%" y="1189" width="10.3532%" height="15" fill="rgb(233,14,44)" fg:x="959" fg:w="384"/><text x="26.1060%" y="1199.50">rmp_serde::enco..</text></g><g><title>kvlr::streaming::client::_::&lt;impl serde::ser::Serialize for kvlr::streaming::client::Stream&gt;::serialize (384 samples, 10.35%)</title><rect x="25.8560%" y="1173" width="10.3532%" height="15" fill="rgb(237,97,39)" fg:x="959" fg:w="384"/><text x="26.1060%" y="1183.50">kvlr::streaming..</text></g><g><title>&lt;rmp_serde::encode::Compound&lt;W,C&gt; as serde::ser::SerializeStruct&gt;::serialize_field (380 samples, 10.25%)</title><rect x="25.9639%" y="1157" width="10.2453%" height="15" fill="rgb(218,198,43)" fg:x="963" fg:w="380"/><text x="26.2139%" y="1167.50">&lt;rmp_serde::enc..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (380 samples, 10.25%)</title><rect x="25.9639%" y="1141" width="10.2453%" height="15" fill="rgb(231,104,20)" fg:x="963" fg:w="380"/><text x="26.2139%" y="1151.50">serde::ser::imp..</text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::collect_seq (380 samples, 10.25%)</title><rect x="25.9639%" y="1125" width="10.2453%" height="15" fill="rgb(254,36,13)" fg:x="963" fg:w="380"/><text x="26.2139%" y="1135.50">&lt;&amp;mut rmp_serde..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (377 samples, 10.16%)</title><rect x="26.0448%" y="1109" width="10.1645%" height="15" fill="rgb(248,14,50)" fg:x="966" fg:w="377"/><text x="26.2948%" y="1119.50">core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (377 samples, 10.16%)</title><rect x="26.0448%" y="1093" width="10.1645%" height="15" fill="rgb(217,107,29)" fg:x="966" fg:w="377"/><text x="26.2948%" y="1103.50">&lt;core::iter::ad..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (377 samples, 10.16%)</title><rect x="26.0448%" y="1077" width="10.1645%" height="15" fill="rgb(251,169,33)" fg:x="966" fg:w="377"/><text x="26.2948%" y="1087.50">core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (368 samples, 9.92%)</title><rect x="26.2874%" y="1061" width="9.9218%" height="15" fill="rgb(217,108,32)" fg:x="975" fg:w="368"/><text x="26.5374%" y="1071.50">core::iter::tr..</text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::collect_seq::_{{closure}} (368 samples, 9.92%)</title><rect x="26.2874%" y="1045" width="9.9218%" height="15" fill="rgb(219,66,42)" fg:x="975" fg:w="368"/><text x="26.5374%" y="1055.50">&lt;&amp;mut rmp_serd..</text></g><g><title>&lt;rmp_serde::encode::MaybeUnknownLengthCompound&lt;W,C&gt; as serde::ser::SerializeSeq&gt;::serialize_element (368 samples, 9.92%)</title><rect x="26.2874%" y="1029" width="9.9218%" height="15" fill="rgb(206,180,7)" fg:x="975" fg:w="368"/><text x="26.5374%" y="1039.50">&lt;rmp_serde::en..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (368 samples, 9.92%)</title><rect x="26.2874%" y="1013" width="9.9218%" height="15" fill="rgb(208,226,31)" fg:x="975" fg:w="368"/><text x="26.5374%" y="1023.50">serde::ser::im..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (368 samples, 9.92%)</title><rect x="26.2874%" y="997" width="9.9218%" height="15" fill="rgb(218,26,49)" fg:x="975" fg:w="368"/><text x="26.5374%" y="1007.50">serde::ser::im..</text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_u8 (368 samples, 9.92%)</title><rect x="26.2874%" y="981" width="9.9218%" height="15" fill="rgb(233,197,48)" fg:x="975" fg:w="368"/><text x="26.5374%" y="991.50">&lt;&amp;mut rmp_serd..</text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_u64 (368 samples, 9.92%)</title><rect x="26.2874%" y="965" width="9.9218%" height="15" fill="rgb(252,181,51)" fg:x="975" fg:w="368"/><text x="26.5374%" y="975.50">&lt;&amp;mut rmp_serd..</text></g><g><title>rmp::encode::uint::write_uint (359 samples, 9.68%)</title><rect x="26.5301%" y="949" width="9.6792%" height="15" fill="rgb(253,90,19)" fg:x="984" fg:w="359"/><text x="26.7801%" y="959.50">rmp::encode::u..</text></g><g><title>rmp::encode::uint::write_uint8 (351 samples, 9.46%)</title><rect x="26.7458%" y="933" width="9.4635%" height="15" fill="rgb(215,171,30)" fg:x="992" fg:w="351"/><text x="26.9958%" y="943.50">rmp::encode::u..</text></g><g><title>rmp::encode::uint::write_u8 (227 samples, 6.12%)</title><rect x="30.0890%" y="917" width="6.1202%" height="15" fill="rgb(214,222,9)" fg:x="1116" fg:w="227"/><text x="30.3390%" y="927.50">rmp::enc..</text></g><g><title>rmp::encode::write_marker (96 samples, 2.59%)</title><rect x="33.6209%" y="901" width="2.5883%" height="15" fill="rgb(223,3,22)" fg:x="1247" fg:w="96"/><text x="33.8709%" y="911.50">rm..</text></g><g><title>rmp::marker::Marker::to_u8 (7 samples, 0.19%)</title><rect x="36.0205%" y="885" width="0.1887%" height="15" fill="rgb(225,196,46)" fg:x="1336" fg:w="7"/><text x="36.2705%" y="895.50"></text></g><g><title>kvlr::client::request::Request::call_dropped::_{{closure}} (554 samples, 14.94%)</title><rect x="21.2995%" y="1237" width="14.9366%" height="15" fill="rgb(209,110,37)" fg:x="790" fg:w="554"/><text x="21.5495%" y="1247.50">kvlr::client::request::..</text></g><g><title>kvlr::rpc::rpc_manager::RpcManager::call_request_dropped::_{{closure}} (553 samples, 14.91%)</title><rect x="21.3265%" y="1221" width="14.9097%" height="15" fill="rgb(249,89,12)" fg:x="791" fg:w="553"/><text x="21.5765%" y="1231.50">kvlr::rpc::rpc_manager:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="36.2092%" y="1205" width="0.0270%" height="15" fill="rgb(226,27,33)" fg:x="1343" fg:w="1"/><text x="36.4592%" y="1215.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.03%)</title><rect x="36.2092%" y="1189" width="0.0270%" height="15" fill="rgb(213,82,22)" fg:x="1343" fg:w="1"/><text x="36.4592%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.03%)</title><rect x="36.2092%" y="1173" width="0.0270%" height="15" fill="rgb(248,140,0)" fg:x="1343" fg:w="1"/><text x="36.4592%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="36.2092%" y="1157" width="0.0270%" height="15" fill="rgb(228,106,3)" fg:x="1343" fg:w="1"/><text x="36.4592%" y="1167.50"></text></g><g><title>rmp::encode::RmpWrite::write_data_u16 (1 samples, 0.03%)</title><rect x="36.2362%" y="1077" width="0.0270%" height="15" fill="rgb(209,23,37)" fg:x="1344" fg:w="1"/><text x="36.4862%" y="1087.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_seq::_{{closure}} (3 samples, 0.08%)</title><rect x="36.2362%" y="1109" width="0.0809%" height="15" fill="rgb(241,93,50)" fg:x="1344" fg:w="3"/><text x="36.4862%" y="1119.50"></text></g><g><title>rmp::encode::write_array_len (3 samples, 0.08%)</title><rect x="36.2362%" y="1093" width="0.0809%" height="15" fill="rgb(253,46,43)" fg:x="1344" fg:w="3"/><text x="36.4862%" y="1103.50"></text></g><g><title>rmp::encode::write_marker (2 samples, 0.05%)</title><rect x="36.2631%" y="1077" width="0.0539%" height="15" fill="rgb(226,206,43)" fg:x="1345" fg:w="2"/><text x="36.5131%" y="1087.50"></text></g><g><title>rmp::encode::RmpWrite::write_u8 (2 samples, 0.05%)</title><rect x="36.2631%" y="1061" width="0.0539%" height="15" fill="rgb(217,54,7)" fg:x="1345" fg:w="2"/><text x="36.5131%" y="1071.50"></text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (2 samples, 0.05%)</title><rect x="36.2631%" y="1045" width="0.0539%" height="15" fill="rgb(223,5,52)" fg:x="1345" fg:w="2"/><text x="36.5131%" y="1055.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.05%)</title><rect x="36.2631%" y="1029" width="0.0539%" height="15" fill="rgb(206,52,46)" fg:x="1345" fg:w="2"/><text x="36.5131%" y="1039.50"></text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="36.2631%" y="1013" width="0.0539%" height="15" fill="rgb(253,136,11)" fg:x="1345" fg:w="2"/><text x="36.5131%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (2 samples, 0.05%)</title><rect x="36.2631%" y="997" width="0.0539%" height="15" fill="rgb(208,106,33)" fg:x="1345" fg:w="2"/><text x="36.5131%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.05%)</title><rect x="36.2631%" y="981" width="0.0539%" height="15" fill="rgb(206,54,4)" fg:x="1345" fg:w="2"/><text x="36.5131%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="36.2631%" y="965" width="0.0539%" height="15" fill="rgb(213,3,15)" fg:x="1345" fg:w="2"/><text x="36.5131%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="36.2631%" y="949" width="0.0539%" height="15" fill="rgb(252,211,39)" fg:x="1345" fg:w="2"/><text x="36.5131%" y="959.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="36.2901%" y="933" width="0.0270%" height="15" fill="rgb(223,6,36)" fg:x="1346" fg:w="1"/><text x="36.5401%" y="943.50"></text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_seq (4 samples, 0.11%)</title><rect x="36.2362%" y="1141" width="0.1078%" height="15" fill="rgb(252,169,45)" fg:x="1344" fg:w="4"/><text x="36.4862%" y="1151.50"></text></g><g><title>rmp_serde::encode::Serializer&lt;W,C&gt;::maybe_unknown_len_compound (4 samples, 0.11%)</title><rect x="36.2362%" y="1125" width="0.1078%" height="15" fill="rgb(212,48,26)" fg:x="1344" fg:w="4"/><text x="36.4862%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="36.3171%" y="1109" width="0.0270%" height="15" fill="rgb(251,102,48)" fg:x="1347" fg:w="1"/><text x="36.5671%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="36.5328%" y="1093" width="0.0539%" height="15" fill="rgb(243,208,16)" fg:x="1355" fg:w="2"/><text x="36.7828%" y="1103.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="36.5328%" y="1077" width="0.0539%" height="15" fill="rgb(219,96,24)" fg:x="1355" fg:w="2"/><text x="36.7828%" y="1087.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="36.8833%" y="949" width="0.0270%" height="15" fill="rgb(219,33,29)" fg:x="1368" fg:w="1"/><text x="37.1333%" y="959.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="36.8833%" y="933" width="0.0270%" height="15" fill="rgb(223,176,5)" fg:x="1368" fg:w="1"/><text x="37.1333%" y="943.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="36.8833%" y="917" width="0.0270%" height="15" fill="rgb(228,140,14)" fg:x="1368" fg:w="1"/><text x="37.1333%" y="927.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="36.8833%" y="901" width="0.0270%" height="15" fill="rgb(217,179,31)" fg:x="1368" fg:w="1"/><text x="37.1333%" y="911.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="36.8833%" y="885" width="0.0270%" height="15" fill="rgb(230,9,30)" fg:x="1368" fg:w="1"/><text x="37.1333%" y="895.50"></text></g><g><title>set_next_entity (1 samples, 0.03%)</title><rect x="36.8833%" y="869" width="0.0270%" height="15" fill="rgb(230,136,20)" fg:x="1368" fg:w="1"/><text x="37.1333%" y="879.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="36.8833%" y="853" width="0.0270%" height="15" fill="rgb(215,210,22)" fg:x="1368" fg:w="1"/><text x="37.1333%" y="863.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="36.8833%" y="837" width="0.0270%" height="15" fill="rgb(218,43,5)" fg:x="1368" fg:w="1"/><text x="37.1333%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.27%)</title><rect x="36.6676%" y="981" width="0.2696%" height="15" fill="rgb(216,11,5)" fg:x="1360" fg:w="10"/><text x="36.9176%" y="991.50"></text></g><g><title>asm_sysvec_reschedule_ipi (2 samples, 0.05%)</title><rect x="36.8833%" y="965" width="0.0539%" height="15" fill="rgb(209,82,29)" fg:x="1368" fg:w="2"/><text x="37.1333%" y="975.50"></text></g><g><title>sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="36.9102%" y="949" width="0.0270%" height="15" fill="rgb(244,115,12)" fg:x="1369" fg:w="1"/><text x="37.1602%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and (7 samples, 0.19%)</title><rect x="37.2068%" y="949" width="0.1887%" height="15" fill="rgb(222,82,18)" fg:x="1380" fg:w="7"/><text x="37.4568%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (22 samples, 0.59%)</title><rect x="37.3955%" y="949" width="0.5932%" height="15" fill="rgb(249,227,8)" fg:x="1387" fg:w="22"/><text x="37.6455%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.13%)</title><rect x="38.9862%" y="805" width="0.1348%" height="15" fill="rgb(253,141,45)" fg:x="1446" fg:w="5"/><text x="39.2362%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.13%)</title><rect x="38.9862%" y="789" width="0.1348%" height="15" fill="rgb(234,184,4)" fg:x="1446" fg:w="5"/><text x="39.2362%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="39.1211%" y="805" width="0.0270%" height="15" fill="rgb(218,194,23)" fg:x="1451" fg:w="1"/><text x="39.3711%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="39.1211%" y="789" width="0.0270%" height="15" fill="rgb(235,66,41)" fg:x="1451" fg:w="1"/><text x="39.3711%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.03%)</title><rect x="39.1211%" y="773" width="0.0270%" height="15" fill="rgb(245,217,1)" fg:x="1451" fg:w="1"/><text x="39.3711%" y="783.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="39.1480%" y="789" width="0.0270%" height="15" fill="rgb(229,91,1)" fg:x="1452" fg:w="1"/><text x="39.3980%" y="799.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="39.1480%" y="773" width="0.0270%" height="15" fill="rgb(207,101,30)" fg:x="1452" fg:w="1"/><text x="39.3980%" y="783.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="39.1480%" y="757" width="0.0270%" height="15" fill="rgb(223,82,49)" fg:x="1452" fg:w="1"/><text x="39.3980%" y="767.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="39.1480%" y="741" width="0.0270%" height="15" fill="rgb(218,167,17)" fg:x="1452" fg:w="1"/><text x="39.3980%" y="751.50"></text></g><g><title>asm_sysvec_reschedule_ipi (3 samples, 0.08%)</title><rect x="39.1480%" y="805" width="0.0809%" height="15" fill="rgb(208,103,14)" fg:x="1452" fg:w="3"/><text x="39.3980%" y="815.50"></text></g><g><title>sync_regs (2 samples, 0.05%)</title><rect x="39.1750%" y="789" width="0.0539%" height="15" fill="rgb(238,20,8)" fg:x="1453" fg:w="2"/><text x="39.4250%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (40 samples, 1.08%)</title><rect x="38.7436%" y="853" width="1.0785%" height="15" fill="rgb(218,80,54)" fg:x="1437" fg:w="40"/><text x="38.9936%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (40 samples, 1.08%)</title><rect x="38.7436%" y="837" width="1.0785%" height="15" fill="rgb(240,144,17)" fg:x="1437" fg:w="40"/><text x="38.9936%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (40 samples, 1.08%)</title><rect x="38.7436%" y="821" width="1.0785%" height="15" fill="rgb(245,27,50)" fg:x="1437" fg:w="40"/><text x="38.9936%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.59%)</title><rect x="39.2289%" y="805" width="0.5932%" height="15" fill="rgb(251,51,7)" fg:x="1455" fg:w="22"/><text x="39.4789%" y="815.50"></text></g><g><title>[libc.so.6] (8 samples, 0.22%)</title><rect x="39.9569%" y="709" width="0.2157%" height="15" fill="rgb(245,217,29)" fg:x="1482" fg:w="8"/><text x="40.2069%" y="719.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="40.1186%" y="693" width="0.0539%" height="15" fill="rgb(221,176,29)" fg:x="1488" fg:w="2"/><text x="40.3686%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.30%)</title><rect x="39.9029%" y="805" width="0.2966%" height="15" fill="rgb(212,180,24)" fg:x="1480" fg:w="11"/><text x="40.1529%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.30%)</title><rect x="39.9029%" y="789" width="0.2966%" height="15" fill="rgb(254,24,2)" fg:x="1480" fg:w="11"/><text x="40.1529%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.30%)</title><rect x="39.9029%" y="773" width="0.2966%" height="15" fill="rgb(230,100,2)" fg:x="1480" fg:w="11"/><text x="40.1529%" y="783.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.30%)</title><rect x="39.9029%" y="757" width="0.2966%" height="15" fill="rgb(219,142,25)" fg:x="1480" fg:w="11"/><text x="40.1529%" y="767.50"></text></g><g><title>realloc (11 samples, 0.30%)</title><rect x="39.9029%" y="741" width="0.2966%" height="15" fill="rgb(240,73,43)" fg:x="1480" fg:w="11"/><text x="40.1529%" y="751.50"></text></g><g><title>[libc.so.6] (11 samples, 0.30%)</title><rect x="39.9029%" y="725" width="0.2966%" height="15" fill="rgb(214,114,15)" fg:x="1480" fg:w="11"/><text x="40.1529%" y="735.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="40.1726%" y="709" width="0.0270%" height="15" fill="rgb(207,130,4)" fg:x="1490" fg:w="1"/><text x="40.4226%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.32%)</title><rect x="39.9029%" y="821" width="0.3235%" height="15" fill="rgb(221,25,40)" fg:x="1480" fg:w="12"/><text x="40.1529%" y="831.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="40.1995%" y="805" width="0.0270%" height="15" fill="rgb(241,184,7)" fg:x="1491" fg:w="1"/><text x="40.4495%" y="815.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.03%)</title><rect x="40.1995%" y="789" width="0.0270%" height="15" fill="rgb(235,159,4)" fg:x="1491" fg:w="1"/><text x="40.4495%" y="799.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.03%)</title><rect x="40.1995%" y="773" width="0.0270%" height="15" fill="rgb(214,87,48)" fg:x="1491" fg:w="1"/><text x="40.4495%" y="783.50"></text></g><g><title>rmp::encode::RmpWrite::write_u8 (61 samples, 1.64%)</title><rect x="38.7436%" y="917" width="1.6446%" height="15" fill="rgb(246,198,24)" fg:x="1437" fg:w="61"/><text x="38.9936%" y="927.50"></text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (61 samples, 1.64%)</title><rect x="38.7436%" y="901" width="1.6446%" height="15" fill="rgb(209,66,40)" fg:x="1437" fg:w="61"/><text x="38.9936%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (61 samples, 1.64%)</title><rect x="38.7436%" y="885" width="1.6446%" height="15" fill="rgb(233,147,39)" fg:x="1437" fg:w="61"/><text x="38.9936%" y="895.50"></text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (61 samples, 1.64%)</title><rect x="38.7436%" y="869" width="1.6446%" height="15" fill="rgb(231,145,52)" fg:x="1437" fg:w="61"/><text x="38.9936%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (21 samples, 0.57%)</title><rect x="39.8221%" y="853" width="0.5662%" height="15" fill="rgb(206,20,26)" fg:x="1477" fg:w="21"/><text x="40.0721%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (20 samples, 0.54%)</title><rect x="39.8490%" y="837" width="0.5392%" height="15" fill="rgb(238,220,4)" fg:x="1478" fg:w="20"/><text x="40.0990%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (6 samples, 0.16%)</title><rect x="40.2265%" y="821" width="0.1618%" height="15" fill="rgb(252,195,42)" fg:x="1492" fg:w="6"/><text x="40.4765%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (6 samples, 0.16%)</title><rect x="40.2265%" y="805" width="0.1618%" height="15" fill="rgb(209,10,6)" fg:x="1492" fg:w="6"/><text x="40.4765%" y="815.50"></text></g><g><title>rmp::encode::uint::write_pfix (98 samples, 2.64%)</title><rect x="37.9887%" y="949" width="2.6422%" height="15" fill="rgb(229,3,52)" fg:x="1409" fg:w="98"/><text x="38.2387%" y="959.50">rm..</text></g><g><title>rmp::encode::write_marker (73 samples, 1.97%)</title><rect x="38.6627%" y="933" width="1.9682%" height="15" fill="rgb(253,49,37)" fg:x="1434" fg:w="73"/><text x="38.9127%" y="943.50">r..</text></g><g><title>rmp::marker::Marker::to_u8 (9 samples, 0.24%)</title><rect x="40.3882%" y="917" width="0.2427%" height="15" fill="rgb(240,103,49)" fg:x="1498" fg:w="9"/><text x="40.6382%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.11%)</title><rect x="41.3858%" y="933" width="0.1078%" height="15" fill="rgb(250,182,30)" fg:x="1535" fg:w="4"/><text x="41.6358%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="41.5206%" y="805" width="0.0270%" height="15" fill="rgb(248,8,30)" fg:x="1540" fg:w="1"/><text x="41.7706%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="41.5206%" y="789" width="0.0270%" height="15" fill="rgb(237,120,30)" fg:x="1540" fg:w="1"/><text x="41.7706%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="41.5476%" y="805" width="0.0809%" height="15" fill="rgb(221,146,34)" fg:x="1541" fg:w="3"/><text x="41.7976%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.08%)</title><rect x="41.5476%" y="789" width="0.0809%" height="15" fill="rgb(242,55,13)" fg:x="1541" fg:w="3"/><text x="41.7976%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.08%)</title><rect x="41.5476%" y="773" width="0.0809%" height="15" fill="rgb(242,112,31)" fg:x="1541" fg:w="3"/><text x="41.7976%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.92%)</title><rect x="41.4937%" y="853" width="0.9167%" height="15" fill="rgb(249,192,27)" fg:x="1539" fg:w="34"/><text x="41.7437%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.92%)</title><rect x="41.4937%" y="837" width="0.9167%" height="15" fill="rgb(208,204,44)" fg:x="1539" fg:w="34"/><text x="41.7437%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.92%)</title><rect x="41.4937%" y="821" width="0.9167%" height="15" fill="rgb(208,93,54)" fg:x="1539" fg:w="34"/><text x="41.7437%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.78%)</title><rect x="41.6285%" y="805" width="0.7819%" height="15" fill="rgb(242,1,31)" fg:x="1544" fg:w="29"/><text x="41.8785%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.05%)</title><rect x="42.4912%" y="805" width="0.0539%" height="15" fill="rgb(241,83,25)" fg:x="1576" fg:w="2"/><text x="42.7412%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.24%)</title><rect x="42.4912%" y="821" width="0.2427%" height="15" fill="rgb(205,169,50)" fg:x="1576" fg:w="9"/><text x="42.7412%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.19%)</title><rect x="42.5452%" y="805" width="0.1887%" height="15" fill="rgb(239,186,37)" fg:x="1578" fg:w="7"/><text x="42.7952%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.16%)</title><rect x="42.5721%" y="789" width="0.1618%" height="15" fill="rgb(205,221,10)" fg:x="1579" fg:w="6"/><text x="42.8221%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.16%)</title><rect x="42.5721%" y="773" width="0.1618%" height="15" fill="rgb(218,196,15)" fg:x="1579" fg:w="6"/><text x="42.8221%" y="783.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.16%)</title><rect x="42.5721%" y="757" width="0.1618%" height="15" fill="rgb(218,196,35)" fg:x="1579" fg:w="6"/><text x="42.8221%" y="767.50"></text></g><g><title>realloc (6 samples, 0.16%)</title><rect x="42.5721%" y="741" width="0.1618%" height="15" fill="rgb(233,63,24)" fg:x="1579" fg:w="6"/><text x="42.8221%" y="751.50"></text></g><g><title>[libc.so.6] (5 samples, 0.13%)</title><rect x="42.5991%" y="725" width="0.1348%" height="15" fill="rgb(225,8,4)" fg:x="1580" fg:w="5"/><text x="42.8491%" y="735.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="42.6260%" y="709" width="0.1078%" height="15" fill="rgb(234,105,35)" fg:x="1581" fg:w="4"/><text x="42.8760%" y="719.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="42.6800%" y="693" width="0.0539%" height="15" fill="rgb(236,21,32)" fg:x="1583" fg:w="2"/><text x="42.9300%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (30 samples, 0.81%)</title><rect x="42.4373%" y="837" width="0.8088%" height="15" fill="rgb(228,109,6)" fg:x="1574" fg:w="30"/><text x="42.6873%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (19 samples, 0.51%)</title><rect x="42.7339%" y="821" width="0.5123%" height="15" fill="rgb(229,215,31)" fg:x="1585" fg:w="19"/><text x="42.9839%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (19 samples, 0.51%)</title><rect x="42.7339%" y="805" width="0.5123%" height="15" fill="rgb(221,52,54)" fg:x="1585" fg:w="19"/><text x="42.9839%" y="815.50"></text></g><g><title>rmp::encode::RmpWrite::write_data_u8 (67 samples, 1.81%)</title><rect x="41.4937%" y="933" width="1.8064%" height="15" fill="rgb(252,129,43)" fg:x="1539" fg:w="67"/><text x="41.7437%" y="943.50">r..</text></g><g><title>rmp::encode::RmpWrite::write_u8 (67 samples, 1.81%)</title><rect x="41.4937%" y="917" width="1.8064%" height="15" fill="rgb(248,183,27)" fg:x="1539" fg:w="67"/><text x="41.7437%" y="927.50">r..</text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (67 samples, 1.81%)</title><rect x="41.4937%" y="901" width="1.8064%" height="15" fill="rgb(250,0,22)" fg:x="1539" fg:w="67"/><text x="41.7437%" y="911.50">&lt;..</text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (67 samples, 1.81%)</title><rect x="41.4937%" y="885" width="1.8064%" height="15" fill="rgb(213,166,10)" fg:x="1539" fg:w="67"/><text x="41.7437%" y="895.50">s..</text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (67 samples, 1.81%)</title><rect x="41.4937%" y="869" width="1.8064%" height="15" fill="rgb(207,163,36)" fg:x="1539" fg:w="67"/><text x="41.7437%" y="879.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (33 samples, 0.89%)</title><rect x="42.4104%" y="853" width="0.8897%" height="15" fill="rgb(208,122,22)" fg:x="1573" fg:w="33"/><text x="42.6604%" y="863.50"></text></g><g><title>asm_sysvec_reschedule_ipi (2 samples, 0.05%)</title><rect x="43.2462%" y="837" width="0.0539%" height="15" fill="rgb(207,104,49)" fg:x="1604" fg:w="2"/><text x="43.4962%" y="847.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.05%)</title><rect x="43.2462%" y="821" width="0.0539%" height="15" fill="rgb(248,211,50)" fg:x="1604" fg:w="2"/><text x="43.4962%" y="831.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.05%)</title><rect x="43.2462%" y="805" width="0.0539%" height="15" fill="rgb(217,13,45)" fg:x="1604" fg:w="2"/><text x="43.4962%" y="815.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="43.2731%" y="789" width="0.0270%" height="15" fill="rgb(211,216,49)" fg:x="1605" fg:w="1"/><text x="43.5231%" y="799.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="43.2731%" y="773" width="0.0270%" height="15" fill="rgb(221,58,53)" fg:x="1605" fg:w="1"/><text x="43.5231%" y="783.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.03%)</title><rect x="43.2731%" y="757" width="0.0270%" height="15" fill="rgb(220,112,41)" fg:x="1605" fg:w="1"/><text x="43.5231%" y="767.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.03%)</title><rect x="43.2731%" y="741" width="0.0270%" height="15" fill="rgb(236,38,28)" fg:x="1605" fg:w="1"/><text x="43.5231%" y="751.50"></text></g><g><title>perf_ctx_enable (1 samples, 0.03%)</title><rect x="43.2731%" y="725" width="0.0270%" height="15" fill="rgb(227,195,22)" fg:x="1605" fg:w="1"/><text x="43.5231%" y="735.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (1 samples, 0.03%)</title><rect x="43.2731%" y="709" width="0.0270%" height="15" fill="rgb(214,55,33)" fg:x="1605" fg:w="1"/><text x="43.5231%" y="719.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="43.4888%" y="917" width="0.0270%" height="15" fill="rgb(248,80,13)" fg:x="1613" fg:w="1"/><text x="43.7388%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="43.4888%" y="901" width="0.0270%" height="15" fill="rgb(238,52,6)" fg:x="1613" fg:w="1"/><text x="43.7388%" y="911.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="43.4888%" y="885" width="0.0270%" height="15" fill="rgb(224,198,47)" fg:x="1613" fg:w="1"/><text x="43.7388%" y="895.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="43.4888%" y="869" width="0.0270%" height="15" fill="rgb(233,171,20)" fg:x="1613" fg:w="1"/><text x="43.7388%" y="879.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="43.4888%" y="853" width="0.0270%" height="15" fill="rgb(241,30,25)" fg:x="1613" fg:w="1"/><text x="43.7388%" y="863.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="43.4888%" y="837" width="0.0270%" height="15" fill="rgb(207,171,38)" fg:x="1613" fg:w="1"/><text x="43.7388%" y="847.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="43.4888%" y="821" width="0.0270%" height="15" fill="rgb(234,70,1)" fg:x="1613" fg:w="1"/><text x="43.7388%" y="831.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="43.4888%" y="805" width="0.0270%" height="15" fill="rgb(232,178,18)" fg:x="1613" fg:w="1"/><text x="43.7388%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.08%)</title><rect x="43.5697%" y="805" width="0.0809%" height="15" fill="rgb(241,78,40)" fg:x="1616" fg:w="3"/><text x="43.8197%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.08%)</title><rect x="43.5697%" y="789" width="0.0809%" height="15" fill="rgb(222,35,25)" fg:x="1616" fg:w="3"/><text x="43.8197%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.13%)</title><rect x="43.6506%" y="805" width="0.1348%" height="15" fill="rgb(207,92,16)" fg:x="1619" fg:w="5"/><text x="43.9006%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.13%)</title><rect x="43.6506%" y="789" width="0.1348%" height="15" fill="rgb(216,59,51)" fg:x="1619" fg:w="5"/><text x="43.9006%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.13%)</title><rect x="43.6506%" y="773" width="0.1348%" height="15" fill="rgb(213,80,28)" fg:x="1619" fg:w="5"/><text x="43.9006%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.70%)</title><rect x="43.5158%" y="853" width="0.7010%" height="15" fill="rgb(220,93,7)" fg:x="1614" fg:w="26"/><text x="43.7658%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.70%)</title><rect x="43.5158%" y="837" width="0.7010%" height="15" fill="rgb(225,24,44)" fg:x="1614" fg:w="26"/><text x="43.7658%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.70%)</title><rect x="43.5158%" y="821" width="0.7010%" height="15" fill="rgb(243,74,40)" fg:x="1614" fg:w="26"/><text x="43.7658%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.43%)</title><rect x="43.7854%" y="805" width="0.4314%" height="15" fill="rgb(228,39,7)" fg:x="1624" fg:w="16"/><text x="44.0354%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.35%)</title><rect x="44.2977%" y="821" width="0.3505%" height="15" fill="rgb(227,79,8)" fg:x="1643" fg:w="13"/><text x="44.5477%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.35%)</title><rect x="44.2977%" y="805" width="0.3505%" height="15" fill="rgb(236,58,11)" fg:x="1643" fg:w="13"/><text x="44.5477%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.35%)</title><rect x="44.2977%" y="789" width="0.3505%" height="15" fill="rgb(249,63,35)" fg:x="1643" fg:w="13"/><text x="44.5477%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.35%)</title><rect x="44.2977%" y="773" width="0.3505%" height="15" fill="rgb(252,114,16)" fg:x="1643" fg:w="13"/><text x="44.5477%" y="783.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.35%)</title><rect x="44.2977%" y="757" width="0.3505%" height="15" fill="rgb(254,151,24)" fg:x="1643" fg:w="13"/><text x="44.5477%" y="767.50"></text></g><g><title>realloc (13 samples, 0.35%)</title><rect x="44.2977%" y="741" width="0.3505%" height="15" fill="rgb(253,54,39)" fg:x="1643" fg:w="13"/><text x="44.5477%" y="751.50"></text></g><g><title>[libc.so.6] (10 samples, 0.27%)</title><rect x="44.3785%" y="725" width="0.2696%" height="15" fill="rgb(243,25,45)" fg:x="1646" fg:w="10"/><text x="44.6285%" y="735.50"></text></g><g><title>[libc.so.6] (8 samples, 0.22%)</title><rect x="44.4325%" y="709" width="0.2157%" height="15" fill="rgb(234,134,9)" fg:x="1648" fg:w="8"/><text x="44.6825%" y="719.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="44.5942%" y="693" width="0.0539%" height="15" fill="rgb(227,166,31)" fg:x="1654" fg:w="2"/><text x="44.8442%" y="703.50"></text></g><g><title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="44.6212%" y="677" width="0.0270%" height="15" fill="rgb(245,143,41)" fg:x="1655" fg:w="1"/><text x="44.8712%" y="687.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="44.6212%" y="661" width="0.0270%" height="15" fill="rgb(238,181,32)" fg:x="1655" fg:w="1"/><text x="44.8712%" y="671.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="44.6212%" y="645" width="0.0270%" height="15" fill="rgb(224,113,18)" fg:x="1655" fg:w="1"/><text x="44.8712%" y="655.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="44.6212%" y="629" width="0.0270%" height="15" fill="rgb(240,229,28)" fg:x="1655" fg:w="1"/><text x="44.8712%" y="639.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="44.6212%" y="613" width="0.0270%" height="15" fill="rgb(250,185,3)" fg:x="1655" fg:w="1"/><text x="44.8712%" y="623.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="44.6212%" y="597" width="0.0270%" height="15" fill="rgb(212,59,25)" fg:x="1655" fg:w="1"/><text x="44.8712%" y="607.50"></text></g><g><title>put_prev_entity (1 samples, 0.03%)</title><rect x="44.6212%" y="581" width="0.0270%" height="15" fill="rgb(221,87,20)" fg:x="1655" fg:w="1"/><text x="44.8712%" y="591.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="44.6212%" y="565" width="0.0270%" height="15" fill="rgb(213,74,28)" fg:x="1655" fg:w="1"/><text x="44.8712%" y="575.50"></text></g><g><title>rmp::encode::RmpWrite::write_u8 (46 samples, 1.24%)</title><rect x="43.5158%" y="917" width="1.2402%" height="15" fill="rgb(224,132,34)" fg:x="1614" fg:w="46"/><text x="43.7658%" y="927.50"></text></g><g><title>&lt;T as rmp::encode::RmpWrite&gt;::write_bytes (46 samples, 1.24%)</title><rect x="43.5158%" y="901" width="1.2402%" height="15" fill="rgb(222,101,24)" fg:x="1614" fg:w="46"/><text x="43.7658%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (46 samples, 1.24%)</title><rect x="43.5158%" y="885" width="1.2402%" height="15" fill="rgb(254,142,4)" fg:x="1614" fg:w="46"/><text x="43.7658%" y="895.50"></text></g><g><title>&lt;rmp_serde::encode::FallibleWriter as std::io::Write&gt;::write_all (46 samples, 1.24%)</title><rect x="43.5158%" y="869" width="1.2402%" height="15" fill="rgb(230,229,49)" fg:x="1614" fg:w="46"/><text x="43.7658%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (20 samples, 0.54%)</title><rect x="44.2168%" y="853" width="0.5392%" height="15" fill="rgb(238,70,47)" fg:x="1640" fg:w="20"/><text x="44.4668%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (20 samples, 0.54%)</title><rect x="44.2168%" y="837" width="0.5392%" height="15" fill="rgb(231,160,17)" fg:x="1640" fg:w="20"/><text x="44.4668%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.11%)</title><rect x="44.6482%" y="821" width="0.1078%" height="15" fill="rgb(218,68,53)" fg:x="1656" fg:w="4"/><text x="44.8982%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (4 samples, 0.11%)</title><rect x="44.6482%" y="805" width="0.1078%" height="15" fill="rgb(236,111,10)" fg:x="1656" fg:w="4"/><text x="44.8982%" y="815.50"></text></g><g><title>kvlr::streaming::stream_sender::StreamSender&lt;T&gt;::send::_{{closure}} (878 samples, 23.67%)</title><rect x="21.1917%" y="1253" width="23.6721%" height="15" fill="rgb(224,34,41)" fg:x="786" fg:w="878"/><text x="21.4417%" y="1263.50">kvlr::streaming::stream_sender::Stream..</text></g><g><title>kvlr::streaming::stream_sender::StreamSender&lt;T&gt;::as_stream_request (320 samples, 8.63%)</title><rect x="36.2362%" y="1237" width="8.6277%" height="15" fill="rgb(241,118,19)" fg:x="1344" fg:w="320"/><text x="36.4862%" y="1247.50">kvlr::stream..</text></g><g><title>rmp_serde::encode::to_vec (320 samples, 8.63%)</title><rect x="36.2362%" y="1221" width="8.6277%" height="15" fill="rgb(238,129,25)" fg:x="1344" fg:w="320"/><text x="36.4862%" y="1231.50">rmp_serde::e..</text></g><g><title>rmp_serde::encode::write (320 samples, 8.63%)</title><rect x="36.2362%" y="1205" width="8.6277%" height="15" fill="rgb(238,22,31)" fg:x="1344" fg:w="320"/><text x="36.4862%" y="1215.50">rmp_serde::e..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (320 samples, 8.63%)</title><rect x="36.2362%" y="1189" width="8.6277%" height="15" fill="rgb(222,174,48)" fg:x="1344" fg:w="320"/><text x="36.4862%" y="1199.50">serde::ser::..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T]&gt;::serialize (320 samples, 8.63%)</title><rect x="36.2362%" y="1173" width="8.6277%" height="15" fill="rgb(206,152,40)" fg:x="1344" fg:w="320"/><text x="36.4862%" y="1183.50">serde::ser::..</text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::collect_seq (320 samples, 8.63%)</title><rect x="36.2362%" y="1157" width="8.6277%" height="15" fill="rgb(218,99,54)" fg:x="1344" fg:w="320"/><text x="36.4862%" y="1167.50">&lt;&amp;mut rmp_se..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (316 samples, 8.52%)</title><rect x="36.3440%" y="1141" width="8.5198%" height="15" fill="rgb(220,174,26)" fg:x="1348" fg:w="316"/><text x="36.5940%" y="1151.50">core::iter::..</text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (316 samples, 8.52%)</title><rect x="36.3440%" y="1125" width="8.5198%" height="15" fill="rgb(245,116,9)" fg:x="1348" fg:w="316"/><text x="36.5940%" y="1135.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (316 samples, 8.52%)</title><rect x="36.3440%" y="1109" width="8.5198%" height="15" fill="rgb(209,72,35)" fg:x="1348" fg:w="316"/><text x="36.5940%" y="1119.50">core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (307 samples, 8.28%)</title><rect x="36.5867%" y="1093" width="8.2772%" height="15" fill="rgb(226,126,21)" fg:x="1357" fg:w="307"/><text x="36.8367%" y="1103.50">core::iter::..</text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::collect_seq::_{{closure}} (307 samples, 8.28%)</title><rect x="36.5867%" y="1077" width="8.2772%" height="15" fill="rgb(227,192,1)" fg:x="1357" fg:w="307"/><text x="36.8367%" y="1087.50">&lt;&amp;mut rmp_se..</text></g><g><title>&lt;rmp_serde::encode::MaybeUnknownLengthCompound&lt;W,C&gt; as serde::ser::SerializeSeq&gt;::serialize_element (307 samples, 8.28%)</title><rect x="36.5867%" y="1061" width="8.2772%" height="15" fill="rgb(237,180,29)" fg:x="1357" fg:w="307"/><text x="36.8367%" y="1071.50">&lt;rmp_serde::..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (307 samples, 8.28%)</title><rect x="36.5867%" y="1045" width="8.2772%" height="15" fill="rgb(230,197,35)" fg:x="1357" fg:w="307"/><text x="36.8367%" y="1055.50">serde::ser::..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (307 samples, 8.28%)</title><rect x="36.5867%" y="1029" width="8.2772%" height="15" fill="rgb(246,193,31)" fg:x="1357" fg:w="307"/><text x="36.8367%" y="1039.50">serde::ser::..</text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_u8 (307 samples, 8.28%)</title><rect x="36.5867%" y="1013" width="8.2772%" height="15" fill="rgb(241,36,4)" fg:x="1357" fg:w="307"/><text x="36.8367%" y="1023.50">&lt;&amp;mut rmp_se..</text></g><g><title>&lt;&amp;mut rmp_serde::encode::Serializer&lt;W,C&gt; as serde::ser::Serializer&gt;::serialize_u64 (307 samples, 8.28%)</title><rect x="36.5867%" y="997" width="8.2772%" height="15" fill="rgb(241,130,17)" fg:x="1357" fg:w="307"/><text x="36.8367%" y="1007.50">&lt;&amp;mut rmp_se..</text></g><g><title>rmp::encode::uint::write_uint (294 samples, 7.93%)</title><rect x="36.9372%" y="981" width="7.9267%" height="15" fill="rgb(206,137,32)" fg:x="1370" fg:w="294"/><text x="37.1872%" y="991.50">rmp::encode..</text></g><g><title>rmp::encode::uint::write_uint8 (287 samples, 7.74%)</title><rect x="37.1259%" y="965" width="7.7379%" height="15" fill="rgb(237,228,51)" fg:x="1377" fg:w="287"/><text x="37.3759%" y="975.50">rmp::encode..</text></g><g><title>rmp::encode::uint::write_u8 (157 samples, 4.23%)</title><rect x="40.6309%" y="949" width="4.2329%" height="15" fill="rgb(243,6,42)" fg:x="1507" fg:w="157"/><text x="40.8809%" y="959.50">rmp::..</text></g><g><title>rmp::encode::write_marker (58 samples, 1.56%)</title><rect x="43.3001%" y="933" width="1.5638%" height="15" fill="rgb(251,74,28)" fg:x="1606" fg:w="58"/><text x="43.5501%" y="943.50"></text></g><g><title>rmp::marker::Marker::to_u8 (4 samples, 0.11%)</title><rect x="44.7560%" y="917" width="0.1078%" height="15" fill="rgb(218,20,49)" fg:x="1660" fg:w="4"/><text x="45.0060%" y="927.50"></text></g><g><title>save_fpregs_to_fpstate (1 samples, 0.03%)</title><rect x="44.8369%" y="901" width="0.0270%" height="15" fill="rgb(238,28,14)" fg:x="1663" fg:w="1"/><text x="45.0869%" y="911.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="45.0526%" y="997" width="0.0809%" height="15" fill="rgb(229,40,46)" fg:x="1671" fg:w="3"/><text x="45.3026%" y="1007.50"></text></g><g><title>__fdget_pos (6 samples, 0.16%)</title><rect x="45.2143%" y="949" width="0.1618%" height="15" fill="rgb(244,195,20)" fg:x="1677" fg:w="6"/><text x="45.4643%" y="959.50"></text></g><g><title>__fget_light (6 samples, 0.16%)</title><rect x="45.2143%" y="933" width="0.1618%" height="15" fill="rgb(253,56,35)" fg:x="1677" fg:w="6"/><text x="45.4643%" y="943.50"></text></g><g><title>fput (1 samples, 0.03%)</title><rect x="45.3761%" y="949" width="0.0270%" height="15" fill="rgb(210,149,44)" fg:x="1683" fg:w="1"/><text x="45.6261%" y="959.50"></text></g><g><title>__check_heap_object (2 samples, 0.05%)</title><rect x="45.7266%" y="901" width="0.0539%" height="15" fill="rgb(240,135,12)" fg:x="1696" fg:w="2"/><text x="45.9766%" y="911.50"></text></g><g><title>__check_object_size (7 samples, 0.19%)</title><rect x="45.6996%" y="917" width="0.1887%" height="15" fill="rgb(251,24,50)" fg:x="1695" fg:w="7"/><text x="45.9496%" y="927.50"></text></g><g><title>__virt_addr_valid (4 samples, 0.11%)</title><rect x="45.7805%" y="901" width="0.1078%" height="15" fill="rgb(243,200,47)" fg:x="1698" fg:w="4"/><text x="46.0305%" y="911.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="45.8884%" y="917" width="0.0539%" height="15" fill="rgb(224,166,26)" fg:x="1702" fg:w="2"/><text x="46.1384%" y="927.50"></text></g><g><title>__wake_up_common (1 samples, 0.03%)</title><rect x="45.9153%" y="901" width="0.0270%" height="15" fill="rgb(233,0,47)" fg:x="1703" fg:w="1"/><text x="46.1653%" y="911.50"></text></g><g><title>_copy_from_iter (1 samples, 0.03%)</title><rect x="45.9423%" y="917" width="0.0270%" height="15" fill="rgb(253,80,5)" fg:x="1704" fg:w="1"/><text x="46.1923%" y="927.50"></text></g><g><title>copyin (1 samples, 0.03%)</title><rect x="45.9423%" y="901" width="0.0270%" height="15" fill="rgb(214,133,25)" fg:x="1704" fg:w="1"/><text x="46.1923%" y="911.50"></text></g><g><title>rep_movs_alternative (1 samples, 0.03%)</title><rect x="45.9423%" y="885" width="0.0270%" height="15" fill="rgb(209,27,14)" fg:x="1704" fg:w="1"/><text x="46.1923%" y="895.50"></text></g><g><title>add_wait_queue (1 samples, 0.03%)</title><rect x="46.2928%" y="901" width="0.0270%" height="15" fill="rgb(219,102,51)" fg:x="1717" fg:w="1"/><text x="46.5428%" y="911.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="46.2928%" y="885" width="0.0270%" height="15" fill="rgb(237,18,16)" fg:x="1717" fg:w="1"/><text x="46.5428%" y="895.50"></text></g><g><title>__tty_insert_flip_string_flags (1 samples, 0.03%)</title><rect x="46.3198%" y="853" width="0.0270%" height="15" fill="rgb(241,85,17)" fg:x="1718" fg:w="1"/><text x="46.5698%" y="863.50"></text></g><g><title>memcpy_orig (1 samples, 0.03%)</title><rect x="46.3198%" y="837" width="0.0270%" height="15" fill="rgb(236,90,42)" fg:x="1718" fg:w="1"/><text x="46.5698%" y="847.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="46.3467%" y="789" width="0.0270%" height="15" fill="rgb(249,57,21)" fg:x="1719" fg:w="1"/><text x="46.5967%" y="799.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.03%)</title><rect x="46.3737%" y="789" width="0.0270%" height="15" fill="rgb(243,12,36)" fg:x="1720" fg:w="1"/><text x="46.6237%" y="799.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="46.3737%" y="773" width="0.0270%" height="15" fill="rgb(253,128,47)" fg:x="1720" fg:w="1"/><text x="46.6237%" y="783.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.05%)</title><rect x="46.4006%" y="789" width="0.0539%" height="15" fill="rgb(207,33,20)" fg:x="1721" fg:w="2"/><text x="46.6506%" y="799.50"></text></g><g><title>available_idle_cpu (1 samples, 0.03%)</title><rect x="46.4276%" y="773" width="0.0270%" height="15" fill="rgb(233,215,35)" fg:x="1722" fg:w="1"/><text x="46.6776%" y="783.50"></text></g><g><title>check_preempt_curr (1 samples, 0.03%)</title><rect x="46.4815%" y="773" width="0.0270%" height="15" fill="rgb(249,188,52)" fg:x="1724" fg:w="1"/><text x="46.7315%" y="783.50"></text></g><g><title>check_preempt_wakeup (1 samples, 0.03%)</title><rect x="46.4815%" y="757" width="0.0270%" height="15" fill="rgb(225,12,32)" fg:x="1724" fg:w="1"/><text x="46.7315%" y="767.50"></text></g><g><title>update_curr (2 samples, 0.05%)</title><rect x="46.5355%" y="725" width="0.0539%" height="15" fill="rgb(247,98,14)" fg:x="1726" fg:w="2"/><text x="46.7855%" y="735.50"></text></g><g><title>__calc_delta.constprop.0 (1 samples, 0.03%)</title><rect x="46.5624%" y="709" width="0.0270%" height="15" fill="rgb(247,219,48)" fg:x="1727" fg:w="1"/><text x="46.8124%" y="719.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.11%)</title><rect x="46.5085%" y="757" width="0.1078%" height="15" fill="rgb(253,60,48)" fg:x="1725" fg:w="4"/><text x="46.7585%" y="767.50"></text></g><g><title>enqueue_entity (4 samples, 0.11%)</title><rect x="46.5085%" y="741" width="0.1078%" height="15" fill="rgb(245,15,52)" fg:x="1725" fg:w="4"/><text x="46.7585%" y="751.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="46.5894%" y="725" width="0.0270%" height="15" fill="rgb(220,133,28)" fg:x="1728" fg:w="1"/><text x="46.8394%" y="735.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="46.5894%" y="709" width="0.0270%" height="15" fill="rgb(217,180,4)" fg:x="1728" fg:w="1"/><text x="46.8394%" y="719.50"></text></g><g><title>do_output_char (12 samples, 0.32%)</title><rect x="46.3198%" y="901" width="0.3235%" height="15" fill="rgb(251,24,1)" fg:x="1718" fg:w="12"/><text x="46.5698%" y="911.50"></text></g><g><title>pty_write (12 samples, 0.32%)</title><rect x="46.3198%" y="885" width="0.3235%" height="15" fill="rgb(212,185,49)" fg:x="1718" fg:w="12"/><text x="46.5698%" y="895.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (12 samples, 0.32%)</title><rect x="46.3198%" y="869" width="0.3235%" height="15" fill="rgb(215,175,22)" fg:x="1718" fg:w="12"/><text x="46.5698%" y="879.50"></text></g><g><title>queue_work_on (11 samples, 0.30%)</title><rect x="46.3467%" y="853" width="0.2966%" height="15" fill="rgb(250,205,14)" fg:x="1719" fg:w="11"/><text x="46.5967%" y="863.50"></text></g><g><title>__queue_work.part.0 (11 samples, 0.30%)</title><rect x="46.3467%" y="837" width="0.2966%" height="15" fill="rgb(225,211,22)" fg:x="1719" fg:w="11"/><text x="46.5967%" y="847.50"></text></g><g><title>kick_pool (11 samples, 0.30%)</title><rect x="46.3467%" y="821" width="0.2966%" height="15" fill="rgb(251,179,42)" fg:x="1719" fg:w="11"/><text x="46.5967%" y="831.50"></text></g><g><title>try_to_wake_up (11 samples, 0.30%)</title><rect x="46.3467%" y="805" width="0.2966%" height="15" fill="rgb(208,216,51)" fg:x="1719" fg:w="11"/><text x="46.5967%" y="815.50"></text></g><g><title>ttwu_do_activate (7 samples, 0.19%)</title><rect x="46.4546%" y="789" width="0.1887%" height="15" fill="rgb(235,36,11)" fg:x="1723" fg:w="7"/><text x="46.7046%" y="799.50"></text></g><g><title>enqueue_task (5 samples, 0.13%)</title><rect x="46.5085%" y="773" width="0.1348%" height="15" fill="rgb(213,189,28)" fg:x="1725" fg:w="5"/><text x="46.7585%" y="783.50"></text></g><g><title>psi_task_change (1 samples, 0.03%)</title><rect x="46.6163%" y="757" width="0.0270%" height="15" fill="rgb(227,203,42)" fg:x="1729" fg:w="1"/><text x="46.8663%" y="767.50"></text></g><g><title>psi_group_change (1 samples, 0.03%)</title><rect x="46.6163%" y="741" width="0.0270%" height="15" fill="rgb(244,72,36)" fg:x="1729" fg:w="1"/><text x="46.8663%" y="751.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="46.8051%" y="837" width="0.0270%" height="15" fill="rgb(213,53,17)" fg:x="1736" fg:w="1"/><text x="47.0551%" y="847.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.11%)</title><rect x="46.7511%" y="853" width="0.1078%" height="15" fill="rgb(207,167,3)" fg:x="1734" fg:w="4"/><text x="47.0011%" y="863.50"></text></g><g><title>perf_ctx_disable (1 samples, 0.03%)</title><rect x="46.8320%" y="837" width="0.0270%" height="15" fill="rgb(216,98,30)" fg:x="1737" fg:w="1"/><text x="47.0820%" y="847.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="46.8590%" y="821" width="0.0270%" height="15" fill="rgb(236,123,15)" fg:x="1738" fg:w="1"/><text x="47.1090%" y="831.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.11%)</title><rect x="46.8590%" y="853" width="0.1078%" height="15" fill="rgb(248,81,50)" fg:x="1738" fg:w="4"/><text x="47.1090%" y="863.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.11%)</title><rect x="46.8590%" y="837" width="0.1078%" height="15" fill="rgb(214,120,4)" fg:x="1738" fg:w="4"/><text x="47.1090%" y="847.50"></text></g><g><title>perf_ctx_enable (3 samples, 0.08%)</title><rect x="46.8860%" y="821" width="0.0809%" height="15" fill="rgb(208,179,34)" fg:x="1739" fg:w="3"/><text x="47.1360%" y="831.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (3 samples, 0.08%)</title><rect x="46.8860%" y="805" width="0.0809%" height="15" fill="rgb(227,140,7)" fg:x="1739" fg:w="3"/><text x="47.1360%" y="815.50"></text></g><g><title>native_write_msr (3 samples, 0.08%)</title><rect x="46.8860%" y="789" width="0.0809%" height="15" fill="rgb(214,22,6)" fg:x="1739" fg:w="3"/><text x="47.1360%" y="799.50"></text></g><g><title>__enqueue_entity (3 samples, 0.08%)</title><rect x="47.0208%" y="821" width="0.0809%" height="15" fill="rgb(207,137,27)" fg:x="1744" fg:w="3"/><text x="47.2708%" y="831.50"></text></g><g><title>__calc_delta.constprop.0 (1 samples, 0.03%)</title><rect x="47.1286%" y="805" width="0.0270%" height="15" fill="rgb(210,8,46)" fg:x="1748" fg:w="1"/><text x="47.3786%" y="815.50"></text></g><g><title>update_curr (3 samples, 0.08%)</title><rect x="47.1016%" y="821" width="0.0809%" height="15" fill="rgb(240,16,54)" fg:x="1747" fg:w="3"/><text x="47.3516%" y="831.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.03%)</title><rect x="47.1556%" y="805" width="0.0270%" height="15" fill="rgb(211,209,29)" fg:x="1749" fg:w="1"/><text x="47.4056%" y="815.50"></text></g><g><title>put_prev_entity (9 samples, 0.24%)</title><rect x="46.9938%" y="837" width="0.2427%" height="15" fill="rgb(226,228,24)" fg:x="1743" fg:w="9"/><text x="47.2438%" y="847.50"></text></g><g><title>update_load_avg (2 samples, 0.05%)</title><rect x="47.1825%" y="821" width="0.0539%" height="15" fill="rgb(222,84,9)" fg:x="1750" fg:w="2"/><text x="47.4325%" y="831.50"></text></g><g><title>set_next_entity (1 samples, 0.03%)</title><rect x="47.2365%" y="837" width="0.0270%" height="15" fill="rgb(234,203,30)" fg:x="1752" fg:w="1"/><text x="47.4865%" y="847.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="47.2365%" y="821" width="0.0270%" height="15" fill="rgb(238,109,14)" fg:x="1752" fg:w="1"/><text x="47.4865%" y="831.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="47.2365%" y="805" width="0.0270%" height="15" fill="rgb(233,206,34)" fg:x="1752" fg:w="1"/><text x="47.4865%" y="815.50"></text></g><g><title>pick_next_task_fair (12 samples, 0.32%)</title><rect x="46.9668%" y="853" width="0.3235%" height="15" fill="rgb(220,167,47)" fg:x="1742" fg:w="12"/><text x="47.2168%" y="863.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="47.2634%" y="837" width="0.0270%" height="15" fill="rgb(238,105,10)" fg:x="1753" fg:w="1"/><text x="47.5134%" y="847.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.03%)</title><rect x="47.2904%" y="853" width="0.0270%" height="15" fill="rgb(213,227,17)" fg:x="1754" fg:w="1"/><text x="47.5404%" y="863.50"></text></g><g><title>record_times (1 samples, 0.03%)</title><rect x="47.2904%" y="837" width="0.0270%" height="15" fill="rgb(217,132,38)" fg:x="1754" fg:w="1"/><text x="47.5404%" y="847.50"></text></g><g><title>psi_flags_change (1 samples, 0.03%)</title><rect x="47.3173%" y="837" width="0.0270%" height="15" fill="rgb(242,146,4)" fg:x="1755" fg:w="1"/><text x="47.5673%" y="847.50"></text></g><g><title>mutex_lock (28 samples, 0.75%)</title><rect x="46.6433%" y="901" width="0.7549%" height="15" fill="rgb(212,61,9)" fg:x="1730" fg:w="28"/><text x="46.8933%" y="911.50"></text></g><g><title>__cond_resched (26 samples, 0.70%)</title><rect x="46.6972%" y="885" width="0.7010%" height="15" fill="rgb(247,126,22)" fg:x="1732" fg:w="26"/><text x="46.9472%" y="895.50"></text></g><g><title>__schedule (26 samples, 0.70%)</title><rect x="46.6972%" y="869" width="0.7010%" height="15" fill="rgb(220,196,2)" fg:x="1732" fg:w="26"/><text x="46.9472%" y="879.50"></text></g><g><title>psi_task_switch (3 samples, 0.08%)</title><rect x="47.3173%" y="853" width="0.0809%" height="15" fill="rgb(208,46,4)" fg:x="1755" fg:w="3"/><text x="47.5673%" y="863.50"></text></g><g><title>psi_group_change (2 samples, 0.05%)</title><rect x="47.3443%" y="837" width="0.0539%" height="15" fill="rgb(252,104,46)" fg:x="1756" fg:w="2"/><text x="47.5943%" y="847.50"></text></g><g><title>process_echoes (1 samples, 0.03%)</title><rect x="47.3982%" y="901" width="0.0270%" height="15" fill="rgb(237,152,48)" fg:x="1758" fg:w="1"/><text x="47.6482%" y="911.50"></text></g><g><title>__tty_insert_flip_string_flags (1 samples, 0.03%)</title><rect x="47.4521%" y="869" width="0.0270%" height="15" fill="rgb(221,59,37)" fg:x="1760" fg:w="1"/><text x="47.7021%" y="879.50"></text></g><g><title>memcpy_orig (1 samples, 0.03%)</title><rect x="47.4521%" y="853" width="0.0270%" height="15" fill="rgb(209,202,51)" fg:x="1760" fg:w="1"/><text x="47.7021%" y="863.50"></text></g><g><title>__queue_work (1 samples, 0.03%)</title><rect x="47.5061%" y="853" width="0.0270%" height="15" fill="rgb(228,81,30)" fg:x="1762" fg:w="1"/><text x="47.7561%" y="863.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="47.5330%" y="837" width="0.0270%" height="15" fill="rgb(227,42,39)" fg:x="1763" fg:w="1"/><text x="47.7830%" y="847.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="47.6948%" y="805" width="0.0270%" height="15" fill="rgb(221,26,2)" fg:x="1769" fg:w="1"/><text x="47.9448%" y="815.50"></text></g><g><title>kthread_is_per_cpu (1 samples, 0.03%)</title><rect x="47.7218%" y="805" width="0.0270%" height="15" fill="rgb(254,61,31)" fg:x="1770" fg:w="1"/><text x="47.9718%" y="815.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="47.8835%" y="789" width="0.0270%" height="15" fill="rgb(222,173,38)" fg:x="1776" fg:w="1"/><text x="48.1335%" y="799.50"></text></g><g><title>select_task_rq_fair (7 samples, 0.19%)</title><rect x="47.7487%" y="805" width="0.1887%" height="15" fill="rgb(218,50,12)" fg:x="1771" fg:w="7"/><text x="47.9987%" y="815.50"></text></g><g><title>task_h_load (1 samples, 0.03%)</title><rect x="47.9105%" y="789" width="0.0270%" height="15" fill="rgb(223,88,40)" fg:x="1777" fg:w="1"/><text x="48.1605%" y="799.50"></text></g><g><title>check_preempt_wakeup (2 samples, 0.05%)</title><rect x="47.9374%" y="773" width="0.0539%" height="15" fill="rgb(237,54,19)" fg:x="1778" fg:w="2"/><text x="48.1874%" y="783.50"></text></g><g><title>check_preempt_curr (3 samples, 0.08%)</title><rect x="47.9374%" y="789" width="0.0809%" height="15" fill="rgb(251,129,25)" fg:x="1778" fg:w="3"/><text x="48.1874%" y="799.50"></text></g><g><title>resched_curr (1 samples, 0.03%)</title><rect x="47.9914%" y="773" width="0.0270%" height="15" fill="rgb(238,97,19)" fg:x="1780" fg:w="1"/><text x="48.2414%" y="783.50"></text></g><g><title>__enqueue_entity (1 samples, 0.03%)</title><rect x="48.1262%" y="741" width="0.0270%" height="15" fill="rgb(240,169,18)" fg:x="1785" fg:w="1"/><text x="48.3762%" y="751.50"></text></g><g><title>update_cfs_group (1 samples, 0.03%)</title><rect x="48.1531%" y="741" width="0.0270%" height="15" fill="rgb(230,187,49)" fg:x="1786" fg:w="1"/><text x="48.4031%" y="751.50"></text></g><g><title>update_curr (2 samples, 0.05%)</title><rect x="48.1801%" y="741" width="0.0539%" height="15" fill="rgb(209,44,26)" fg:x="1787" fg:w="2"/><text x="48.4301%" y="751.50"></text></g><g><title>enqueue_task_fair (9 samples, 0.24%)</title><rect x="48.0183%" y="773" width="0.2427%" height="15" fill="rgb(244,0,6)" fg:x="1781" fg:w="9"/><text x="48.2683%" y="783.50"></text></g><g><title>enqueue_entity (7 samples, 0.19%)</title><rect x="48.0723%" y="757" width="0.1887%" height="15" fill="rgb(248,18,21)" fg:x="1783" fg:w="7"/><text x="48.3223%" y="767.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="48.2340%" y="741" width="0.0270%" height="15" fill="rgb(245,180,19)" fg:x="1789" fg:w="1"/><text x="48.4840%" y="751.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="48.2340%" y="725" width="0.0270%" height="15" fill="rgb(252,118,36)" fg:x="1789" fg:w="1"/><text x="48.4840%" y="735.50"></text></g><g><title>ttwu_do_activate (17 samples, 0.46%)</title><rect x="47.9374%" y="805" width="0.4583%" height="15" fill="rgb(210,224,19)" fg:x="1778" fg:w="17"/><text x="48.1874%" y="815.50"></text></g><g><title>enqueue_task (14 samples, 0.38%)</title><rect x="48.0183%" y="789" width="0.3775%" height="15" fill="rgb(218,30,24)" fg:x="1781" fg:w="14"/><text x="48.2683%" y="799.50"></text></g><g><title>psi_task_change (5 samples, 0.13%)</title><rect x="48.2610%" y="773" width="0.1348%" height="15" fill="rgb(219,75,50)" fg:x="1790" fg:w="5"/><text x="48.5110%" y="783.50"></text></g><g><title>pty_write (37 samples, 1.00%)</title><rect x="47.4252%" y="901" width="0.9976%" height="15" fill="rgb(234,72,50)" fg:x="1759" fg:w="37"/><text x="47.6752%" y="911.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (37 samples, 1.00%)</title><rect x="47.4252%" y="885" width="0.9976%" height="15" fill="rgb(219,100,48)" fg:x="1759" fg:w="37"/><text x="47.6752%" y="895.50"></text></g><g><title>queue_work_on (35 samples, 0.94%)</title><rect x="47.4791%" y="869" width="0.9437%" height="15" fill="rgb(253,5,41)" fg:x="1761" fg:w="35"/><text x="47.7291%" y="879.50"></text></g><g><title>__queue_work.part.0 (33 samples, 0.89%)</title><rect x="47.5330%" y="853" width="0.8897%" height="15" fill="rgb(247,181,11)" fg:x="1763" fg:w="33"/><text x="47.7830%" y="863.50"></text></g><g><title>kick_pool (32 samples, 0.86%)</title><rect x="47.5600%" y="837" width="0.8628%" height="15" fill="rgb(222,223,25)" fg:x="1764" fg:w="32"/><text x="47.8100%" y="847.50"></text></g><g><title>try_to_wake_up (28 samples, 0.75%)</title><rect x="47.6678%" y="821" width="0.7549%" height="15" fill="rgb(214,198,28)" fg:x="1768" fg:w="28"/><text x="47.9178%" y="831.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="48.3958%" y="805" width="0.0270%" height="15" fill="rgb(230,46,43)" fg:x="1795" fg:w="1"/><text x="48.6458%" y="815.50"></text></g><g><title>pty_write_room (2 samples, 0.05%)</title><rect x="48.4228%" y="901" width="0.0539%" height="15" fill="rgb(233,65,53)" fg:x="1796" fg:w="2"/><text x="48.6728%" y="911.50"></text></g><g><title>tty_buffer_space_avail (2 samples, 0.05%)</title><rect x="48.4767%" y="901" width="0.0539%" height="15" fill="rgb(221,121,27)" fg:x="1798" fg:w="2"/><text x="48.7267%" y="911.50"></text></g><g><title>n_tty_write (96 samples, 2.59%)</title><rect x="45.9693%" y="917" width="2.5883%" height="15" fill="rgb(247,70,47)" fg:x="1705" fg:w="96"/><text x="46.2193%" y="927.50">n_..</text></g><g><title>up_read (1 samples, 0.03%)</title><rect x="48.5306%" y="901" width="0.0270%" height="15" fill="rgb(228,85,35)" fg:x="1800" fg:w="1"/><text x="48.7806%" y="911.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="48.6115%" y="901" width="0.0270%" height="15" fill="rgb(209,50,18)" fg:x="1803" fg:w="1"/><text x="48.8615%" y="911.50"></text></g><g><title>file_tty_write.isra.0 (119 samples, 3.21%)</title><rect x="45.4570%" y="933" width="3.2084%" height="15" fill="rgb(250,19,35)" fg:x="1686" fg:w="119"/><text x="45.7070%" y="943.50">fil..</text></g><g><title>tty_update_time (4 samples, 0.11%)</title><rect x="48.5576%" y="917" width="0.1078%" height="15" fill="rgb(253,107,29)" fg:x="1801" fg:w="4"/><text x="48.8076%" y="927.50"></text></g><g><title>ktime_get_real_seconds (1 samples, 0.03%)</title><rect x="48.6384%" y="901" width="0.0270%" height="15" fill="rgb(252,179,29)" fg:x="1804" fg:w="1"/><text x="48.8884%" y="911.50"></text></g><g><title>ksys_write (135 samples, 3.64%)</title><rect x="45.2143%" y="965" width="3.6398%" height="15" fill="rgb(238,194,6)" fg:x="1677" fg:w="135"/><text x="45.4643%" y="975.50">ksys..</text></g><g><title>vfs_write (128 samples, 3.45%)</title><rect x="45.4031%" y="949" width="3.4511%" height="15" fill="rgb(238,164,29)" fg:x="1684" fg:w="128"/><text x="45.6531%" y="959.50">vfs..</text></g><g><title>security_file_permission (7 samples, 0.19%)</title><rect x="48.6654%" y="933" width="0.1887%" height="15" fill="rgb(224,25,9)" fg:x="1805" fg:w="7"/><text x="48.9154%" y="943.50"></text></g><g><title>apparmor_file_permission (6 samples, 0.16%)</title><rect x="48.6924%" y="917" width="0.1618%" height="15" fill="rgb(244,153,23)" fg:x="1806" fg:w="6"/><text x="48.9424%" y="927.50"></text></g><g><title>aa_file_perm (3 samples, 0.08%)</title><rect x="48.7733%" y="901" width="0.0809%" height="15" fill="rgb(212,203,14)" fg:x="1809" fg:w="3"/><text x="49.0233%" y="911.50"></text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.03%)</title><rect x="48.8541%" y="965" width="0.0270%" height="15" fill="rgb(220,164,20)" fg:x="1812" fg:w="1"/><text x="49.1041%" y="975.50"></text></g><g><title>__rseq_handle_notify_resume (2 samples, 0.05%)</title><rect x="48.9350%" y="933" width="0.0539%" height="15" fill="rgb(222,203,48)" fg:x="1815" fg:w="2"/><text x="49.1850%" y="943.50"></text></g><g><title>__get_user_8 (1 samples, 0.03%)</title><rect x="48.9620%" y="917" width="0.0270%" height="15" fill="rgb(215,159,22)" fg:x="1816" fg:w="1"/><text x="49.2120%" y="927.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="49.0698%" y="869" width="0.0270%" height="15" fill="rgb(216,183,47)" fg:x="1820" fg:w="1"/><text x="49.3198%" y="879.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.05%)</title><rect x="49.0698%" y="901" width="0.0539%" height="15" fill="rgb(229,195,25)" fg:x="1820" fg:w="2"/><text x="49.3198%" y="911.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.05%)</title><rect x="49.0698%" y="885" width="0.0539%" height="15" fill="rgb(224,132,51)" fg:x="1820" fg:w="2"/><text x="49.3198%" y="895.50"></text></g><g><title>perf_ctx_enable (1 samples, 0.03%)</title><rect x="49.0968%" y="869" width="0.0270%" height="15" fill="rgb(240,63,7)" fg:x="1821" fg:w="1"/><text x="49.3468%" y="879.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (1 samples, 0.03%)</title><rect x="49.0968%" y="853" width="0.0270%" height="15" fill="rgb(249,182,41)" fg:x="1821" fg:w="1"/><text x="49.3468%" y="863.50"></text></g><g><title>native_write_msr (1 samples, 0.03%)</title><rect x="49.0968%" y="837" width="0.0270%" height="15" fill="rgb(243,47,26)" fg:x="1821" fg:w="1"/><text x="49.3468%" y="847.50"></text></g><g><title>__rb_insert_augmented (2 samples, 0.05%)</title><rect x="49.1238%" y="869" width="0.0539%" height="15" fill="rgb(233,48,2)" fg:x="1822" fg:w="2"/><text x="49.3738%" y="879.50"></text></g><g><title>update_curr (2 samples, 0.05%)</title><rect x="49.1777%" y="869" width="0.0539%" height="15" fill="rgb(244,165,34)" fg:x="1824" fg:w="2"/><text x="49.4277%" y="879.50"></text></g><g><title>__calc_delta.constprop.0 (2 samples, 0.05%)</title><rect x="49.1777%" y="853" width="0.0539%" height="15" fill="rgb(207,89,7)" fg:x="1824" fg:w="2"/><text x="49.4277%" y="863.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.13%)</title><rect x="49.1238%" y="901" width="0.1348%" height="15" fill="rgb(244,117,36)" fg:x="1822" fg:w="5"/><text x="49.3738%" y="911.50"></text></g><g><title>put_prev_entity (5 samples, 0.13%)</title><rect x="49.1238%" y="885" width="0.1348%" height="15" fill="rgb(226,144,34)" fg:x="1822" fg:w="5"/><text x="49.3738%" y="895.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="49.2316%" y="869" width="0.0270%" height="15" fill="rgb(213,23,19)" fg:x="1826" fg:w="1"/><text x="49.4816%" y="879.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="49.2316%" y="853" width="0.0270%" height="15" fill="rgb(217,75,12)" fg:x="1826" fg:w="1"/><text x="49.4816%" y="863.50"></text></g><g><title>psi_account_irqtime (2 samples, 0.05%)</title><rect x="49.2586%" y="901" width="0.0539%" height="15" fill="rgb(224,159,17)" fg:x="1827" fg:w="2"/><text x="49.5086%" y="911.50"></text></g><g><title>exit_to_user_mode_prepare (19 samples, 0.51%)</title><rect x="48.8811%" y="949" width="0.5123%" height="15" fill="rgb(217,118,1)" fg:x="1813" fg:w="19"/><text x="49.1311%" y="959.50"></text></g><g><title>schedule (15 samples, 0.40%)</title><rect x="48.9889%" y="933" width="0.4044%" height="15" fill="rgb(232,180,48)" fg:x="1817" fg:w="15"/><text x="49.2389%" y="943.50"></text></g><g><title>__schedule (12 samples, 0.32%)</title><rect x="49.0698%" y="917" width="0.3235%" height="15" fill="rgb(230,27,33)" fg:x="1820" fg:w="12"/><text x="49.3198%" y="927.50"></text></g><g><title>psi_task_switch (3 samples, 0.08%)</title><rect x="49.3125%" y="901" width="0.0809%" height="15" fill="rgb(205,31,21)" fg:x="1829" fg:w="3"/><text x="49.5625%" y="911.50"></text></g><g><title>psi_group_change (2 samples, 0.05%)</title><rect x="49.3394%" y="885" width="0.0539%" height="15" fill="rgb(253,59,4)" fg:x="1830" fg:w="2"/><text x="49.5894%" y="895.50"></text></g><g><title>syscall_exit_to_user_mode (20 samples, 0.54%)</title><rect x="48.8811%" y="965" width="0.5392%" height="15" fill="rgb(224,201,9)" fg:x="1813" fg:w="20"/><text x="49.1311%" y="975.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="49.3934%" y="949" width="0.0270%" height="15" fill="rgb(229,206,30)" fg:x="1832" fg:w="1"/><text x="49.6434%" y="959.50"></text></g><g><title>entry_SYSCALL_64 (162 samples, 4.37%)</title><rect x="45.1335%" y="997" width="4.3678%" height="15" fill="rgb(212,67,47)" fg:x="1674" fg:w="162"/><text x="45.3835%" y="1007.50">entry..</text></g><g><title>do_syscall_64 (160 samples, 4.31%)</title><rect x="45.1874%" y="981" width="4.3138%" height="15" fill="rgb(211,96,50)" fg:x="1676" fg:w="160"/><text x="45.4374%" y="991.50">do_sy..</text></g><g><title>x64_sys_call (3 samples, 0.08%)</title><rect x="49.4203%" y="965" width="0.0809%" height="15" fill="rgb(252,114,18)" fg:x="1833" fg:w="3"/><text x="49.6703%" y="975.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (9 samples, 0.24%)</title><rect x="49.5012%" y="997" width="0.2427%" height="15" fill="rgb(223,58,37)" fg:x="1836" fg:w="9"/><text x="49.7512%" y="1007.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (179 samples, 4.83%)</title><rect x="44.9987%" y="1077" width="4.8261%" height="15" fill="rgb(237,70,4)" fg:x="1669" fg:w="179"/><text x="45.2487%" y="1087.50">&lt;std::..</text></g><g><title>std::io::Write::write_all (179 samples, 4.83%)</title><rect x="44.9987%" y="1061" width="4.8261%" height="15" fill="rgb(244,85,46)" fg:x="1669" fg:w="179"/><text x="45.2487%" y="1071.50">std::i..</text></g><g><title>&lt;std::sys::pal::unix::stdio::Stdout as std::io::Write&gt;::write (179 samples, 4.83%)</title><rect x="44.9987%" y="1045" width="4.8261%" height="15" fill="rgb(223,39,52)" fg:x="1669" fg:w="179"/><text x="45.2487%" y="1055.50">&lt;std::..</text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (179 samples, 4.83%)</title><rect x="44.9987%" y="1029" width="4.8261%" height="15" fill="rgb(218,200,14)" fg:x="1669" fg:w="179"/><text x="45.2487%" y="1039.50">std::s..</text></g><g><title>write (179 samples, 4.83%)</title><rect x="44.9987%" y="1013" width="4.8261%" height="15" fill="rgb(208,171,16)" fg:x="1669" fg:w="179"/><text x="45.2487%" y="1023.50">write</text></g><g><title>syscall_return_via_sysret (3 samples, 0.08%)</title><rect x="49.7439%" y="997" width="0.0809%" height="15" fill="rgb(234,200,18)" fg:x="1845" fg:w="3"/><text x="49.9939%" y="1007.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (183 samples, 4.93%)</title><rect x="44.9178%" y="1157" width="4.9339%" height="15" fill="rgb(228,45,11)" fg:x="1666" fg:w="183"/><text x="45.1678%" y="1167.50">&lt;std::..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (183 samples, 4.93%)</title><rect x="44.9178%" y="1141" width="4.9339%" height="15" fill="rgb(237,182,11)" fg:x="1666" fg:w="183"/><text x="45.1678%" y="1151.50">&lt;&amp;std:..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (183 samples, 4.93%)</title><rect x="44.9178%" y="1125" width="4.9339%" height="15" fill="rgb(241,175,49)" fg:x="1666" fg:w="183"/><text x="45.1678%" y="1135.50">&lt;std::..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (182 samples, 4.91%)</title><rect x="44.9447%" y="1109" width="4.9070%" height="15" fill="rgb(247,38,35)" fg:x="1667" fg:w="182"/><text x="45.1947%" y="1119.50">&lt;std::..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (182 samples, 4.91%)</title><rect x="44.9447%" y="1093" width="4.9070%" height="15" fill="rgb(228,39,49)" fg:x="1667" fg:w="182"/><text x="45.1947%" y="1103.50">&lt;std::..</text></g><g><title>core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="49.8248%" y="1077" width="0.0270%" height="15" fill="rgb(226,101,26)" fg:x="1848" fg:w="1"/><text x="50.0748%" y="1087.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (1 samples, 0.03%)</title><rect x="49.8248%" y="1061" width="0.0270%" height="15" fill="rgb(206,141,19)" fg:x="1848" fg:w="1"/><text x="50.0748%" y="1071.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (4 samples, 0.11%)</title><rect x="49.9056%" y="1141" width="0.1078%" height="15" fill="rgb(211,200,13)" fg:x="1851" fg:w="4"/><text x="50.1556%" y="1151.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::is_log (4 samples, 0.11%)</title><rect x="49.9056%" y="1125" width="0.1078%" height="15" fill="rgb(241,121,6)" fg:x="1851" fg:w="4"/><text x="50.1556%" y="1135.50"></text></g><g><title>tracing_log::level_to_cs (3 samples, 0.08%)</title><rect x="49.9326%" y="1109" width="0.0809%" height="15" fill="rgb(234,221,29)" fg:x="1852" fg:w="3"/><text x="50.1826%" y="1119.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.05%)</title><rect x="49.9596%" y="1093" width="0.0539%" height="15" fill="rgb(229,136,5)" fg:x="1853" fg:w="2"/><text x="50.2096%" y="1103.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (2 samples, 0.05%)</title><rect x="49.9596%" y="1077" width="0.0539%" height="15" fill="rgb(238,36,11)" fg:x="1853" fg:w="2"/><text x="50.2096%" y="1087.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (2 samples, 0.05%)</title><rect x="49.9596%" y="1061" width="0.0539%" height="15" fill="rgb(251,55,41)" fg:x="1853" fg:w="2"/><text x="50.2096%" y="1071.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (2 samples, 0.05%)</title><rect x="49.9596%" y="1045" width="0.0539%" height="15" fill="rgb(242,34,40)" fg:x="1853" fg:w="2"/><text x="50.2096%" y="1055.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (2 samples, 0.05%)</title><rect x="49.9596%" y="1029" width="0.0539%" height="15" fill="rgb(215,42,17)" fg:x="1853" fg:w="2"/><text x="50.2096%" y="1039.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (2 samples, 0.05%)</title><rect x="49.9596%" y="1013" width="0.0539%" height="15" fill="rgb(207,44,46)" fg:x="1853" fg:w="2"/><text x="50.2096%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.05%)</title><rect x="49.9596%" y="997" width="0.0539%" height="15" fill="rgb(211,206,28)" fg:x="1853" fg:w="2"/><text x="50.2096%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.05%)</title><rect x="49.9596%" y="981" width="0.0539%" height="15" fill="rgb(237,167,16)" fg:x="1853" fg:w="2"/><text x="50.2096%" y="991.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.03%)</title><rect x="50.0135%" y="1093" width="0.0270%" height="15" fill="rgb(233,66,6)" fg:x="1855" fg:w="1"/><text x="50.2635%" y="1103.50"></text></g><g><title>tracing_core::event::Event::record (1 samples, 0.03%)</title><rect x="50.0135%" y="1077" width="0.0270%" height="15" fill="rgb(246,123,29)" fg:x="1855" fg:w="1"/><text x="50.2635%" y="1087.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (1 samples, 0.03%)</title><rect x="50.0674%" y="1061" width="0.0270%" height="15" fill="rgb(209,62,40)" fg:x="1857" fg:w="1"/><text x="50.3174%" y="1071.50"></text></g><g><title>&lt;tracing_core::field::DisplayValue&lt;T&gt; as tracing_core::field::Value&gt;::record (1 samples, 0.03%)</title><rect x="50.0944%" y="1061" width="0.0270%" height="15" fill="rgb(218,4,25)" fg:x="1858" fg:w="1"/><text x="50.3444%" y="1071.50"></text></g><g><title>tracing_core::field::Field::name (2 samples, 0.05%)</title><rect x="50.1213%" y="1045" width="0.0539%" height="15" fill="rgb(253,91,49)" fg:x="1859" fg:w="2"/><text x="50.3713%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (1 samples, 0.03%)</title><rect x="50.1752%" y="1029" width="0.0270%" height="15" fill="rgb(228,155,29)" fg:x="1861" fg:w="1"/><text x="50.4252%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="50.2022%" y="1013" width="0.0539%" height="15" fill="rgb(243,57,37)" fg:x="1862" fg:w="2"/><text x="50.4522%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="50.2022%" y="997" width="0.0539%" height="15" fill="rgb(244,167,17)" fg:x="1862" fg:w="2"/><text x="50.4522%" y="1007.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="50.2022%" y="981" width="0.0539%" height="15" fill="rgb(207,181,38)" fg:x="1862" fg:w="2"/><text x="50.4522%" y="991.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="50.3640%" y="901" width="0.0270%" height="15" fill="rgb(211,8,23)" fg:x="1868" fg:w="1"/><text x="50.6140%" y="911.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_suffix (1 samples, 0.03%)</title><rect x="50.3640%" y="885" width="0.0270%" height="15" fill="rgb(235,11,44)" fg:x="1868" fg:w="1"/><text x="50.6140%" y="895.50"></text></g><g><title>nu_ansi_term::style::Style::is_plain (1 samples, 0.03%)</title><rect x="50.3640%" y="869" width="0.0270%" height="15" fill="rgb(248,18,52)" fg:x="1868" fg:w="1"/><text x="50.6140%" y="879.50"></text></g><g><title>&lt;nu_ansi_term::style::Style as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="50.3640%" y="853" width="0.0270%" height="15" fill="rgb(208,4,7)" fg:x="1868" fg:w="1"/><text x="50.6140%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="50.3640%" y="837" width="0.0270%" height="15" fill="rgb(240,17,39)" fg:x="1868" fg:w="1"/><text x="50.6140%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="50.3909%" y="853" width="0.0270%" height="15" fill="rgb(207,170,3)" fg:x="1869" fg:w="1"/><text x="50.6409%" y="863.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.03%)</title><rect x="50.3909%" y="837" width="0.0270%" height="15" fill="rgb(236,100,52)" fg:x="1869" fg:w="1"/><text x="50.6409%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="50.3909%" y="821" width="0.0270%" height="15" fill="rgb(246,78,51)" fg:x="1869" fg:w="1"/><text x="50.6409%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="50.3909%" y="805" width="0.0270%" height="15" fill="rgb(211,17,15)" fg:x="1869" fg:w="1"/><text x="50.6409%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="50.3909%" y="789" width="0.0270%" height="15" fill="rgb(209,59,46)" fg:x="1869" fg:w="1"/><text x="50.6409%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="50.3909%" y="773" width="0.0270%" height="15" fill="rgb(210,92,25)" fg:x="1869" fg:w="1"/><text x="50.6409%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="50.3909%" y="757" width="0.0270%" height="15" fill="rgb(238,174,52)" fg:x="1869" fg:w="1"/><text x="50.6409%" y="767.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (3 samples, 0.08%)</title><rect x="50.3909%" y="885" width="0.0809%" height="15" fill="rgb(230,73,7)" fg:x="1869" fg:w="3"/><text x="50.6409%" y="895.50"></text></g><g><title>core::fmt::write (3 samples, 0.08%)</title><rect x="50.3909%" y="869" width="0.0809%" height="15" fill="rgb(243,124,40)" fg:x="1869" fg:w="3"/><text x="50.6409%" y="879.50"></text></g><g><title>core::fmt::Formatter::new (2 samples, 0.05%)</title><rect x="50.4179%" y="853" width="0.0539%" height="15" fill="rgb(244,170,11)" fg:x="1870" fg:w="2"/><text x="50.6679%" y="863.50"></text></g><g><title>core::fmt::Arguments::new_const (1 samples, 0.03%)</title><rect x="50.4718%" y="885" width="0.0270%" height="15" fill="rgb(207,114,54)" fg:x="1872" fg:w="1"/><text x="50.7218%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="50.4988%" y="869" width="0.0270%" height="15" fill="rgb(205,42,20)" fg:x="1873" fg:w="1"/><text x="50.7488%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="50.5257%" y="837" width="0.0270%" height="15" fill="rgb(230,30,28)" fg:x="1874" fg:w="1"/><text x="50.7757%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="50.5257%" y="821" width="0.0270%" height="15" fill="rgb(205,73,54)" fg:x="1874" fg:w="1"/><text x="50.7757%" y="831.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (3 samples, 0.08%)</title><rect x="50.5257%" y="869" width="0.0809%" height="15" fill="rgb(254,227,23)" fg:x="1874" fg:w="3"/><text x="50.7757%" y="879.50"></text></g><g><title>core::fmt::write (3 samples, 0.08%)</title><rect x="50.5257%" y="853" width="0.0809%" height="15" fill="rgb(228,202,34)" fg:x="1874" fg:w="3"/><text x="50.7757%" y="863.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.05%)</title><rect x="50.5527%" y="837" width="0.0539%" height="15" fill="rgb(222,225,37)" fg:x="1875" fg:w="2"/><text x="50.8027%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2 samples, 0.05%)</title><rect x="50.5527%" y="821" width="0.0539%" height="15" fill="rgb(221,14,54)" fg:x="1875" fg:w="2"/><text x="50.8027%" y="831.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.03%)</title><rect x="50.5797%" y="805" width="0.0270%" height="15" fill="rgb(254,102,2)" fg:x="1876" fg:w="1"/><text x="50.8297%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="50.5797%" y="789" width="0.0270%" height="15" fill="rgb(232,104,17)" fg:x="1876" fg:w="1"/><text x="50.8297%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="50.5797%" y="773" width="0.0270%" height="15" fill="rgb(250,220,14)" fg:x="1876" fg:w="1"/><text x="50.8297%" y="783.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (10 samples, 0.27%)</title><rect x="50.3640%" y="965" width="0.2696%" height="15" fill="rgb(241,158,9)" fg:x="1868" fg:w="10"/><text x="50.6140%" y="975.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (10 samples, 0.27%)</title><rect x="50.3640%" y="949" width="0.2696%" height="15" fill="rgb(246,9,43)" fg:x="1868" fg:w="10"/><text x="50.6140%" y="959.50"></text></g><g><title>core::fmt::write (10 samples, 0.27%)</title><rect x="50.3640%" y="933" width="0.2696%" height="15" fill="rgb(206,73,33)" fg:x="1868" fg:w="10"/><text x="50.6140%" y="943.50"></text></g><g><title>core::fmt::rt::Argument::fmt (10 samples, 0.27%)</title><rect x="50.3640%" y="917" width="0.2696%" height="15" fill="rgb(222,79,8)" fg:x="1868" fg:w="10"/><text x="50.6140%" y="927.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (9 samples, 0.24%)</title><rect x="50.3909%" y="901" width="0.2427%" height="15" fill="rgb(234,8,54)" fg:x="1869" fg:w="9"/><text x="50.6409%" y="911.50"></text></g><g><title>nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix::_{{closure}} (5 samples, 0.13%)</title><rect x="50.4988%" y="885" width="0.1348%" height="15" fill="rgb(209,134,38)" fg:x="1873" fg:w="5"/><text x="50.7488%" y="895.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.03%)</title><rect x="50.6066%" y="869" width="0.0270%" height="15" fill="rgb(230,127,29)" fg:x="1877" fg:w="1"/><text x="50.8566%" y="879.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (15 samples, 0.40%)</title><rect x="50.2561%" y="997" width="0.4044%" height="15" fill="rgb(242,44,41)" fg:x="1864" fg:w="15"/><text x="50.5061%" y="1007.50"></text></g><g><title>nu_ansi_term::display::AnsiGenericString&lt;S&gt;::write_to_any (14 samples, 0.38%)</title><rect x="50.2831%" y="981" width="0.3775%" height="15" fill="rgb(222,56,43)" fg:x="1865" fg:w="14"/><text x="50.5331%" y="991.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_str (1 samples, 0.03%)</title><rect x="50.6336%" y="965" width="0.0270%" height="15" fill="rgb(238,39,47)" fg:x="1878" fg:w="1"/><text x="50.8836%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="50.6336%" y="949" width="0.0270%" height="15" fill="rgb(226,79,43)" fg:x="1878" fg:w="1"/><text x="50.8836%" y="959.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.03%)</title><rect x="50.6336%" y="933" width="0.0270%" height="15" fill="rgb(242,105,53)" fg:x="1878" fg:w="1"/><text x="50.8836%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="50.6336%" y="917" width="0.0270%" height="15" fill="rgb(251,132,46)" fg:x="1878" fg:w="1"/><text x="50.8836%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="50.6336%" y="901" width="0.0270%" height="15" fill="rgb(231,77,14)" fg:x="1878" fg:w="1"/><text x="50.8836%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="50.6336%" y="885" width="0.0270%" height="15" fill="rgb(240,135,9)" fg:x="1878" fg:w="1"/><text x="50.8836%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="50.6336%" y="869" width="0.0270%" height="15" fill="rgb(248,109,14)" fg:x="1878" fg:w="1"/><text x="50.8836%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="50.6336%" y="853" width="0.0270%" height="15" fill="rgb(227,146,52)" fg:x="1878" fg:w="1"/><text x="50.8836%" y="863.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="50.7414%" y="933" width="0.0270%" height="15" fill="rgb(232,54,3)" fg:x="1882" fg:w="1"/><text x="50.9914%" y="943.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (27 samples, 0.73%)</title><rect x="50.0674%" y="1077" width="0.7280%" height="15" fill="rgb(229,201,43)" fg:x="1857" fg:w="27"/><text x="50.3174%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (25 samples, 0.67%)</title><rect x="50.1213%" y="1061" width="0.6740%" height="15" fill="rgb(252,161,33)" fg:x="1859" fg:w="25"/><text x="50.3713%" y="1071.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (23 samples, 0.62%)</title><rect x="50.1752%" y="1045" width="0.6201%" height="15" fill="rgb(226,146,40)" fg:x="1861" fg:w="23"/><text x="50.4252%" y="1055.50"></text></g><g><title>core::fmt::write (22 samples, 0.59%)</title><rect x="50.2022%" y="1029" width="0.5932%" height="15" fill="rgb(219,47,25)" fg:x="1862" fg:w="22"/><text x="50.4522%" y="1039.50"></text></g><g><title>core::fmt::rt::Argument::fmt (20 samples, 0.54%)</title><rect x="50.2561%" y="1013" width="0.5392%" height="15" fill="rgb(250,135,13)" fg:x="1864" fg:w="20"/><text x="50.5061%" y="1023.50"></text></g><g><title>core::fmt::write (5 samples, 0.13%)</title><rect x="50.6606%" y="997" width="0.1348%" height="15" fill="rgb(219,229,18)" fg:x="1879" fg:w="5"/><text x="50.9106%" y="1007.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.05%)</title><rect x="50.7414%" y="981" width="0.0539%" height="15" fill="rgb(217,152,27)" fg:x="1882" fg:w="2"/><text x="50.9914%" y="991.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.05%)</title><rect x="50.7414%" y="965" width="0.0539%" height="15" fill="rgb(225,71,47)" fg:x="1882" fg:w="2"/><text x="50.9914%" y="975.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.05%)</title><rect x="50.7414%" y="949" width="0.0539%" height="15" fill="rgb(220,139,14)" fg:x="1882" fg:w="2"/><text x="50.9914%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="50.7684%" y="933" width="0.0270%" height="15" fill="rgb(247,54,32)" fg:x="1883" fg:w="1"/><text x="51.0184%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::FmtContext&lt;S,N&gt; as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (30 samples, 0.81%)</title><rect x="50.0135%" y="1141" width="0.8088%" height="15" fill="rgb(252,131,39)" fg:x="1855" fg:w="30"/><text x="50.2635%" y="1151.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (30 samples, 0.81%)</title><rect x="50.0135%" y="1125" width="0.8088%" height="15" fill="rgb(210,108,39)" fg:x="1855" fg:w="30"/><text x="50.2635%" y="1135.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (30 samples, 0.81%)</title><rect x="50.0135%" y="1109" width="0.8088%" height="15" fill="rgb(205,23,29)" fg:x="1855" fg:w="30"/><text x="50.2635%" y="1119.50"></text></g><g><title>tracing_core::field::ValueSet::record (29 samples, 0.78%)</title><rect x="50.0404%" y="1093" width="0.7819%" height="15" fill="rgb(246,139,46)" fg:x="1856" fg:w="29"/><text x="50.2904%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="50.7954%" y="1077" width="0.0270%" height="15" fill="rgb(250,81,26)" fg:x="1884" fg:w="1"/><text x="51.0454%" y="1087.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.03%)</title><rect x="50.8223%" y="1141" width="0.0270%" height="15" fill="rgb(214,104,7)" fg:x="1885" fg:w="1"/><text x="51.0723%" y="1151.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.03%)</title><rect x="50.8762%" y="1125" width="0.0270%" height="15" fill="rgb(233,189,8)" fg:x="1887" fg:w="1"/><text x="51.1262%" y="1135.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="50.9032%" y="1013" width="0.0270%" height="15" fill="rgb(228,141,17)" fg:x="1888" fg:w="1"/><text x="51.1532%" y="1023.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (2 samples, 0.05%)</title><rect x="50.9302%" y="981" width="0.0539%" height="15" fill="rgb(247,157,1)" fg:x="1889" fg:w="2"/><text x="51.1802%" y="991.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (2 samples, 0.05%)</title><rect x="50.9302%" y="965" width="0.0539%" height="15" fill="rgb(249,225,5)" fg:x="1889" fg:w="2"/><text x="51.1802%" y="975.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="50.9302%" y="949" width="0.0539%" height="15" fill="rgb(242,55,13)" fg:x="1889" fg:w="2"/><text x="51.1802%" y="959.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.03%)</title><rect x="50.9571%" y="933" width="0.0270%" height="15" fill="rgb(230,49,50)" fg:x="1890" fg:w="1"/><text x="51.2071%" y="943.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.03%)</title><rect x="50.9571%" y="917" width="0.0270%" height="15" fill="rgb(241,111,38)" fg:x="1890" fg:w="1"/><text x="51.2071%" y="927.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (3 samples, 0.08%)</title><rect x="50.9302%" y="1013" width="0.0809%" height="15" fill="rgb(252,155,4)" fg:x="1889" fg:w="3"/><text x="51.1802%" y="1023.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_suffix (3 samples, 0.08%)</title><rect x="50.9302%" y="997" width="0.0809%" height="15" fill="rgb(212,69,32)" fg:x="1889" fg:w="3"/><text x="51.1802%" y="1007.50"></text></g><g><title>nu_ansi_term::style::Style::is_plain (1 samples, 0.03%)</title><rect x="50.9841%" y="981" width="0.0270%" height="15" fill="rgb(243,107,47)" fg:x="1891" fg:w="1"/><text x="51.2341%" y="991.50"></text></g><g><title>&lt;nu_ansi_term::style::Style as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="50.9841%" y="965" width="0.0270%" height="15" fill="rgb(247,130,12)" fg:x="1891" fg:w="1"/><text x="51.2341%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="50.9841%" y="949" width="0.0270%" height="15" fill="rgb(233,74,16)" fg:x="1891" fg:w="1"/><text x="51.2341%" y="959.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (1 samples, 0.03%)</title><rect x="51.0111%" y="997" width="0.0270%" height="15" fill="rgb(208,58,18)" fg:x="1892" fg:w="1"/><text x="51.2611%" y="1007.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="51.0111%" y="981" width="0.0270%" height="15" fill="rgb(242,225,1)" fg:x="1892" fg:w="1"/><text x="51.2611%" y="991.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.03%)</title><rect x="51.0111%" y="965" width="0.0270%" height="15" fill="rgb(249,39,40)" fg:x="1892" fg:w="1"/><text x="51.2611%" y="975.50"></text></g><g><title>core::fmt::Arguments::new_const (1 samples, 0.03%)</title><rect x="51.0380%" y="997" width="0.0270%" height="15" fill="rgb(207,72,44)" fg:x="1893" fg:w="1"/><text x="51.2880%" y="1007.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (7 samples, 0.19%)</title><rect x="50.9032%" y="1077" width="0.1887%" height="15" fill="rgb(215,193,12)" fg:x="1888" fg:w="7"/><text x="51.1532%" y="1087.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (7 samples, 0.19%)</title><rect x="50.9032%" y="1061" width="0.1887%" height="15" fill="rgb(248,41,39)" fg:x="1888" fg:w="7"/><text x="51.1532%" y="1071.50"></text></g><g><title>core::fmt::write (7 samples, 0.19%)</title><rect x="50.9032%" y="1045" width="0.1887%" height="15" fill="rgb(253,85,4)" fg:x="1888" fg:w="7"/><text x="51.1532%" y="1055.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.19%)</title><rect x="50.9032%" y="1029" width="0.1887%" height="15" fill="rgb(243,70,31)" fg:x="1888" fg:w="7"/><text x="51.1532%" y="1039.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (3 samples, 0.08%)</title><rect x="51.0111%" y="1013" width="0.0809%" height="15" fill="rgb(253,195,26)" fg:x="1892" fg:w="3"/><text x="51.2611%" y="1023.50"></text></g><g><title>nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix::_{{closure}} (1 samples, 0.03%)</title><rect x="51.0650%" y="997" width="0.0270%" height="15" fill="rgb(243,42,11)" fg:x="1894" fg:w="1"/><text x="51.3150%" y="1007.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (1 samples, 0.03%)</title><rect x="51.0650%" y="981" width="0.0270%" height="15" fill="rgb(239,66,17)" fg:x="1894" fg:w="1"/><text x="51.3150%" y="991.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="51.0650%" y="965" width="0.0270%" height="15" fill="rgb(217,132,21)" fg:x="1894" fg:w="1"/><text x="51.3150%" y="975.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.03%)</title><rect x="51.0650%" y="949" width="0.0270%" height="15" fill="rgb(252,202,21)" fg:x="1894" fg:w="1"/><text x="51.3150%" y="959.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (9 samples, 0.24%)</title><rect x="50.9032%" y="1109" width="0.2427%" height="15" fill="rgb(233,98,36)" fg:x="1888" fg:w="9"/><text x="51.1532%" y="1119.50"></text></g><g><title>nu_ansi_term::display::AnsiGenericString&lt;S&gt;::write_to_any (9 samples, 0.24%)</title><rect x="50.9032%" y="1093" width="0.2427%" height="15" fill="rgb(216,153,54)" fg:x="1888" fg:w="9"/><text x="51.1532%" y="1103.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_str (2 samples, 0.05%)</title><rect x="51.0919%" y="1077" width="0.0539%" height="15" fill="rgb(250,99,7)" fg:x="1895" fg:w="2"/><text x="51.3419%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="51.0919%" y="1061" width="0.0539%" height="15" fill="rgb(207,56,50)" fg:x="1895" fg:w="2"/><text x="51.3419%" y="1071.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="51.0919%" y="1045" width="0.0539%" height="15" fill="rgb(244,61,34)" fg:x="1895" fg:w="2"/><text x="51.3419%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="51.0919%" y="1029" width="0.0539%" height="15" fill="rgb(241,50,38)" fg:x="1895" fg:w="2"/><text x="51.3419%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="51.0919%" y="1013" width="0.0539%" height="15" fill="rgb(212,166,30)" fg:x="1895" fg:w="2"/><text x="51.3419%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="51.0919%" y="997" width="0.0539%" height="15" fill="rgb(249,127,32)" fg:x="1895" fg:w="2"/><text x="51.3419%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="51.0919%" y="981" width="0.0539%" height="15" fill="rgb(209,103,0)" fg:x="1895" fg:w="2"/><text x="51.3419%" y="991.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="51.0919%" y="965" width="0.0539%" height="15" fill="rgb(238,209,51)" fg:x="1895" fg:w="2"/><text x="51.3419%" y="975.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (2 samples, 0.05%)</title><rect x="51.1459%" y="949" width="0.0539%" height="15" fill="rgb(237,56,23)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="959.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_suffix (2 samples, 0.05%)</title><rect x="51.1459%" y="933" width="0.0539%" height="15" fill="rgb(215,153,46)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="943.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (2 samples, 0.05%)</title><rect x="51.1459%" y="917" width="0.0539%" height="15" fill="rgb(224,49,31)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="927.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (2 samples, 0.05%)</title><rect x="51.1459%" y="901" width="0.0539%" height="15" fill="rgb(250,18,42)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="911.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="51.1459%" y="885" width="0.0539%" height="15" fill="rgb(215,176,39)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="895.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.05%)</title><rect x="51.1459%" y="869" width="0.0539%" height="15" fill="rgb(223,77,29)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="51.1459%" y="853" width="0.0539%" height="15" fill="rgb(234,94,52)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="863.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="51.1459%" y="837" width="0.0539%" height="15" fill="rgb(220,154,50)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="51.1459%" y="821" width="0.0539%" height="15" fill="rgb(212,11,10)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="51.1459%" y="805" width="0.0539%" height="15" fill="rgb(205,166,19)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="51.1459%" y="789" width="0.0539%" height="15" fill="rgb(244,198,16)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="51.1459%" y="773" width="0.0539%" height="15" fill="rgb(219,69,12)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="783.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="51.1459%" y="757" width="0.0539%" height="15" fill="rgb(245,30,7)" fg:x="1897" fg:w="2"/><text x="51.3959%" y="767.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (4 samples, 0.11%)</title><rect x="51.1459%" y="1013" width="0.1078%" height="15" fill="rgb(218,221,48)" fg:x="1897" fg:w="4"/><text x="51.3959%" y="1023.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (4 samples, 0.11%)</title><rect x="51.1459%" y="997" width="0.1078%" height="15" fill="rgb(216,66,15)" fg:x="1897" fg:w="4"/><text x="51.3959%" y="1007.50"></text></g><g><title>core::fmt::write (4 samples, 0.11%)</title><rect x="51.1459%" y="981" width="0.1078%" height="15" fill="rgb(226,122,50)" fg:x="1897" fg:w="4"/><text x="51.3959%" y="991.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.11%)</title><rect x="51.1459%" y="965" width="0.1078%" height="15" fill="rgb(239,156,16)" fg:x="1897" fg:w="4"/><text x="51.3959%" y="975.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (2 samples, 0.05%)</title><rect x="51.1998%" y="949" width="0.0539%" height="15" fill="rgb(224,27,38)" fg:x="1899" fg:w="2"/><text x="51.4498%" y="959.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (2 samples, 0.05%)</title><rect x="51.1998%" y="933" width="0.0539%" height="15" fill="rgb(224,39,27)" fg:x="1899" fg:w="2"/><text x="51.4498%" y="943.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="51.1998%" y="917" width="0.0539%" height="15" fill="rgb(215,92,29)" fg:x="1899" fg:w="2"/><text x="51.4498%" y="927.50"></text></g><g><title>core::fmt::rt::Argument::fmt (15 samples, 0.40%)</title><rect x="50.9032%" y="1125" width="0.4044%" height="15" fill="rgb(207,159,16)" fg:x="1888" fg:w="15"/><text x="51.1532%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (6 samples, 0.16%)</title><rect x="51.1459%" y="1109" width="0.1618%" height="15" fill="rgb(238,163,47)" fg:x="1897" fg:w="6"/><text x="51.3959%" y="1119.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.16%)</title><rect x="51.1459%" y="1093" width="0.1618%" height="15" fill="rgb(219,91,49)" fg:x="1897" fg:w="6"/><text x="51.3959%" y="1103.50"></text></g><g><title>core::fmt::write (6 samples, 0.16%)</title><rect x="51.1459%" y="1077" width="0.1618%" height="15" fill="rgb(227,167,31)" fg:x="1897" fg:w="6"/><text x="51.3959%" y="1087.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.16%)</title><rect x="51.1459%" y="1061" width="0.1618%" height="15" fill="rgb(234,80,54)" fg:x="1897" fg:w="6"/><text x="51.3959%" y="1071.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (6 samples, 0.16%)</title><rect x="51.1459%" y="1045" width="0.1618%" height="15" fill="rgb(212,114,2)" fg:x="1897" fg:w="6"/><text x="51.3959%" y="1055.50"></text></g><g><title>nu_ansi_term::display::AnsiGenericString&lt;S&gt;::write_to_any (6 samples, 0.16%)</title><rect x="51.1459%" y="1029" width="0.1618%" height="15" fill="rgb(234,50,24)" fg:x="1897" fg:w="6"/><text x="51.3959%" y="1039.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_str (2 samples, 0.05%)</title><rect x="51.2537%" y="1013" width="0.0539%" height="15" fill="rgb(221,68,8)" fg:x="1901" fg:w="2"/><text x="51.5037%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="51.2537%" y="997" width="0.0539%" height="15" fill="rgb(254,180,31)" fg:x="1901" fg:w="2"/><text x="51.5037%" y="1007.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="51.2537%" y="981" width="0.0539%" height="15" fill="rgb(247,130,50)" fg:x="1901" fg:w="2"/><text x="51.5037%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="51.2537%" y="965" width="0.0539%" height="15" fill="rgb(211,109,4)" fg:x="1901" fg:w="2"/><text x="51.5037%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="51.2537%" y="949" width="0.0539%" height="15" fill="rgb(238,50,21)" fg:x="1901" fg:w="2"/><text x="51.5037%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="51.2537%" y="933" width="0.0539%" height="15" fill="rgb(225,57,45)" fg:x="1901" fg:w="2"/><text x="51.5037%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="51.2537%" y="917" width="0.0539%" height="15" fill="rgb(209,196,50)" fg:x="1901" fg:w="2"/><text x="51.5037%" y="927.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="51.2537%" y="901" width="0.0539%" height="15" fill="rgb(242,140,13)" fg:x="1901" fg:w="2"/><text x="51.5037%" y="911.50"></text></g><g><title>core::fmt::write (18 samples, 0.49%)</title><rect x="50.8493%" y="1141" width="0.4853%" height="15" fill="rgb(217,111,7)" fg:x="1886" fg:w="18"/><text x="51.0993%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.03%)</title><rect x="51.3076%" y="1125" width="0.0270%" height="15" fill="rgb(253,193,51)" fg:x="1903" fg:w="1"/><text x="51.5576%" y="1135.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.03%)</title><rect x="51.3076%" y="1109" width="0.0270%" height="15" fill="rgb(252,70,29)" fg:x="1903" fg:w="1"/><text x="51.5576%" y="1119.50"></text></g><g><title>tracing_core::metadata::Metadata::target (1 samples, 0.03%)</title><rect x="51.3346%" y="1141" width="0.0270%" height="15" fill="rgb(232,127,12)" fg:x="1904" fg:w="1"/><text x="51.5846%" y="1151.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.03%)</title><rect x="51.3616%" y="1077" width="0.0270%" height="15" fill="rgb(211,180,21)" fg:x="1905" fg:w="1"/><text x="51.6116%" y="1087.50"></text></g><g><title>tracing_subscriber::fmt::fmt_layer::FmtContext&lt;S,N&gt;::event_scope (2 samples, 0.05%)</title><rect x="51.3616%" y="1141" width="0.0539%" height="15" fill="rgb(229,72,13)" fg:x="1905" fg:w="2"/><text x="51.6116%" y="1151.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (2 samples, 0.05%)</title><rect x="51.3616%" y="1125" width="0.0539%" height="15" fill="rgb(240,211,49)" fg:x="1905" fg:w="2"/><text x="51.6116%" y="1135.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_span (2 samples, 0.05%)</title><rect x="51.3616%" y="1109" width="0.0539%" height="15" fill="rgb(219,149,40)" fg:x="1905" fg:w="2"/><text x="51.6116%" y="1119.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::lookup_current (2 samples, 0.05%)</title><rect x="51.3616%" y="1093" width="0.0539%" height="15" fill="rgb(210,127,46)" fg:x="1905" fg:w="2"/><text x="51.6116%" y="1103.50"></text></g><g><title>tracing_core::span::Current::id (1 samples, 0.03%)</title><rect x="51.3885%" y="1077" width="0.0270%" height="15" fill="rgb(220,106,7)" fg:x="1906" fg:w="1"/><text x="51.6385%" y="1087.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1 samples, 0.03%)</title><rect x="51.4155%" y="1125" width="0.0270%" height="15" fill="rgb(249,31,22)" fg:x="1907" fg:w="1"/><text x="51.6655%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (2 samples, 0.05%)</title><rect x="51.4424%" y="1109" width="0.0539%" height="15" fill="rgb(253,1,49)" fg:x="1908" fg:w="2"/><text x="51.6924%" y="1119.50"></text></g><g><title>std::time::SystemTime::duration_since (1 samples, 0.03%)</title><rect x="51.4694%" y="1093" width="0.0270%" height="15" fill="rgb(227,144,33)" fg:x="1909" fg:w="1"/><text x="51.7194%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::sub_time (1 samples, 0.03%)</title><rect x="51.4694%" y="1077" width="0.0270%" height="15" fill="rgb(249,163,44)" fg:x="1909" fg:w="1"/><text x="51.7194%" y="1087.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1 samples, 0.03%)</title><rect x="51.4694%" y="1061" width="0.0270%" height="15" fill="rgb(234,15,39)" fg:x="1909" fg:w="1"/><text x="51.7194%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.03%)</title><rect x="51.4694%" y="1045" width="0.0270%" height="15" fill="rgb(207,66,16)" fg:x="1909" fg:w="1"/><text x="51.7194%" y="1055.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.03%)</title><rect x="51.4694%" y="1029" width="0.0270%" height="15" fill="rgb(233,112,24)" fg:x="1909" fg:w="1"/><text x="51.7194%" y="1039.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.05%)</title><rect x="51.4964%" y="1109" width="0.0539%" height="15" fill="rgb(230,90,22)" fg:x="1910" fg:w="2"/><text x="51.7464%" y="1119.50"></text></g><g><title>clock_gettime (1 samples, 0.03%)</title><rect x="51.5233%" y="1093" width="0.0270%" height="15" fill="rgb(229,61,13)" fg:x="1911" fg:w="1"/><text x="51.7733%" y="1103.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="51.5233%" y="1077" width="0.0270%" height="15" fill="rgb(225,57,24)" fg:x="1911" fg:w="1"/><text x="51.7733%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="51.6042%" y="1013" width="0.0539%" height="15" fill="rgb(208,169,48)" fg:x="1914" fg:w="2"/><text x="51.8542%" y="1023.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="51.6042%" y="997" width="0.0539%" height="15" fill="rgb(244,218,51)" fg:x="1914" fg:w="2"/><text x="51.8542%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="51.6042%" y="981" width="0.0539%" height="15" fill="rgb(214,148,10)" fg:x="1914" fg:w="2"/><text x="51.8542%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="51.6042%" y="965" width="0.0539%" height="15" fill="rgb(225,174,27)" fg:x="1914" fg:w="2"/><text x="51.8542%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="51.6042%" y="949" width="0.0539%" height="15" fill="rgb(230,96,26)" fg:x="1914" fg:w="2"/><text x="51.8542%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="51.6042%" y="933" width="0.0539%" height="15" fill="rgb(232,10,30)" fg:x="1914" fg:w="2"/><text x="51.8542%" y="943.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="51.6042%" y="917" width="0.0539%" height="15" fill="rgb(222,8,50)" fg:x="1914" fg:w="2"/><text x="51.8542%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="51.6581%" y="1013" width="0.0270%" height="15" fill="rgb(213,81,27)" fg:x="1916" fg:w="1"/><text x="51.9081%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="51.6581%" y="997" width="0.0270%" height="15" fill="rgb(245,50,10)" fg:x="1916" fg:w="1"/><text x="51.9081%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="51.7121%" y="949" width="0.0270%" height="15" fill="rgb(216,100,18)" fg:x="1918" fg:w="1"/><text x="51.9621%" y="959.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.03%)</title><rect x="51.7121%" y="933" width="0.0270%" height="15" fill="rgb(236,147,54)" fg:x="1918" fg:w="1"/><text x="51.9621%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="51.7121%" y="917" width="0.0270%" height="15" fill="rgb(205,143,26)" fg:x="1918" fg:w="1"/><text x="51.9621%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="51.7121%" y="901" width="0.0270%" height="15" fill="rgb(236,26,9)" fg:x="1918" fg:w="1"/><text x="51.9621%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="51.7121%" y="885" width="0.0270%" height="15" fill="rgb(221,165,53)" fg:x="1918" fg:w="1"/><text x="51.9621%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="51.7121%" y="869" width="0.0270%" height="15" fill="rgb(214,110,17)" fg:x="1918" fg:w="1"/><text x="51.9621%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="51.7121%" y="853" width="0.0270%" height="15" fill="rgb(237,197,12)" fg:x="1918" fg:w="1"/><text x="51.9621%" y="863.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.05%)</title><rect x="51.7390%" y="949" width="0.0539%" height="15" fill="rgb(205,84,17)" fg:x="1919" fg:w="2"/><text x="51.9890%" y="959.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.03%)</title><rect x="51.7660%" y="933" width="0.0270%" height="15" fill="rgb(237,18,45)" fg:x="1920" fg:w="1"/><text x="52.0160%" y="943.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (4 samples, 0.11%)</title><rect x="51.7121%" y="981" width="0.1078%" height="15" fill="rgb(221,87,14)" fg:x="1918" fg:w="4"/><text x="51.9621%" y="991.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (4 samples, 0.11%)</title><rect x="51.7121%" y="965" width="0.1078%" height="15" fill="rgb(238,186,15)" fg:x="1918" fg:w="4"/><text x="51.9621%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="51.7929%" y="949" width="0.0270%" height="15" fill="rgb(208,115,11)" fg:x="1921" fg:w="1"/><text x="52.0429%" y="959.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (1 samples, 0.03%)</title><rect x="51.8199%" y="981" width="0.0270%" height="15" fill="rgb(254,175,0)" fg:x="1922" fg:w="1"/><text x="52.0699%" y="991.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.03%)</title><rect x="51.8199%" y="965" width="0.0270%" height="15" fill="rgb(227,24,42)" fg:x="1922" fg:w="1"/><text x="52.0699%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="51.8199%" y="949" width="0.0270%" height="15" fill="rgb(223,211,37)" fg:x="1922" fg:w="1"/><text x="52.0699%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (18 samples, 0.49%)</title><rect x="51.4424%" y="1125" width="0.4853%" height="15" fill="rgb(235,49,27)" fg:x="1908" fg:w="18"/><text x="51.6924%" y="1135.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (14 samples, 0.38%)</title><rect x="51.5503%" y="1109" width="0.3775%" height="15" fill="rgb(254,97,51)" fg:x="1912" fg:w="14"/><text x="51.8003%" y="1119.50"></text></g><g><title>core::fmt::write (14 samples, 0.38%)</title><rect x="51.5503%" y="1093" width="0.3775%" height="15" fill="rgb(249,51,40)" fg:x="1912" fg:w="14"/><text x="51.8003%" y="1103.50"></text></g><g><title>core::fmt::rt::Argument::fmt (14 samples, 0.38%)</title><rect x="51.5503%" y="1077" width="0.3775%" height="15" fill="rgb(210,128,45)" fg:x="1912" fg:w="14"/><text x="51.8003%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (14 samples, 0.38%)</title><rect x="51.5503%" y="1061" width="0.3775%" height="15" fill="rgb(224,137,50)" fg:x="1912" fg:w="14"/><text x="51.8003%" y="1071.50"></text></g><g><title>core::fmt::Formatter::write_fmt (13 samples, 0.35%)</title><rect x="51.5772%" y="1045" width="0.3505%" height="15" fill="rgb(242,15,9)" fg:x="1913" fg:w="13"/><text x="51.8272%" y="1055.50"></text></g><g><title>core::fmt::write (13 samples, 0.35%)</title><rect x="51.5772%" y="1029" width="0.3505%" height="15" fill="rgb(233,187,41)" fg:x="1913" fg:w="13"/><text x="51.8272%" y="1039.50"></text></g><g><title>core::fmt::run (9 samples, 0.24%)</title><rect x="51.6851%" y="1013" width="0.2427%" height="15" fill="rgb(227,2,29)" fg:x="1917" fg:w="9"/><text x="51.9351%" y="1023.50"></text></g><g><title>core::fmt::rt::Argument::fmt (8 samples, 0.22%)</title><rect x="51.7121%" y="997" width="0.2157%" height="15" fill="rgb(222,70,3)" fg:x="1918" fg:w="8"/><text x="51.9621%" y="1007.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (3 samples, 0.08%)</title><rect x="51.8469%" y="981" width="0.0809%" height="15" fill="rgb(213,11,42)" fg:x="1923" fg:w="3"/><text x="52.0969%" y="991.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (3 samples, 0.08%)</title><rect x="51.8469%" y="965" width="0.0809%" height="15" fill="rgb(225,150,9)" fg:x="1923" fg:w="3"/><text x="52.0969%" y="975.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.05%)</title><rect x="51.8738%" y="949" width="0.0539%" height="15" fill="rgb(230,162,45)" fg:x="1924" fg:w="2"/><text x="52.1238%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="51.9547%" y="1109" width="0.0270%" height="15" fill="rgb(222,14,52)" fg:x="1927" fg:w="1"/><text x="52.2047%" y="1119.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.03%)</title><rect x="51.9547%" y="1093" width="0.0270%" height="15" fill="rgb(254,198,14)" fg:x="1927" fg:w="1"/><text x="52.2047%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="51.9547%" y="1077" width="0.0270%" height="15" fill="rgb(220,217,30)" fg:x="1927" fg:w="1"/><text x="52.2047%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="51.9547%" y="1061" width="0.0270%" height="15" fill="rgb(215,146,41)" fg:x="1927" fg:w="1"/><text x="52.2047%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="51.9547%" y="1045" width="0.0270%" height="15" fill="rgb(217,27,36)" fg:x="1927" fg:w="1"/><text x="52.2047%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="51.9547%" y="1029" width="0.0270%" height="15" fill="rgb(219,218,39)" fg:x="1927" fg:w="1"/><text x="52.2047%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="51.9547%" y="1013" width="0.0270%" height="15" fill="rgb(219,4,42)" fg:x="1927" fg:w="1"/><text x="52.2047%" y="1023.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="51.9817%" y="1093" width="0.0270%" height="15" fill="rgb(249,119,36)" fg:x="1928" fg:w="1"/><text x="52.2317%" y="1103.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="52.0086%" y="1093" width="0.0270%" height="15" fill="rgb(209,23,33)" fg:x="1929" fg:w="1"/><text x="52.2586%" y="1103.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_suffix (1 samples, 0.03%)</title><rect x="52.0086%" y="1077" width="0.0270%" height="15" fill="rgb(211,10,0)" fg:x="1929" fg:w="1"/><text x="52.2586%" y="1087.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (1 samples, 0.03%)</title><rect x="52.0086%" y="1061" width="0.0270%" height="15" fill="rgb(208,99,37)" fg:x="1929" fg:w="1"/><text x="52.2586%" y="1071.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (1 samples, 0.03%)</title><rect x="52.0086%" y="1045" width="0.0270%" height="15" fill="rgb(213,132,31)" fg:x="1929" fg:w="1"/><text x="52.2586%" y="1055.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="52.0086%" y="1029" width="0.0270%" height="15" fill="rgb(243,129,40)" fg:x="1929" fg:w="1"/><text x="52.2586%" y="1039.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (2 samples, 0.05%)</title><rect x="52.1165%" y="1061" width="0.0539%" height="15" fill="rgb(210,66,33)" fg:x="1933" fg:w="2"/><text x="52.3665%" y="1071.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (6 samples, 0.16%)</title><rect x="52.0356%" y="1077" width="0.1618%" height="15" fill="rgb(209,189,4)" fg:x="1930" fg:w="6"/><text x="52.2856%" y="1087.50"></text></g><g><title>core::fmt::write (1 samples, 0.03%)</title><rect x="52.1704%" y="1061" width="0.0270%" height="15" fill="rgb(214,107,37)" fg:x="1935" fg:w="1"/><text x="52.4204%" y="1071.50"></text></g><g><title>core::fmt::write (11 samples, 0.30%)</title><rect x="51.9277%" y="1125" width="0.2966%" height="15" fill="rgb(245,88,54)" fg:x="1926" fg:w="11"/><text x="52.1777%" y="1135.50"></text></g><g><title>core::fmt::rt::Argument::fmt (9 samples, 0.24%)</title><rect x="51.9817%" y="1109" width="0.2427%" height="15" fill="rgb(205,146,20)" fg:x="1928" fg:w="9"/><text x="52.2317%" y="1119.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (7 samples, 0.19%)</title><rect x="52.0356%" y="1093" width="0.1887%" height="15" fill="rgb(220,161,25)" fg:x="1930" fg:w="7"/><text x="52.2856%" y="1103.50"></text></g><g><title>nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix::_{{closure}} (1 samples, 0.03%)</title><rect x="52.1974%" y="1077" width="0.0270%" height="15" fill="rgb(215,152,15)" fg:x="1936" fg:w="1"/><text x="52.4474%" y="1087.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.03%)</title><rect x="52.1974%" y="1061" width="0.0270%" height="15" fill="rgb(233,192,44)" fg:x="1936" fg:w="1"/><text x="52.4474%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (2 samples, 0.05%)</title><rect x="52.2243%" y="1125" width="0.0539%" height="15" fill="rgb(240,170,46)" fg:x="1937" fg:w="2"/><text x="52.4743%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (2 samples, 0.05%)</title><rect x="52.2243%" y="1109" width="0.0539%" height="15" fill="rgb(207,104,33)" fg:x="1937" fg:w="2"/><text x="52.4743%" y="1119.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (91 samples, 2.45%)</title><rect x="49.8517%" y="1157" width="2.4535%" height="15" fill="rgb(219,21,39)" fg:x="1849" fg:w="91"/><text x="50.1017%" y="1167.50">&lt;t..</text></g><g><title>tracing_subscriber::fmt::format::Format&lt;F,T&gt;::format_timestamp (33 samples, 0.89%)</title><rect x="51.4155%" y="1141" width="0.8897%" height="15" fill="rgb(214,133,29)" fg:x="1907" fg:w="33"/><text x="51.6655%" y="1151.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::suffix (1 samples, 0.03%)</title><rect x="52.2782%" y="1125" width="0.0270%" height="15" fill="rgb(226,93,6)" fg:x="1939" fg:w="1"/><text x="52.5282%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (277 samples, 7.47%)</title><rect x="44.8638%" y="1221" width="7.4683%" height="15" fill="rgb(252,222,34)" fg:x="1664" fg:w="277"/><text x="45.1138%" y="1231.50">&lt;tracing_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (277 samples, 7.47%)</title><rect x="44.8638%" y="1205" width="7.4683%" height="15" fill="rgb(252,92,48)" fg:x="1664" fg:w="277"/><text x="45.1138%" y="1215.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (277 samples, 7.47%)</title><rect x="44.8638%" y="1189" width="7.4683%" height="15" fill="rgb(245,223,24)" fg:x="1664" fg:w="277"/><text x="45.1138%" y="1199.50">std::threa..</text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (277 samples, 7.47%)</title><rect x="44.8638%" y="1173" width="7.4683%" height="15" fill="rgb(205,176,3)" fg:x="1664" fg:w="277"/><text x="45.1138%" y="1183.50">&lt;tracing_s..</text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.03%)</title><rect x="52.3052%" y="1157" width="0.0270%" height="15" fill="rgb(235,151,15)" fg:x="1940" fg:w="1"/><text x="52.5552%" y="1167.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.03%)</title><rect x="52.3052%" y="1141" width="0.0270%" height="15" fill="rgb(237,209,11)" fg:x="1940" fg:w="1"/><text x="52.5552%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="52.3052%" y="1125" width="0.0270%" height="15" fill="rgb(243,227,24)" fg:x="1940" fg:w="1"/><text x="52.5552%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (2 samples, 0.05%)</title><rect x="52.3322%" y="1173" width="0.0539%" height="15" fill="rgb(239,193,16)" fg:x="1941" fg:w="2"/><text x="52.5822%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (2 samples, 0.05%)</title><rect x="52.3322%" y="1157" width="0.0539%" height="15" fill="rgb(231,27,9)" fg:x="1941" fg:w="2"/><text x="52.5822%" y="1167.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (2 samples, 0.05%)</title><rect x="52.3322%" y="1141" width="0.0539%" height="15" fill="rgb(219,169,10)" fg:x="1941" fg:w="2"/><text x="52.5822%" y="1151.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (1 samples, 0.03%)</title><rect x="52.3861%" y="1173" width="0.0270%" height="15" fill="rgb(244,229,43)" fg:x="1943" fg:w="1"/><text x="52.6361%" y="1183.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::has_per_layer_filters (1 samples, 0.03%)</title><rect x="52.3861%" y="1157" width="0.0270%" height="15" fill="rgb(254,38,20)" fg:x="1943" fg:w="1"/><text x="52.6361%" y="1167.50"></text></g><g><title>kvlr_client::main::_{{closure}}::_{{closure}} (281 samples, 7.58%)</title><rect x="44.8638%" y="1253" width="7.5762%" height="15" fill="rgb(250,47,30)" fg:x="1664" fg:w="281"/><text x="45.1138%" y="1263.50">kvlr_clien..</text></g><g><title>tracing_core::event::Event::dispatch (281 samples, 7.58%)</title><rect x="44.8638%" y="1237" width="7.5762%" height="15" fill="rgb(224,124,36)" fg:x="1664" fg:w="281"/><text x="45.1138%" y="1247.50">tracing_co..</text></g><g><title>tracing_core::dispatcher::get_default (4 samples, 0.11%)</title><rect x="52.3322%" y="1221" width="0.1078%" height="15" fill="rgb(246,68,51)" fg:x="1941" fg:w="4"/><text x="52.5822%" y="1231.50"></text></g><g><title>tracing_core::event::Event::dispatch::_{{closure}} (4 samples, 0.11%)</title><rect x="52.3322%" y="1205" width="0.1078%" height="15" fill="rgb(253,43,49)" fg:x="1941" fg:w="4"/><text x="52.5822%" y="1215.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::event (4 samples, 0.11%)</title><rect x="52.3322%" y="1189" width="0.1078%" height="15" fill="rgb(219,54,36)" fg:x="1941" fg:w="4"/><text x="52.5822%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (1 samples, 0.03%)</title><rect x="52.4130%" y="1173" width="0.0270%" height="15" fill="rgb(227,133,34)" fg:x="1944" fg:w="1"/><text x="52.6630%" y="1183.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="52.4400%" y="1253" width="0.0270%" height="15" fill="rgb(247,227,15)" fg:x="1945" fg:w="1"/><text x="52.6900%" y="1263.50"></text></g><g><title>clock_gettime (1 samples, 0.03%)</title><rect x="52.4400%" y="1237" width="0.0270%" height="15" fill="rgb(229,96,14)" fg:x="1945" fg:w="1"/><text x="52.6900%" y="1247.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="52.4400%" y="1221" width="0.0270%" height="15" fill="rgb(220,79,17)" fg:x="1945" fg:w="1"/><text x="52.6900%" y="1231.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1429" width="34.0793%" height="15" fill="rgb(205,131,53)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1439.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1413" width="34.0793%" height="15" fill="rgb(209,50,29)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1423.50">tokio::runtime::runtime::Runtime::block_on_inner</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1397" width="34.0793%" height="15" fill="rgb(245,86,46)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1407.50">tokio::runtime::scheduler::multi_thread::MultiThread::b..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1381" width="34.0793%" height="15" fill="rgb(235,66,46)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1391.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1365" width="34.0793%" height="15" fill="rgb(232,148,31)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1375.50">tokio::runtime::scheduler::multi_thread::MultiThread::b..</text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1349" width="34.0793%" height="15" fill="rgb(217,149,8)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1359.50">tokio::runtime::context::blocking::BlockingRegionGuard:..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1333" width="34.0793%" height="15" fill="rgb(209,183,11)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1343.50">tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>tokio::runtime::coop::budget (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1317" width="34.0793%" height="15" fill="rgb(208,55,20)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1327.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1301" width="34.0793%" height="15" fill="rgb(218,39,14)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1311.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1285" width="34.0793%" height="15" fill="rgb(216,169,33)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1295.50">tokio::runtime::park::CachedParkThread::block_on::_{{cl..</text></g><g><title>kvlr_client::main::_{{closure}} (1,264 samples, 34.08%)</title><rect x="18.4147%" y="1269" width="34.0793%" height="15" fill="rgb(233,80,24)" fg:x="683" fg:w="1264"/><text x="18.6647%" y="1279.50">kvlr_client::main::_{{closure}}</text></g><g><title>tokio::fs::file::File::open::_{{closure}} (1 samples, 0.03%)</title><rect x="52.4670%" y="1253" width="0.0270%" height="15" fill="rgb(213,179,31)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1263.50"></text></g><g><title>tokio::fs::asyncify::_{{closure}} (1 samples, 0.03%)</title><rect x="52.4670%" y="1237" width="0.0270%" height="15" fill="rgb(209,19,5)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1247.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.03%)</title><rect x="52.4670%" y="1221" width="0.0270%" height="15" fill="rgb(219,18,35)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1231.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (1 samples, 0.03%)</title><rect x="52.4670%" y="1205" width="0.0270%" height="15" fill="rgb(209,169,16)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1215.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (1 samples, 0.03%)</title><rect x="52.4670%" y="1189" width="0.0270%" height="15" fill="rgb(245,90,51)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1199.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (1 samples, 0.03%)</title><rect x="52.4670%" y="1173" width="0.0270%" height="15" fill="rgb(220,99,45)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1183.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.03%)</title><rect x="52.4670%" y="1157" width="0.0270%" height="15" fill="rgb(249,89,25)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1 samples, 0.03%)</title><rect x="52.4670%" y="1141" width="0.0270%" height="15" fill="rgb(239,193,0)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1151.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (1 samples, 0.03%)</title><rect x="52.4670%" y="1125" width="0.0270%" height="15" fill="rgb(231,126,1)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1135.50"></text></g><g><title>pthread_create (1 samples, 0.03%)</title><rect x="52.4670%" y="1109" width="0.0270%" height="15" fill="rgb(243,166,3)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1119.50"></text></g><g><title>__mmap (1 samples, 0.03%)</title><rect x="52.4670%" y="1093" width="0.0270%" height="15" fill="rgb(223,22,34)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1103.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="52.4670%" y="1077" width="0.0270%" height="15" fill="rgb(251,52,51)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1087.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="52.4670%" y="1061" width="0.0270%" height="15" fill="rgb(221,165,28)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1071.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="52.4670%" y="1045" width="0.0270%" height="15" fill="rgb(218,121,47)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1055.50"></text></g><g><title>do_mmap (1 samples, 0.03%)</title><rect x="52.4670%" y="1029" width="0.0270%" height="15" fill="rgb(209,120,9)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1039.50"></text></g><g><title>mmap_region (1 samples, 0.03%)</title><rect x="52.4670%" y="1013" width="0.0270%" height="15" fill="rgb(236,68,12)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1023.50"></text></g><g><title>perf_event_mmap (1 samples, 0.03%)</title><rect x="52.4670%" y="997" width="0.0270%" height="15" fill="rgb(225,194,26)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="1007.50"></text></g><g><title>perf_iterate_sb.constprop.0 (1 samples, 0.03%)</title><rect x="52.4670%" y="981" width="0.0270%" height="15" fill="rgb(231,84,39)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="991.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="52.4670%" y="965" width="0.0270%" height="15" fill="rgb(210,11,45)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="975.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.03%)</title><rect x="52.4670%" y="949" width="0.0270%" height="15" fill="rgb(224,54,52)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="959.50"></text></g><g><title>perf_output_begin (1 samples, 0.03%)</title><rect x="52.4670%" y="933" width="0.0270%" height="15" fill="rgb(238,102,14)" fg:x="1946" fg:w="1"/><text x="52.7170%" y="943.50"></text></g><g><title>kvlr-client (1,948 samples, 52.52%)</title><rect x="0.0000%" y="1445" width="52.5209%" height="15" fill="rgb(243,160,52)" fg:x="0" fg:w="1948"/><text x="0.2500%" y="1455.50">kvlr-client</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (1 samples, 0.03%)</title><rect x="52.4939%" y="1429" width="0.0270%" height="15" fill="rgb(216,114,19)" fg:x="1947" fg:w="1"/><text x="52.7439%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.03%)</title><rect x="52.4939%" y="1413" width="0.0270%" height="15" fill="rgb(244,166,37)" fg:x="1947" fg:w="1"/><text x="52.7439%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (1 samples, 0.03%)</title><rect x="52.4939%" y="1397" width="0.0270%" height="15" fill="rgb(246,29,44)" fg:x="1947" fg:w="1"/><text x="52.7439%" y="1407.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="52.4939%" y="1381" width="0.0270%" height="15" fill="rgb(215,56,53)" fg:x="1947" fg:w="1"/><text x="52.7439%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="52.4939%" y="1365" width="0.0270%" height="15" fill="rgb(217,60,2)" fg:x="1947" fg:w="1"/><text x="52.7439%" y="1375.50"></text></g><g><title>perf-exec (6 samples, 0.16%)</title><rect x="52.5209%" y="1445" width="0.1618%" height="15" fill="rgb(207,26,24)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1455.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.16%)</title><rect x="52.5209%" y="1429" width="0.1618%" height="15" fill="rgb(252,210,15)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1439.50"></text></g><g><title>do_syscall_64 (6 samples, 0.16%)</title><rect x="52.5209%" y="1413" width="0.1618%" height="15" fill="rgb(253,209,26)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1423.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.16%)</title><rect x="52.5209%" y="1397" width="0.1618%" height="15" fill="rgb(238,170,14)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1407.50"></text></g><g><title>do_execveat_common.isra.0 (6 samples, 0.16%)</title><rect x="52.5209%" y="1381" width="0.1618%" height="15" fill="rgb(216,178,15)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1391.50"></text></g><g><title>bprm_execve (6 samples, 0.16%)</title><rect x="52.5209%" y="1365" width="0.1618%" height="15" fill="rgb(250,197,2)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1375.50"></text></g><g><title>load_elf_binary (6 samples, 0.16%)</title><rect x="52.5209%" y="1349" width="0.1618%" height="15" fill="rgb(212,70,42)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1359.50"></text></g><g><title>begin_new_exec (6 samples, 0.16%)</title><rect x="52.5209%" y="1333" width="0.1618%" height="15" fill="rgb(227,213,9)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1343.50"></text></g><g><title>perf_event_exec (6 samples, 0.16%)</title><rect x="52.5209%" y="1317" width="0.1618%" height="15" fill="rgb(245,99,25)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1327.50"></text></g><g><title>perf_ctx_enable (6 samples, 0.16%)</title><rect x="52.5209%" y="1301" width="0.1618%" height="15" fill="rgb(250,82,29)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1311.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (6 samples, 0.16%)</title><rect x="52.5209%" y="1285" width="0.1618%" height="15" fill="rgb(241,226,54)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1295.50"></text></g><g><title>native_write_msr (6 samples, 0.16%)</title><rect x="52.5209%" y="1269" width="0.1618%" height="15" fill="rgb(221,99,41)" fg:x="1948" fg:w="6"/><text x="52.7709%" y="1279.50"></text></g><g><title>&lt;&amp;mut rmp_serde::decode::Deserializer&lt;R,C&gt; as serde::de::Deserializer&gt;::deserialize_enum (1 samples, 0.03%)</title><rect x="52.6827%" y="1429" width="0.0270%" height="15" fill="rgb(213,90,21)" fg:x="1954" fg:w="1"/><text x="52.9327%" y="1439.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.05%)</title><rect x="52.7096%" y="1429" width="0.0539%" height="15" fill="rgb(205,208,24)" fg:x="1955" fg:w="2"/><text x="52.9596%" y="1439.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (3 samples, 0.08%)</title><rect x="52.7635%" y="1429" width="0.0809%" height="15" fill="rgb(246,31,12)" fg:x="1957" fg:w="3"/><text x="53.0135%" y="1439.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.03%)</title><rect x="52.8175%" y="1413" width="0.0270%" height="15" fill="rgb(213,154,6)" fg:x="1959" fg:w="1"/><text x="53.0675%" y="1423.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.03%)</title><rect x="52.8175%" y="1397" width="0.0270%" height="15" fill="rgb(222,163,29)" fg:x="1959" fg:w="1"/><text x="53.0675%" y="1407.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (1 samples, 0.03%)</title><rect x="52.8175%" y="1381" width="0.0270%" height="15" fill="rgb(227,201,8)" fg:x="1959" fg:w="1"/><text x="53.0675%" y="1391.50"></text></g><g><title>tokio::runtime::signal::Driver::process (1 samples, 0.03%)</title><rect x="52.8175%" y="1365" width="0.0270%" height="15" fill="rgb(233,9,32)" fg:x="1959" fg:w="1"/><text x="53.0675%" y="1375.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="52.8444%" y="1429" width="0.0270%" height="15" fill="rgb(217,54,24)" fg:x="1960" fg:w="1"/><text x="53.0944%" y="1439.50"></text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.03%)</title><rect x="52.8714%" y="1429" width="0.0270%" height="15" fill="rgb(235,192,0)" fg:x="1961" fg:w="1"/><text x="53.1214%" y="1439.50"></text></g><g><title>&lt;kvlr::rpc::protocol_handler::RpcProtocolHandler as kvlr::connection::protocol_handler::ProtocolHandler&gt;::handle_frame (2 samples, 0.05%)</title><rect x="52.8984%" y="1413" width="0.0539%" height="15" fill="rgb(235,45,9)" fg:x="1962" fg:w="2"/><text x="53.1484%" y="1423.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (2 samples, 0.05%)</title><rect x="52.9523%" y="1413" width="0.0539%" height="15" fill="rgb(246,42,40)" fg:x="1964" fg:w="2"/><text x="53.2023%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.05%)</title><rect x="52.9523%" y="1397" width="0.0539%" height="15" fill="rgb(248,111,24)" fg:x="1964" fg:w="2"/><text x="53.2023%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.05%)</title><rect x="52.9523%" y="1381" width="0.0539%" height="15" fill="rgb(249,65,22)" fg:x="1964" fg:w="2"/><text x="53.2023%" y="1391.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.05%)</title><rect x="52.9523%" y="1365" width="0.0539%" height="15" fill="rgb(238,111,51)" fg:x="1964" fg:w="2"/><text x="53.2023%" y="1375.50"></text></g><g><title>__libc_calloc (1 samples, 0.03%)</title><rect x="53.0062%" y="1413" width="0.0270%" height="15" fill="rgb(250,118,22)" fg:x="1966" fg:w="1"/><text x="53.2562%" y="1423.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="53.0332%" y="1413" width="0.0270%" height="15" fill="rgb(234,84,26)" fg:x="1967" fg:w="1"/><text x="53.2832%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.03%)</title><rect x="53.0601%" y="1413" width="0.0270%" height="15" fill="rgb(243,172,12)" fg:x="1968" fg:w="1"/><text x="53.3101%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::get_mut_unchecked (1 samples, 0.03%)</title><rect x="53.0601%" y="1397" width="0.0270%" height="15" fill="rgb(236,150,49)" fg:x="1968" fg:w="1"/><text x="53.3101%" y="1407.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (2 samples, 0.05%)</title><rect x="53.0871%" y="1413" width="0.0539%" height="15" fill="rgb(225,197,26)" fg:x="1969" fg:w="2"/><text x="53.3371%" y="1423.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.03%)</title><rect x="53.1410%" y="1413" width="0.0270%" height="15" fill="rgb(214,17,42)" fg:x="1971" fg:w="1"/><text x="53.3910%" y="1423.50"></text></g><g><title>rustls::record_layer::RecordLayer::encrypt_outgoing (2 samples, 0.05%)</title><rect x="53.1680%" y="1413" width="0.0539%" height="15" fill="rgb(224,165,40)" fg:x="1972" fg:w="2"/><text x="53.4180%" y="1423.50"></text></g><g><title>std::sys::pal::unix::fs::File::read (1 samples, 0.03%)</title><rect x="53.2219%" y="1413" width="0.0270%" height="15" fill="rgb(246,100,4)" fg:x="1974" fg:w="1"/><text x="53.4719%" y="1423.50"></text></g><g><title>tokio::runtime::driver::Driver::park (2 samples, 0.05%)</title><rect x="53.2489%" y="1413" width="0.0539%" height="15" fill="rgb(222,103,0)" fg:x="1975" fg:w="2"/><text x="53.4989%" y="1423.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (1 samples, 0.03%)</title><rect x="53.3028%" y="1413" width="0.0270%" height="15" fill="rgb(227,189,26)" fg:x="1977" fg:w="1"/><text x="53.5528%" y="1423.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1 samples, 0.03%)</title><rect x="53.3028%" y="1397" width="0.0270%" height="15" fill="rgb(214,202,17)" fg:x="1977" fg:w="1"/><text x="53.5528%" y="1407.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.05%)</title><rect x="53.3297%" y="1413" width="0.0539%" height="15" fill="rgb(229,111,3)" fg:x="1978" fg:w="2"/><text x="53.5797%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back (1 samples, 0.03%)</title><rect x="53.3837%" y="1413" width="0.0270%" height="15" fill="rgb(229,172,15)" fg:x="1980" fg:w="1"/><text x="53.6337%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicU32::store (1 samples, 0.03%)</title><rect x="53.3837%" y="1397" width="0.0270%" height="15" fill="rgb(230,224,35)" fg:x="1980" fg:w="1"/><text x="53.6337%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 0.03%)</title><rect x="53.4106%" y="1413" width="0.0270%" height="15" fill="rgb(251,141,6)" fg:x="1981" fg:w="1"/><text x="53.6606%" y="1423.50"></text></g><g><title>tokio::runtime::signal::Driver::process (1 samples, 0.03%)</title><rect x="53.4376%" y="1413" width="0.0270%" height="15" fill="rgb(225,208,6)" fg:x="1982" fg:w="1"/><text x="53.6876%" y="1423.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (1 samples, 0.03%)</title><rect x="53.4376%" y="1397" width="0.0270%" height="15" fill="rgb(246,181,16)" fg:x="1982" fg:w="1"/><text x="53.6876%" y="1407.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.11%)</title><rect x="53.4645%" y="1413" width="0.1078%" height="15" fill="rgb(227,129,36)" fg:x="1983" fg:w="4"/><text x="53.7145%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.03%)</title><rect x="53.5454%" y="1397" width="0.0270%" height="15" fill="rgb(248,117,24)" fg:x="1986" fg:w="1"/><text x="53.7954%" y="1407.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (1 samples, 0.03%)</title><rect x="53.5724%" y="1413" width="0.0270%" height="15" fill="rgb(214,185,35)" fg:x="1987" fg:w="1"/><text x="53.8224%" y="1423.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.05%)</title><rect x="53.5994%" y="1413" width="0.0539%" height="15" fill="rgb(236,150,34)" fg:x="1988" fg:w="2"/><text x="53.8494%" y="1423.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (7 samples, 0.19%)</title><rect x="53.6533%" y="1413" width="0.1887%" height="15" fill="rgb(243,228,27)" fg:x="1990" fg:w="7"/><text x="53.9033%" y="1423.50"></text></g><g><title>[[heap]] (36 samples, 0.97%)</title><rect x="52.8984%" y="1429" width="0.9706%" height="15" fill="rgb(245,77,44)" fg:x="1962" fg:w="36"/><text x="53.1484%" y="1439.50"></text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::read_io (1 samples, 0.03%)</title><rect x="53.8420%" y="1413" width="0.0270%" height="15" fill="rgb(235,214,42)" fg:x="1997" fg:w="1"/><text x="54.0920%" y="1423.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::read_tls (1 samples, 0.03%)</title><rect x="53.8420%" y="1397" width="0.0270%" height="15" fill="rgb(221,74,3)" fg:x="1997" fg:w="1"/><text x="54.0920%" y="1407.50"></text></g><g><title>&lt;rustls::conn::connection::Reader as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="53.8690%" y="1413" width="0.0270%" height="15" fill="rgb(206,121,29)" fg:x="1998" fg:w="1"/><text x="54.1190%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="53.8959%" y="1413" width="0.0539%" height="15" fill="rgb(249,131,53)" fg:x="1999" fg:w="2"/><text x="54.1459%" y="1423.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (1 samples, 0.03%)</title><rect x="53.9499%" y="1413" width="0.0270%" height="15" fill="rgb(236,170,29)" fg:x="2001" fg:w="1"/><text x="54.1999%" y="1423.50"></text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored (1 samples, 0.03%)</title><rect x="53.9768%" y="1413" width="0.0270%" height="15" fill="rgb(247,96,15)" fg:x="2002" fg:w="1"/><text x="54.2268%" y="1423.50"></text></g><g><title>tokio_rustls::common::SyncWriteAdapter&lt;T&gt;::poll_with (1 samples, 0.03%)</title><rect x="53.9768%" y="1397" width="0.0270%" height="15" fill="rgb(211,210,7)" fg:x="2002" fg:w="1"/><text x="54.2268%" y="1407.50"></text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored::_{{closure}} (1 samples, 0.03%)</title><rect x="53.9768%" y="1381" width="0.0270%" height="15" fill="rgb(240,88,50)" fg:x="2002" fg:w="1"/><text x="54.2268%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (2 samples, 0.05%)</title><rect x="54.0038%" y="1413" width="0.0539%" height="15" fill="rgb(209,229,26)" fg:x="2003" fg:w="2"/><text x="54.2538%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (2 samples, 0.05%)</title><rect x="54.0038%" y="1397" width="0.0539%" height="15" fill="rgb(210,68,23)" fg:x="2003" fg:w="2"/><text x="54.2538%" y="1407.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="54.0038%" y="1381" width="0.0539%" height="15" fill="rgb(229,180,13)" fg:x="2003" fg:w="2"/><text x="54.2538%" y="1391.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (2 samples, 0.05%)</title><rect x="54.0038%" y="1365" width="0.0539%" height="15" fill="rgb(236,53,44)" fg:x="2003" fg:w="2"/><text x="54.2538%" y="1375.50"></text></g><g><title>epoll_wait (1 samples, 0.03%)</title><rect x="54.0577%" y="1413" width="0.0270%" height="15" fill="rgb(244,214,29)" fg:x="2005" fg:w="1"/><text x="54.3077%" y="1423.50"></text></g><g><title>error_entry (1 samples, 0.03%)</title><rect x="54.0577%" y="1397" width="0.0270%" height="15" fill="rgb(220,75,29)" fg:x="2005" fg:w="1"/><text x="54.3077%" y="1407.50"></text></g><g><title>ring::aead::aes_gcm::aes_gcm_seal (1 samples, 0.03%)</title><rect x="54.0847%" y="1413" width="0.0270%" height="15" fill="rgb(214,183,37)" fg:x="2006" fg:w="1"/><text x="54.3347%" y="1423.50"></text></g><g><title>ring_core_0_17_8_aesni_gcm_decrypt (1 samples, 0.03%)</title><rect x="54.1116%" y="1413" width="0.0270%" height="15" fill="rgb(239,117,29)" fg:x="2007" fg:w="1"/><text x="54.3616%" y="1423.50"></text></g><g><title>rustls::common_state::CommonState::take_received_plaintext (1 samples, 0.03%)</title><rect x="54.1386%" y="1413" width="0.0270%" height="15" fill="rgb(237,171,35)" fg:x="2008" fg:w="1"/><text x="54.3886%" y="1423.50"></text></g><g><title>rustls::msgs::message::outbound::OutboundChunks::copy_to_vec (1 samples, 0.03%)</title><rect x="54.1655%" y="1413" width="0.0270%" height="15" fill="rgb(229,178,53)" fg:x="2009" fg:w="1"/><text x="54.4155%" y="1423.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::write_to (3 samples, 0.08%)</title><rect x="54.1925%" y="1413" width="0.0809%" height="15" fill="rgb(210,102,19)" fg:x="2010" fg:w="3"/><text x="54.4425%" y="1423.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::is_empty (1 samples, 0.03%)</title><rect x="54.2464%" y="1397" width="0.0270%" height="15" fill="rgb(235,127,22)" fg:x="2012" fg:w="1"/><text x="54.4964%" y="1407.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (1 samples, 0.03%)</title><rect x="54.2464%" y="1381" width="0.0270%" height="15" fill="rgb(244,31,31)" fg:x="2012" fg:w="1"/><text x="54.4964%" y="1391.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="54.2734%" y="1413" width="0.0270%" height="15" fill="rgb(231,43,21)" fg:x="2013" fg:w="1"/><text x="54.5234%" y="1423.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3 samples, 0.08%)</title><rect x="54.3004%" y="1413" width="0.0809%" height="15" fill="rgb(217,131,35)" fg:x="2014" fg:w="3"/><text x="54.5504%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.03%)</title><rect x="54.3543%" y="1397" width="0.0270%" height="15" fill="rgb(221,149,4)" fg:x="2016" fg:w="1"/><text x="54.6043%" y="1407.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.03%)</title><rect x="54.3543%" y="1381" width="0.0270%" height="15" fill="rgb(232,170,28)" fg:x="2016" fg:w="1"/><text x="54.6043%" y="1391.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.03%)</title><rect x="54.3812%" y="1413" width="0.0270%" height="15" fill="rgb(238,56,10)" fg:x="2017" fg:w="1"/><text x="54.6312%" y="1423.50"></text></g><g><title>[anon] (22 samples, 0.59%)</title><rect x="53.8690%" y="1429" width="0.5932%" height="15" fill="rgb(235,196,14)" fg:x="1998" fg:w="22"/><text x="54.1190%" y="1439.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (2 samples, 0.05%)</title><rect x="54.4082%" y="1413" width="0.0539%" height="15" fill="rgb(216,45,48)" fg:x="2018" fg:w="2"/><text x="54.6582%" y="1423.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="54.4621%" y="1397" width="0.0270%" height="15" fill="rgb(238,213,17)" fg:x="2020" fg:w="1"/><text x="54.7121%" y="1407.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="54.4621%" y="1381" width="0.0270%" height="15" fill="rgb(212,13,2)" fg:x="2020" fg:w="1"/><text x="54.7121%" y="1391.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="54.4621%" y="1365" width="0.0270%" height="15" fill="rgb(240,114,20)" fg:x="2020" fg:w="1"/><text x="54.7121%" y="1375.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="54.4621%" y="1349" width="0.0270%" height="15" fill="rgb(228,41,40)" fg:x="2020" fg:w="1"/><text x="54.7121%" y="1359.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (12 samples, 0.32%)</title><rect x="54.5160%" y="1333" width="0.3235%" height="15" fill="rgb(244,132,35)" fg:x="2022" fg:w="12"/><text x="54.7660%" y="1343.50"></text></g><g><title>syscall (12 samples, 0.32%)</title><rect x="54.5160%" y="1317" width="0.3235%" height="15" fill="rgb(253,189,4)" fg:x="2022" fg:w="12"/><text x="54.7660%" y="1327.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.32%)</title><rect x="54.5160%" y="1301" width="0.3235%" height="15" fill="rgb(224,37,19)" fg:x="2022" fg:w="12"/><text x="54.7660%" y="1311.50"></text></g><g><title>do_syscall_64 (12 samples, 0.32%)</title><rect x="54.5160%" y="1285" width="0.3235%" height="15" fill="rgb(235,223,18)" fg:x="2022" fg:w="12"/><text x="54.7660%" y="1295.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.30%)</title><rect x="54.5430%" y="1269" width="0.2966%" height="15" fill="rgb(235,163,25)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1279.50"></text></g><g><title>do_futex (11 samples, 0.30%)</title><rect x="54.5430%" y="1253" width="0.2966%" height="15" fill="rgb(217,145,28)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1263.50"></text></g><g><title>futex_wait (11 samples, 0.30%)</title><rect x="54.5430%" y="1237" width="0.2966%" height="15" fill="rgb(223,223,32)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1247.50"></text></g><g><title>futex_wait_queue (11 samples, 0.30%)</title><rect x="54.5430%" y="1221" width="0.2966%" height="15" fill="rgb(227,189,39)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1231.50"></text></g><g><title>schedule (11 samples, 0.30%)</title><rect x="54.5430%" y="1205" width="0.2966%" height="15" fill="rgb(248,10,22)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1215.50"></text></g><g><title>__schedule (11 samples, 0.30%)</title><rect x="54.5430%" y="1189" width="0.2966%" height="15" fill="rgb(248,46,39)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1199.50"></text></g><g><title>finish_task_switch.isra.0 (11 samples, 0.30%)</title><rect x="54.5430%" y="1173" width="0.2966%" height="15" fill="rgb(248,113,48)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1183.50"></text></g><g><title>__perf_event_task_sched_in (11 samples, 0.30%)</title><rect x="54.5430%" y="1157" width="0.2966%" height="15" fill="rgb(245,16,25)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1167.50"></text></g><g><title>perf_ctx_enable (11 samples, 0.30%)</title><rect x="54.5430%" y="1141" width="0.2966%" height="15" fill="rgb(249,152,16)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1151.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (11 samples, 0.30%)</title><rect x="54.5430%" y="1125" width="0.2966%" height="15" fill="rgb(250,16,1)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1135.50"></text></g><g><title>native_write_msr (11 samples, 0.30%)</title><rect x="54.5430%" y="1109" width="0.2966%" height="15" fill="rgb(249,138,3)" fg:x="2023" fg:w="11"/><text x="54.7930%" y="1119.50"></text></g><g><title>hrtimer_start_range_ns (5 samples, 0.13%)</title><rect x="54.8665%" y="1093" width="0.1348%" height="15" fill="rgb(227,71,41)" fg:x="2035" fg:w="5"/><text x="55.1165%" y="1103.50"></text></g><g><title>enqueue_hrtimer (3 samples, 0.08%)</title><rect x="54.9205%" y="1077" width="0.0809%" height="15" fill="rgb(209,184,23)" fg:x="2037" fg:w="3"/><text x="55.1705%" y="1087.50"></text></g><g><title>timerqueue_add (3 samples, 0.08%)</title><rect x="54.9205%" y="1061" width="0.0809%" height="15" fill="rgb(223,215,31)" fg:x="2037" fg:w="3"/><text x="55.1705%" y="1071.50"></text></g><g><title>avg_vruntime (1 samples, 0.03%)</title><rect x="55.0283%" y="1029" width="0.0270%" height="15" fill="rgb(210,146,28)" fg:x="2041" fg:w="1"/><text x="55.2783%" y="1039.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="55.0553%" y="1029" width="0.0270%" height="15" fill="rgb(209,183,41)" fg:x="2042" fg:w="1"/><text x="55.3053%" y="1039.50"></text></g><g><title>dequeue_entity (3 samples, 0.08%)</title><rect x="55.0283%" y="1045" width="0.0809%" height="15" fill="rgb(209,224,45)" fg:x="2041" fg:w="3"/><text x="55.2783%" y="1055.50"></text></g><g><title>update_min_vruntime (1 samples, 0.03%)</title><rect x="55.0822%" y="1029" width="0.0270%" height="15" fill="rgb(224,209,51)" fg:x="2043" fg:w="1"/><text x="55.3322%" y="1039.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.11%)</title><rect x="55.0283%" y="1061" width="0.1078%" height="15" fill="rgb(223,17,39)" fg:x="2041" fg:w="4"/><text x="55.2783%" y="1071.50"></text></g><g><title>update_cfs_group (1 samples, 0.03%)</title><rect x="55.1092%" y="1045" width="0.0270%" height="15" fill="rgb(234,204,37)" fg:x="2044" fg:w="1"/><text x="55.3592%" y="1055.50"></text></g><g><title>futex_wait_queue (22 samples, 0.59%)</title><rect x="54.8665%" y="1109" width="0.5932%" height="15" fill="rgb(236,120,5)" fg:x="2035" fg:w="22"/><text x="55.1165%" y="1119.50"></text></g><g><title>schedule (17 samples, 0.46%)</title><rect x="55.0013%" y="1093" width="0.4583%" height="15" fill="rgb(248,97,27)" fg:x="2040" fg:w="17"/><text x="55.2513%" y="1103.50"></text></g><g><title>__schedule (17 samples, 0.46%)</title><rect x="55.0013%" y="1077" width="0.4583%" height="15" fill="rgb(240,66,17)" fg:x="2040" fg:w="17"/><text x="55.2513%" y="1087.50"></text></g><g><title>finish_task_switch.isra.0 (12 samples, 0.32%)</title><rect x="55.1362%" y="1061" width="0.3235%" height="15" fill="rgb(210,79,3)" fg:x="2045" fg:w="12"/><text x="55.3862%" y="1071.50"></text></g><g><title>__perf_event_task_sched_in (12 samples, 0.32%)</title><rect x="55.1362%" y="1045" width="0.3235%" height="15" fill="rgb(214,176,27)" fg:x="2045" fg:w="12"/><text x="55.3862%" y="1055.50"></text></g><g><title>perf_ctx_enable (12 samples, 0.32%)</title><rect x="55.1362%" y="1029" width="0.3235%" height="15" fill="rgb(235,185,3)" fg:x="2045" fg:w="12"/><text x="55.3862%" y="1039.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (12 samples, 0.32%)</title><rect x="55.1362%" y="1013" width="0.3235%" height="15" fill="rgb(227,24,12)" fg:x="2045" fg:w="12"/><text x="55.3862%" y="1023.50"></text></g><g><title>native_write_msr (12 samples, 0.32%)</title><rect x="55.1362%" y="997" width="0.3235%" height="15" fill="rgb(252,169,48)" fg:x="2045" fg:w="12"/><text x="55.3862%" y="1007.50"></text></g><g><title>__x64_sys_futex (23 samples, 0.62%)</title><rect x="54.8665%" y="1157" width="0.6201%" height="15" fill="rgb(212,65,1)" fg:x="2035" fg:w="23"/><text x="55.1165%" y="1167.50"></text></g><g><title>do_futex (23 samples, 0.62%)</title><rect x="54.8665%" y="1141" width="0.6201%" height="15" fill="rgb(242,39,24)" fg:x="2035" fg:w="23"/><text x="55.1165%" y="1151.50"></text></g><g><title>futex_wait (23 samples, 0.62%)</title><rect x="54.8665%" y="1125" width="0.6201%" height="15" fill="rgb(249,32,23)" fg:x="2035" fg:w="23"/><text x="55.1165%" y="1135.50"></text></g><g><title>hrtimer_cancel (1 samples, 0.03%)</title><rect x="55.4597%" y="1109" width="0.0270%" height="15" fill="rgb(251,195,23)" fg:x="2057" fg:w="1"/><text x="55.7097%" y="1119.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (1 samples, 0.03%)</title><rect x="55.4597%" y="1093" width="0.0270%" height="15" fill="rgb(236,174,8)" fg:x="2057" fg:w="1"/><text x="55.7097%" y="1103.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="55.4597%" y="1077" width="0.0270%" height="15" fill="rgb(220,197,8)" fg:x="2057" fg:w="1"/><text x="55.7097%" y="1087.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.67%)</title><rect x="54.8396%" y="1189" width="0.6740%" height="15" fill="rgb(240,108,37)" fg:x="2034" fg:w="25"/><text x="55.0896%" y="1199.50"></text></g><g><title>do_syscall_64 (24 samples, 0.65%)</title><rect x="54.8665%" y="1173" width="0.6471%" height="15" fill="rgb(232,176,24)" fg:x="2035" fg:w="24"/><text x="55.1165%" y="1183.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="55.4867%" y="1157" width="0.0270%" height="15" fill="rgb(243,35,29)" fg:x="2058" fg:w="1"/><text x="55.7367%" y="1167.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="55.4867%" y="1141" width="0.0270%" height="15" fill="rgb(210,37,18)" fg:x="2058" fg:w="1"/><text x="55.7367%" y="1151.50"></text></g><g><title>switch_fpu_return (1 samples, 0.03%)</title><rect x="55.4867%" y="1125" width="0.0270%" height="15" fill="rgb(224,184,40)" fg:x="2058" fg:w="1"/><text x="55.7367%" y="1135.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.03%)</title><rect x="55.4867%" y="1109" width="0.0270%" height="15" fill="rgb(236,39,29)" fg:x="2058" fg:w="1"/><text x="55.7367%" y="1119.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (26 samples, 0.70%)</title><rect x="54.8396%" y="1301" width="0.7010%" height="15" fill="rgb(232,48,39)" fg:x="2034" fg:w="26"/><text x="55.0896%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::park (26 samples, 0.70%)</title><rect x="54.8396%" y="1285" width="0.7010%" height="15" fill="rgb(236,34,42)" fg:x="2034" fg:w="26"/><text x="55.0896%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (26 samples, 0.70%)</title><rect x="54.8396%" y="1269" width="0.7010%" height="15" fill="rgb(243,106,37)" fg:x="2034" fg:w="26"/><text x="55.0896%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (26 samples, 0.70%)</title><rect x="54.8396%" y="1253" width="0.7010%" height="15" fill="rgb(218,96,6)" fg:x="2034" fg:w="26"/><text x="55.0896%" y="1263.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (26 samples, 0.70%)</title><rect x="54.8396%" y="1237" width="0.7010%" height="15" fill="rgb(235,130,12)" fg:x="2034" fg:w="26"/><text x="55.0896%" y="1247.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (26 samples, 0.70%)</title><rect x="54.8396%" y="1221" width="0.7010%" height="15" fill="rgb(231,95,0)" fg:x="2034" fg:w="26"/><text x="55.0896%" y="1231.50"></text></g><g><title>syscall (26 samples, 0.70%)</title><rect x="54.8396%" y="1205" width="0.7010%" height="15" fill="rgb(228,12,23)" fg:x="2034" fg:w="26"/><text x="55.0896%" y="1215.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (1 samples, 0.03%)</title><rect x="55.5136%" y="1189" width="0.0270%" height="15" fill="rgb(216,12,1)" fg:x="2059" fg:w="1"/><text x="55.7636%" y="1199.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait_timeout (28 samples, 0.75%)</title><rect x="54.8396%" y="1333" width="0.7549%" height="15" fill="rgb(219,59,3)" fg:x="2034" fg:w="28"/><text x="55.0896%" y="1343.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_for (28 samples, 0.75%)</title><rect x="54.8396%" y="1317" width="0.7549%" height="15" fill="rgb(215,208,46)" fg:x="2034" fg:w="28"/><text x="55.0896%" y="1327.50"></text></g><g><title>parking_lot::util::to_deadline (2 samples, 0.05%)</title><rect x="55.5406%" y="1301" width="0.0539%" height="15" fill="rgb(254,224,29)" fg:x="2060" fg:w="2"/><text x="55.7906%" y="1311.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.05%)</title><rect x="55.5406%" y="1285" width="0.0539%" height="15" fill="rgb(232,14,29)" fg:x="2060" fg:w="2"/><text x="55.7906%" y="1295.50"></text></g><g><title>clock_gettime (2 samples, 0.05%)</title><rect x="55.5406%" y="1269" width="0.0539%" height="15" fill="rgb(208,45,52)" fg:x="2060" fg:w="2"/><text x="55.7906%" y="1279.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="55.5675%" y="1253" width="0.0270%" height="15" fill="rgb(234,191,28)" fg:x="2061" fg:w="1"/><text x="55.8175%" y="1263.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.13%)</title><rect x="55.5945%" y="1109" width="0.1348%" height="15" fill="rgb(244,67,43)" fg:x="2062" fg:w="5"/><text x="55.8445%" y="1119.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.13%)</title><rect x="55.5945%" y="1093" width="0.1348%" height="15" fill="rgb(236,189,24)" fg:x="2062" fg:w="5"/><text x="55.8445%" y="1103.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (5 samples, 0.13%)</title><rect x="55.5945%" y="1077" width="0.1348%" height="15" fill="rgb(239,214,33)" fg:x="2062" fg:w="5"/><text x="55.8445%" y="1087.50"></text></g><g><title>native_write_msr (5 samples, 0.13%)</title><rect x="55.5945%" y="1061" width="0.1348%" height="15" fill="rgb(226,176,41)" fg:x="2062" fg:w="5"/><text x="55.8445%" y="1071.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.16%)</title><rect x="55.5945%" y="1333" width="0.1618%" height="15" fill="rgb(248,47,8)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1343.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.16%)</title><rect x="55.5945%" y="1317" width="0.1618%" height="15" fill="rgb(218,81,44)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1327.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.16%)</title><rect x="55.5945%" y="1301" width="0.1618%" height="15" fill="rgb(213,98,6)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1311.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (6 samples, 0.16%)</title><rect x="55.5945%" y="1285" width="0.1618%" height="15" fill="rgb(222,85,22)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1295.50"></text></g><g><title>syscall (6 samples, 0.16%)</title><rect x="55.5945%" y="1269" width="0.1618%" height="15" fill="rgb(239,46,39)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1279.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.16%)</title><rect x="55.5945%" y="1253" width="0.1618%" height="15" fill="rgb(237,12,29)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1263.50"></text></g><g><title>do_syscall_64 (6 samples, 0.16%)</title><rect x="55.5945%" y="1237" width="0.1618%" height="15" fill="rgb(214,77,8)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1247.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.16%)</title><rect x="55.5945%" y="1221" width="0.1618%" height="15" fill="rgb(217,168,37)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1231.50"></text></g><g><title>do_futex (6 samples, 0.16%)</title><rect x="55.5945%" y="1205" width="0.1618%" height="15" fill="rgb(221,217,23)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1215.50"></text></g><g><title>futex_wait (6 samples, 0.16%)</title><rect x="55.5945%" y="1189" width="0.1618%" height="15" fill="rgb(243,229,36)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1199.50"></text></g><g><title>futex_wait_queue (6 samples, 0.16%)</title><rect x="55.5945%" y="1173" width="0.1618%" height="15" fill="rgb(251,163,40)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1183.50"></text></g><g><title>schedule (6 samples, 0.16%)</title><rect x="55.5945%" y="1157" width="0.1618%" height="15" fill="rgb(237,222,12)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1167.50"></text></g><g><title>__schedule (6 samples, 0.16%)</title><rect x="55.5945%" y="1141" width="0.1618%" height="15" fill="rgb(248,132,6)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.16%)</title><rect x="55.5945%" y="1125" width="0.1618%" height="15" fill="rgb(227,167,50)" fg:x="2062" fg:w="6"/><text x="55.8445%" y="1135.50"></text></g><g><title>task_dead_fair (1 samples, 0.03%)</title><rect x="55.7293%" y="1109" width="0.0270%" height="15" fill="rgb(242,84,37)" fg:x="2067" fg:w="1"/><text x="55.9793%" y="1119.50"></text></g><g><title>tokio::loom::std::rand::seed (1 samples, 0.03%)</title><rect x="55.7563%" y="1269" width="0.0270%" height="15" fill="rgb(212,4,50)" fg:x="2068" fg:w="1"/><text x="56.0063%" y="1279.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.03%)</title><rect x="55.8641%" y="1237" width="0.0270%" height="15" fill="rgb(230,228,32)" fg:x="2072" fg:w="1"/><text x="56.1141%" y="1247.50"></text></g><g><title>core::time::Duration::as_nanos (1 samples, 0.03%)</title><rect x="55.8911%" y="1237" width="0.0270%" height="15" fill="rgb(248,217,23)" fg:x="2073" fg:w="1"/><text x="56.1411%" y="1247.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (9 samples, 0.24%)</title><rect x="55.9180%" y="1237" width="0.2427%" height="15" fill="rgb(238,197,32)" fg:x="2074" fg:w="9"/><text x="56.1680%" y="1247.50"></text></g><g><title>pow (9 samples, 0.24%)</title><rect x="55.9180%" y="1221" width="0.2427%" height="15" fill="rgb(236,106,1)" fg:x="2074" fg:w="9"/><text x="56.1680%" y="1231.50"></text></g><g><title>[libm.so.6] (7 samples, 0.19%)</title><rect x="55.9720%" y="1205" width="0.1887%" height="15" fill="rgb(219,228,13)" fg:x="2076" fg:w="7"/><text x="56.2220%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (16 samples, 0.43%)</title><rect x="55.8102%" y="1253" width="0.4314%" height="15" fill="rgb(238,30,35)" fg:x="2070" fg:w="16"/><text x="56.0602%" y="1263.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3 samples, 0.08%)</title><rect x="56.1607%" y="1237" width="0.0809%" height="15" fill="rgb(236,70,23)" fg:x="2083" fg:w="3"/><text x="56.4107%" y="1247.50"></text></g><g><title>clock_gettime (3 samples, 0.08%)</title><rect x="56.1607%" y="1221" width="0.0809%" height="15" fill="rgb(249,104,48)" fg:x="2083" fg:w="3"/><text x="56.4107%" y="1231.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.08%)</title><rect x="56.1607%" y="1205" width="0.0809%" height="15" fill="rgb(254,117,50)" fg:x="2083" fg:w="3"/><text x="56.4107%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (5 samples, 0.13%)</title><rect x="56.2416%" y="1253" width="0.1348%" height="15" fill="rgb(223,152,4)" fg:x="2086" fg:w="5"/><text x="56.4916%" y="1263.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.13%)</title><rect x="56.2416%" y="1237" width="0.1348%" height="15" fill="rgb(245,6,2)" fg:x="2086" fg:w="5"/><text x="56.4916%" y="1247.50"></text></g><g><title>clock_gettime (5 samples, 0.13%)</title><rect x="56.2416%" y="1221" width="0.1348%" height="15" fill="rgb(249,150,24)" fg:x="2086" fg:w="5"/><text x="56.4916%" y="1231.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="56.3225%" y="1205" width="0.0539%" height="15" fill="rgb(228,185,42)" fg:x="2089" fg:w="2"/><text x="56.5725%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (3 samples, 0.08%)</title><rect x="56.3764%" y="1253" width="0.0809%" height="15" fill="rgb(226,39,33)" fg:x="2091" fg:w="3"/><text x="56.6264%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1 samples, 0.03%)</title><rect x="56.4303%" y="1237" width="0.0270%" height="15" fill="rgb(221,166,19)" fg:x="2093" fg:w="1"/><text x="56.6803%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (1 samples, 0.03%)</title><rect x="56.4303%" y="1221" width="0.0270%" height="15" fill="rgb(209,109,2)" fg:x="2093" fg:w="1"/><text x="56.6803%" y="1231.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h38cdf9c9b81600e8E.llvm.8554875322481988541 (1 samples, 0.03%)</title><rect x="56.4303%" y="1205" width="0.0270%" height="15" fill="rgb(252,216,26)" fg:x="2093" fg:w="1"/><text x="56.6803%" y="1215.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17hf293d88640a143a9E.llvm.14389421325859682170 (1 samples, 0.03%)</title><rect x="56.4303%" y="1189" width="0.0270%" height="15" fill="rgb(227,173,36)" fg:x="2093" fg:w="1"/><text x="56.6803%" y="1199.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (1 samples, 0.03%)</title><rect x="56.4303%" y="1173" width="0.0270%" height="15" fill="rgb(209,90,7)" fg:x="2093" fg:w="1"/><text x="56.6803%" y="1183.50"></text></g><g><title>epoll_wait (1 samples, 0.03%)</title><rect x="56.4303%" y="1157" width="0.0270%" height="15" fill="rgb(250,194,11)" fg:x="2093" fg:w="1"/><text x="56.6803%" y="1167.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (1 samples, 0.03%)</title><rect x="56.4303%" y="1141" width="0.0270%" height="15" fill="rgb(220,72,50)" fg:x="2093" fg:w="1"/><text x="56.6803%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="56.5921%" y="1237" width="0.0270%" height="15" fill="rgb(222,106,48)" fg:x="2099" fg:w="1"/><text x="56.8421%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="56.5921%" y="1221" width="0.0270%" height="15" fill="rgb(216,220,45)" fg:x="2099" fg:w="1"/><text x="56.8421%" y="1231.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="56.5921%" y="1205" width="0.0270%" height="15" fill="rgb(234,112,18)" fg:x="2099" fg:w="1"/><text x="56.8421%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (3 samples, 0.08%)</title><rect x="56.6190%" y="1237" width="0.0809%" height="15" fill="rgb(206,179,9)" fg:x="2100" fg:w="3"/><text x="56.8690%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2 samples, 0.05%)</title><rect x="56.6460%" y="1221" width="0.0539%" height="15" fill="rgb(215,115,40)" fg:x="2101" fg:w="2"/><text x="56.8960%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2 samples, 0.05%)</title><rect x="56.6460%" y="1205" width="0.0539%" height="15" fill="rgb(222,69,34)" fg:x="2101" fg:w="2"/><text x="56.8960%" y="1215.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="56.6460%" y="1189" width="0.0539%" height="15" fill="rgb(209,161,10)" fg:x="2101" fg:w="2"/><text x="56.8960%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.05%)</title><rect x="56.6460%" y="1173" width="0.0539%" height="15" fill="rgb(217,6,38)" fg:x="2101" fg:w="2"/><text x="56.8960%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.05%)</title><rect x="56.6460%" y="1157" width="0.0539%" height="15" fill="rgb(229,229,48)" fg:x="2101" fg:w="2"/><text x="56.8960%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.05%)</title><rect x="56.6460%" y="1141" width="0.0539%" height="15" fill="rgb(225,21,28)" fg:x="2101" fg:w="2"/><text x="56.8960%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (1 samples, 0.03%)</title><rect x="56.6999%" y="1237" width="0.0270%" height="15" fill="rgb(206,33,13)" fg:x="2103" fg:w="1"/><text x="56.9499%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (1 samples, 0.03%)</title><rect x="56.6999%" y="1221" width="0.0270%" height="15" fill="rgb(242,178,17)" fg:x="2103" fg:w="1"/><text x="56.9499%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="56.6999%" y="1205" width="0.0270%" height="15" fill="rgb(220,162,5)" fg:x="2103" fg:w="1"/><text x="56.9499%" y="1215.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.03%)</title><rect x="56.6999%" y="1189" width="0.0270%" height="15" fill="rgb(210,33,43)" fg:x="2103" fg:w="1"/><text x="56.9499%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.03%)</title><rect x="56.6999%" y="1173" width="0.0270%" height="15" fill="rgb(216,116,54)" fg:x="2103" fg:w="1"/><text x="56.9499%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.03%)</title><rect x="56.6999%" y="1157" width="0.0270%" height="15" fill="rgb(249,92,24)" fg:x="2103" fg:w="1"/><text x="56.9499%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.03%)</title><rect x="56.6999%" y="1141" width="0.0270%" height="15" fill="rgb(231,189,14)" fg:x="2103" fg:w="1"/><text x="56.9499%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (11 samples, 0.30%)</title><rect x="56.4573%" y="1253" width="0.2966%" height="15" fill="rgb(230,8,41)" fg:x="2094" fg:w="11"/><text x="56.7073%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (1 samples, 0.03%)</title><rect x="56.7269%" y="1237" width="0.0270%" height="15" fill="rgb(249,7,27)" fg:x="2104" fg:w="1"/><text x="56.9769%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (1 samples, 0.03%)</title><rect x="56.7269%" y="1221" width="0.0270%" height="15" fill="rgb(232,86,5)" fg:x="2104" fg:w="1"/><text x="56.9769%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.03%)</title><rect x="56.7269%" y="1205" width="0.0270%" height="15" fill="rgb(224,175,18)" fg:x="2104" fg:w="1"/><text x="56.9769%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.03%)</title><rect x="56.7269%" y="1189" width="0.0270%" height="15" fill="rgb(220,129,12)" fg:x="2104" fg:w="1"/><text x="56.9769%" y="1199.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="56.7269%" y="1173" width="0.0270%" height="15" fill="rgb(210,19,36)" fg:x="2104" fg:w="1"/><text x="56.9769%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.03%)</title><rect x="56.7269%" y="1157" width="0.0270%" height="15" fill="rgb(219,96,14)" fg:x="2104" fg:w="1"/><text x="56.9769%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.03%)</title><rect x="56.7269%" y="1141" width="0.0270%" height="15" fill="rgb(249,106,1)" fg:x="2104" fg:w="1"/><text x="56.9769%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="56.7269%" y="1125" width="0.0270%" height="15" fill="rgb(249,155,20)" fg:x="2104" fg:w="1"/><text x="56.9769%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (1 samples, 0.03%)</title><rect x="56.7808%" y="1237" width="0.0270%" height="15" fill="rgb(244,168,9)" fg:x="2106" fg:w="1"/><text x="57.0308%" y="1247.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.03%)</title><rect x="56.8078%" y="1221" width="0.0270%" height="15" fill="rgb(216,23,50)" fg:x="2107" fg:w="1"/><text x="57.0578%" y="1231.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.03%)</title><rect x="56.8078%" y="1205" width="0.0270%" height="15" fill="rgb(224,219,20)" fg:x="2107" fg:w="1"/><text x="57.0578%" y="1215.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.03%)</title><rect x="56.8078%" y="1189" width="0.0270%" height="15" fill="rgb(222,156,15)" fg:x="2107" fg:w="1"/><text x="57.0578%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (2 samples, 0.05%)</title><rect x="56.8078%" y="1237" width="0.0539%" height="15" fill="rgb(231,97,17)" fg:x="2107" fg:w="2"/><text x="57.0578%" y="1247.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.03%)</title><rect x="56.8347%" y="1221" width="0.0270%" height="15" fill="rgb(218,70,48)" fg:x="2108" fg:w="1"/><text x="57.0847%" y="1231.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.03%)</title><rect x="56.8347%" y="1205" width="0.0270%" height="15" fill="rgb(212,196,52)" fg:x="2108" fg:w="1"/><text x="57.0847%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.03%)</title><rect x="56.8347%" y="1189" width="0.0270%" height="15" fill="rgb(243,203,18)" fg:x="2108" fg:w="1"/><text x="57.0847%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.03%)</title><rect x="56.8347%" y="1173" width="0.0270%" height="15" fill="rgb(252,125,41)" fg:x="2108" fg:w="1"/><text x="57.0847%" y="1183.50"></text></g><g><title>tokio::runtime::park::wake (1 samples, 0.03%)</title><rect x="56.8617%" y="1173" width="0.0270%" height="15" fill="rgb(223,180,33)" fg:x="2109" fg:w="1"/><text x="57.1117%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.03%)</title><rect x="56.8617%" y="1157" width="0.0270%" height="15" fill="rgb(254,159,46)" fg:x="2109" fg:w="1"/><text x="57.1117%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="56.8617%" y="1141" width="0.0270%" height="15" fill="rgb(254,38,10)" fg:x="2109" fg:w="1"/><text x="57.1117%" y="1151.50"></text></g><g><title>clock_gettime (1 samples, 0.03%)</title><rect x="56.8617%" y="1125" width="0.0270%" height="15" fill="rgb(208,217,32)" fg:x="2109" fg:w="1"/><text x="57.1117%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="56.8617%" y="1109" width="0.0270%" height="15" fill="rgb(221,120,13)" fg:x="2109" fg:w="1"/><text x="57.1117%" y="1119.50"></text></g><g><title>_ZN5tokio7runtime2io12scheduled_io11ScheduledIo4wake17hab1f7ccd28a566f6E.llvm.14389421325859682170 (2 samples, 0.05%)</title><rect x="56.8617%" y="1189" width="0.0539%" height="15" fill="rgb(246,54,52)" fg:x="2109" fg:w="2"/><text x="57.1117%" y="1199.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.03%)</title><rect x="56.8886%" y="1173" width="0.0270%" height="15" fill="rgb(242,34,25)" fg:x="2110" fg:w="1"/><text x="57.1386%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.03%)</title><rect x="56.8886%" y="1157" width="0.0270%" height="15" fill="rgb(247,209,9)" fg:x="2110" fg:w="1"/><text x="57.1386%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.03%)</title><rect x="56.8886%" y="1141" width="0.0270%" height="15" fill="rgb(228,71,26)" fg:x="2110" fg:w="1"/><text x="57.1386%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 0.03%)</title><rect x="56.8886%" y="1125" width="0.0270%" height="15" fill="rgb(222,145,49)" fg:x="2110" fg:w="1"/><text x="57.1386%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (1 samples, 0.03%)</title><rect x="56.8886%" y="1109" width="0.0270%" height="15" fill="rgb(218,121,17)" fg:x="2110" fg:w="1"/><text x="57.1386%" y="1119.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="57.0504%" y="1157" width="0.0270%" height="15" fill="rgb(244,50,7)" fg:x="2116" fg:w="1"/><text x="57.3004%" y="1167.50"></text></g><g><title>__switch_to (1 samples, 0.03%)</title><rect x="57.0774%" y="1157" width="0.0270%" height="15" fill="rgb(246,229,37)" fg:x="2117" fg:w="1"/><text x="57.3274%" y="1167.50"></text></g><g><title>__switch_to_asm (1 samples, 0.03%)</title><rect x="57.1043%" y="1157" width="0.0270%" height="15" fill="rgb(225,18,5)" fg:x="2118" fg:w="1"/><text x="57.3543%" y="1167.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="57.4009%" y="1093" width="0.0270%" height="15" fill="rgb(213,204,8)" fg:x="2129" fg:w="1"/><text x="57.6509%" y="1103.50"></text></g><g><title>__put_user_nocheck_4 (2 samples, 0.05%)</title><rect x="57.4279%" y="1093" width="0.0539%" height="15" fill="rgb(238,103,6)" fg:x="2130" fg:w="2"/><text x="57.6779%" y="1103.50"></text></g><g><title>_raw_write_lock_irq (2 samples, 0.05%)</title><rect x="57.4818%" y="1093" width="0.0539%" height="15" fill="rgb(222,25,35)" fg:x="2132" fg:w="2"/><text x="57.7318%" y="1103.50"></text></g><g><title>ep_done_scan (1 samples, 0.03%)</title><rect x="57.5357%" y="1093" width="0.0270%" height="15" fill="rgb(213,203,35)" fg:x="2134" fg:w="1"/><text x="57.7857%" y="1103.50"></text></g><g><title>__pm_relax (1 samples, 0.03%)</title><rect x="57.5357%" y="1077" width="0.0270%" height="15" fill="rgb(221,79,53)" fg:x="2134" fg:w="1"/><text x="57.7857%" y="1087.50"></text></g><g><title>eventfd_poll (1 samples, 0.03%)</title><rect x="57.6166%" y="1077" width="0.0270%" height="15" fill="rgb(243,200,35)" fg:x="2137" fg:w="1"/><text x="57.8666%" y="1087.50"></text></g><g><title>ep_item_poll.isra.0 (6 samples, 0.16%)</title><rect x="57.5627%" y="1093" width="0.1618%" height="15" fill="rgb(248,60,25)" fg:x="2135" fg:w="6"/><text x="57.8127%" y="1103.50"></text></g><g><title>sock_poll (3 samples, 0.08%)</title><rect x="57.6436%" y="1077" width="0.0809%" height="15" fill="rgb(227,53,46)" fg:x="2138" fg:w="3"/><text x="57.8936%" y="1087.50"></text></g><g><title>tcp_poll (1 samples, 0.03%)</title><rect x="57.6975%" y="1061" width="0.0270%" height="15" fill="rgb(216,120,32)" fg:x="2140" fg:w="1"/><text x="57.9475%" y="1071.50"></text></g><g><title>fput (2 samples, 0.05%)</title><rect x="57.7245%" y="1093" width="0.0539%" height="15" fill="rgb(220,134,1)" fg:x="2141" fg:w="2"/><text x="57.9745%" y="1103.50"></text></g><g><title>mutex_lock (2 samples, 0.05%)</title><rect x="57.7784%" y="1093" width="0.0539%" height="15" fill="rgb(237,168,5)" fg:x="2143" fg:w="2"/><text x="58.0284%" y="1103.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="58.1558%" y="1029" width="0.0270%" height="15" fill="rgb(231,100,33)" fg:x="2157" fg:w="1"/><text x="58.4058%" y="1039.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="58.1828%" y="1029" width="0.0270%" height="15" fill="rgb(236,177,47)" fg:x="2158" fg:w="1"/><text x="58.4328%" y="1039.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.08%)</title><rect x="58.1558%" y="1045" width="0.0809%" height="15" fill="rgb(235,7,49)" fg:x="2157" fg:w="3"/><text x="58.4058%" y="1055.50"></text></g><g><title>perf_ctx_disable (1 samples, 0.03%)</title><rect x="58.2098%" y="1029" width="0.0270%" height="15" fill="rgb(232,119,22)" fg:x="2159" fg:w="1"/><text x="58.4598%" y="1039.50"></text></g><g><title>__switch_to (1 samples, 0.03%)</title><rect x="58.2367%" y="1045" width="0.0270%" height="15" fill="rgb(254,73,53)" fg:x="2160" fg:w="1"/><text x="58.4867%" y="1055.50"></text></g><g><title>dequeue_task (2 samples, 0.05%)</title><rect x="58.2637%" y="1045" width="0.0539%" height="15" fill="rgb(251,35,20)" fg:x="2161" fg:w="2"/><text x="58.5137%" y="1055.50"></text></g><g><title>update_curr (2 samples, 0.05%)</title><rect x="58.4255%" y="1013" width="0.0539%" height="15" fill="rgb(241,119,20)" fg:x="2167" fg:w="2"/><text x="58.6755%" y="1023.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.03%)</title><rect x="58.4524%" y="997" width="0.0270%" height="15" fill="rgb(207,102,14)" fg:x="2168" fg:w="1"/><text x="58.7024%" y="1007.50"></text></g><g><title>dequeue_entity (3 samples, 0.08%)</title><rect x="58.4255%" y="1029" width="0.0809%" height="15" fill="rgb(248,201,50)" fg:x="2167" fg:w="3"/><text x="58.6755%" y="1039.50"></text></g><g><title>update_min_vruntime (1 samples, 0.03%)</title><rect x="58.4794%" y="1013" width="0.0270%" height="15" fill="rgb(222,185,44)" fg:x="2169" fg:w="1"/><text x="58.7294%" y="1023.50"></text></g><g><title>avg_vruntime (2 samples, 0.05%)</title><rect x="58.6411%" y="1013" width="0.0539%" height="15" fill="rgb(218,107,18)" fg:x="2175" fg:w="2"/><text x="58.8911%" y="1023.50"></text></g><g><title>reweight_entity (10 samples, 0.27%)</title><rect x="58.5063%" y="1029" width="0.2696%" height="15" fill="rgb(237,177,39)" fg:x="2170" fg:w="10"/><text x="58.7563%" y="1039.50"></text></g><g><title>update_curr (3 samples, 0.08%)</title><rect x="58.6951%" y="1013" width="0.0809%" height="15" fill="rgb(246,69,6)" fg:x="2177" fg:w="3"/><text x="58.9451%" y="1023.50"></text></g><g><title>__calc_delta.constprop.0 (3 samples, 0.08%)</title><rect x="58.6951%" y="997" width="0.0809%" height="15" fill="rgb(234,208,37)" fg:x="2177" fg:w="3"/><text x="58.9451%" y="1007.50"></text></g><g><title>set_next_buddy (3 samples, 0.08%)</title><rect x="58.7760%" y="1029" width="0.0809%" height="15" fill="rgb(225,4,6)" fg:x="2180" fg:w="3"/><text x="59.0260%" y="1039.50"></text></g><g><title>update_cfs_group (2 samples, 0.05%)</title><rect x="58.8568%" y="1029" width="0.0539%" height="15" fill="rgb(233,45,0)" fg:x="2183" fg:w="2"/><text x="59.1068%" y="1039.50"></text></g><g><title>dequeue_task_fair (29 samples, 0.78%)</title><rect x="58.3176%" y="1045" width="0.7819%" height="15" fill="rgb(226,136,5)" fg:x="2163" fg:w="29"/><text x="58.5676%" y="1055.50"></text></g><g><title>update_load_avg (7 samples, 0.19%)</title><rect x="58.9108%" y="1029" width="0.1887%" height="15" fill="rgb(211,91,47)" fg:x="2185" fg:w="7"/><text x="59.1608%" y="1039.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="59.0725%" y="1013" width="0.0270%" height="15" fill="rgb(242,88,51)" fg:x="2191" fg:w="1"/><text x="59.3225%" y="1023.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.05%)</title><rect x="59.2073%" y="1013" width="0.0539%" height="15" fill="rgb(230,91,28)" fg:x="2196" fg:w="2"/><text x="59.4573%" y="1023.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="59.2613%" y="1013" width="0.0270%" height="15" fill="rgb(254,186,29)" fg:x="2198" fg:w="1"/><text x="59.5113%" y="1023.50"></text></g><g><title>__perf_event_task_sched_in (89 samples, 2.40%)</title><rect x="59.1264%" y="1029" width="2.3996%" height="15" fill="rgb(238,6,4)" fg:x="2193" fg:w="89"/><text x="59.3764%" y="1039.50">__..</text></g><g><title>perf_ctx_enable (83 samples, 2.24%)</title><rect x="59.2882%" y="1013" width="2.2378%" height="15" fill="rgb(221,151,16)" fg:x="2199" fg:w="83"/><text x="59.5382%" y="1023.50">p..</text></g><g><title>__intel_pmu_enable_all.isra.0 (83 samples, 2.24%)</title><rect x="59.2882%" y="997" width="2.2378%" height="15" fill="rgb(251,143,52)" fg:x="2199" fg:w="83"/><text x="59.5382%" y="1007.50">_..</text></g><g><title>native_write_msr (83 samples, 2.24%)</title><rect x="59.2882%" y="981" width="2.2378%" height="15" fill="rgb(206,90,15)" fg:x="2199" fg:w="83"/><text x="59.5382%" y="991.50">n..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="61.5260%" y="1029" width="0.0270%" height="15" fill="rgb(218,35,8)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="1039.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="61.5260%" y="1013" width="0.0270%" height="15" fill="rgb(239,215,6)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="1023.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="61.5260%" y="997" width="0.0270%" height="15" fill="rgb(245,116,39)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="1007.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="61.5260%" y="981" width="0.0270%" height="15" fill="rgb(242,65,28)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="991.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="61.5260%" y="965" width="0.0270%" height="15" fill="rgb(252,132,53)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="975.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="61.5260%" y="949" width="0.0270%" height="15" fill="rgb(224,159,50)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="959.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="61.5260%" y="933" width="0.0270%" height="15" fill="rgb(224,93,4)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="943.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="61.5260%" y="917" width="0.0270%" height="15" fill="rgb(208,81,34)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="927.50"></text></g><g><title>account_system_index_time (1 samples, 0.03%)</title><rect x="61.5260%" y="901" width="0.0270%" height="15" fill="rgb(233,92,54)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="911.50"></text></g><g><title>__cgroup_account_cputime_field (1 samples, 0.03%)</title><rect x="61.5260%" y="885" width="0.0270%" height="15" fill="rgb(237,21,14)" fg:x="2282" fg:w="1"/><text x="61.7760%" y="895.50"></text></g><g><title>finish_task_switch.isra.0 (92 samples, 2.48%)</title><rect x="59.0995%" y="1045" width="2.4805%" height="15" fill="rgb(249,128,51)" fg:x="2192" fg:w="92"/><text x="59.3495%" y="1055.50">fi..</text></g><g><title>asm_sysvec_irq_work (1 samples, 0.03%)</title><rect x="61.5530%" y="1029" width="0.0270%" height="15" fill="rgb(223,129,24)" fg:x="2283" fg:w="1"/><text x="61.8030%" y="1039.50"></text></g><g><title>pick_next_entity.isra.0 (3 samples, 0.08%)</title><rect x="61.6069%" y="1029" width="0.0809%" height="15" fill="rgb(231,168,25)" fg:x="2285" fg:w="3"/><text x="61.8569%" y="1039.50"></text></g><g><title>__pick_eevdf (2 samples, 0.05%)</title><rect x="61.6339%" y="1013" width="0.0539%" height="15" fill="rgb(224,39,20)" fg:x="2286" fg:w="2"/><text x="61.8839%" y="1023.50"></text></g><g><title>__dequeue_entity (3 samples, 0.08%)</title><rect x="61.7147%" y="1013" width="0.0809%" height="15" fill="rgb(225,152,53)" fg:x="2289" fg:w="3"/><text x="61.9647%" y="1023.50"></text></g><g><title>__rb_erase_color (1 samples, 0.03%)</title><rect x="61.7687%" y="997" width="0.0270%" height="15" fill="rgb(252,17,24)" fg:x="2291" fg:w="1"/><text x="62.0187%" y="1007.50"></text></g><g><title>pick_next_task_fair (10 samples, 0.27%)</title><rect x="61.5799%" y="1045" width="0.2696%" height="15" fill="rgb(250,114,30)" fg:x="2284" fg:w="10"/><text x="61.8299%" y="1055.50"></text></g><g><title>set_next_entity (6 samples, 0.16%)</title><rect x="61.6878%" y="1029" width="0.1618%" height="15" fill="rgb(229,5,4)" fg:x="2288" fg:w="6"/><text x="61.9378%" y="1039.50"></text></g><g><title>update_load_avg (2 samples, 0.05%)</title><rect x="61.7956%" y="1013" width="0.0539%" height="15" fill="rgb(225,176,49)" fg:x="2292" fg:w="2"/><text x="62.0456%" y="1023.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="61.8226%" y="997" width="0.0270%" height="15" fill="rgb(224,221,49)" fg:x="2293" fg:w="1"/><text x="62.0726%" y="1007.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.03%)</title><rect x="61.8496%" y="1045" width="0.0270%" height="15" fill="rgb(253,169,27)" fg:x="2294" fg:w="1"/><text x="62.0996%" y="1055.50"></text></g><g><title>psi_flags_change (1 samples, 0.03%)</title><rect x="61.9035%" y="1029" width="0.0270%" height="15" fill="rgb(211,206,16)" fg:x="2296" fg:w="1"/><text x="62.1535%" y="1039.50"></text></g><g><title>psi_task_switch (8 samples, 0.22%)</title><rect x="61.8765%" y="1045" width="0.2157%" height="15" fill="rgb(244,87,35)" fg:x="2295" fg:w="8"/><text x="62.1265%" y="1055.50"></text></g><g><title>psi_group_change (6 samples, 0.16%)</title><rect x="61.9304%" y="1029" width="0.1618%" height="15" fill="rgb(246,28,10)" fg:x="2297" fg:w="6"/><text x="62.1804%" y="1039.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.03%)</title><rect x="62.0922%" y="1045" width="0.0270%" height="15" fill="rgb(229,12,44)" fg:x="2303" fg:w="1"/><text x="62.3422%" y="1055.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="62.0922%" y="1029" width="0.0270%" height="15" fill="rgb(210,145,37)" fg:x="2303" fg:w="1"/><text x="62.3422%" y="1039.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="62.0922%" y="1013" width="0.0270%" height="15" fill="rgb(227,112,52)" fg:x="2303" fg:w="1"/><text x="62.3422%" y="1023.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="62.1461%" y="1029" width="0.0270%" height="15" fill="rgb(238,155,34)" fg:x="2305" fg:w="1"/><text x="62.3961%" y="1039.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="62.1461%" y="1013" width="0.0270%" height="15" fill="rgb(239,226,36)" fg:x="2305" fg:w="1"/><text x="62.3961%" y="1023.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="62.1461%" y="997" width="0.0270%" height="15" fill="rgb(230,16,23)" fg:x="2305" fg:w="1"/><text x="62.3961%" y="1007.50"></text></g><g><title>__x64_sys_epoll_wait (181 samples, 4.88%)</title><rect x="57.3200%" y="1125" width="4.8800%" height="15" fill="rgb(236,171,36)" fg:x="2126" fg:w="181"/><text x="57.5700%" y="1135.50">__x64_..</text></g><g><title>do_epoll_wait (180 samples, 4.85%)</title><rect x="57.3470%" y="1109" width="4.8531%" height="15" fill="rgb(221,22,14)" fg:x="2127" fg:w="180"/><text x="57.5970%" y="1119.50">do_epo..</text></g><g><title>schedule_hrtimeout_range_clock (162 samples, 4.37%)</title><rect x="57.8323%" y="1093" width="4.3678%" height="15" fill="rgb(242,43,11)" fg:x="2145" fg:w="162"/><text x="58.0823%" y="1103.50">sched..</text></g><g><title>schedule (159 samples, 4.29%)</title><rect x="57.9132%" y="1077" width="4.2869%" height="15" fill="rgb(232,69,23)" fg:x="2148" fg:w="159"/><text x="58.1632%" y="1087.50">sched..</text></g><g><title>__schedule (155 samples, 4.18%)</title><rect x="58.0210%" y="1061" width="4.1790%" height="15" fill="rgb(216,180,54)" fg:x="2152" fg:w="155"/><text x="58.2710%" y="1071.50">__sch..</text></g><g><title>update_rq_clock (3 samples, 0.08%)</title><rect x="62.1192%" y="1045" width="0.0809%" height="15" fill="rgb(216,5,24)" fg:x="2304" fg:w="3"/><text x="62.3692%" y="1055.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.03%)</title><rect x="62.1731%" y="1029" width="0.0270%" height="15" fill="rgb(225,89,9)" fg:x="2306" fg:w="1"/><text x="62.4231%" y="1039.50"></text></g><g><title>__rseq_handle_notify_resume (2 samples, 0.05%)</title><rect x="62.2540%" y="1093" width="0.0539%" height="15" fill="rgb(243,75,33)" fg:x="2309" fg:w="2"/><text x="62.5040%" y="1103.50"></text></g><g><title>__get_user_8 (2 samples, 0.05%)</title><rect x="62.2540%" y="1077" width="0.0539%" height="15" fill="rgb(247,141,45)" fg:x="2309" fg:w="2"/><text x="62.5040%" y="1087.50"></text></g><g><title>blkcg_maybe_throttle_current (1 samples, 0.03%)</title><rect x="62.3079%" y="1093" width="0.0270%" height="15" fill="rgb(232,177,36)" fg:x="2311" fg:w="1"/><text x="62.5579%" y="1103.50"></text></g><g><title>entry_SYSCALL_64 (195 samples, 5.26%)</title><rect x="57.1313%" y="1157" width="5.2575%" height="15" fill="rgb(219,125,36)" fg:x="2119" fg:w="195"/><text x="57.3813%" y="1167.50">entry_..</text></g><g><title>do_syscall_64 (189 samples, 5.10%)</title><rect x="57.2931%" y="1141" width="5.0957%" height="15" fill="rgb(227,94,9)" fg:x="2125" fg:w="189"/><text x="57.5431%" y="1151.50">do_sys..</text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.19%)</title><rect x="62.2001%" y="1125" width="0.1887%" height="15" fill="rgb(240,34,52)" fg:x="2307" fg:w="7"/><text x="62.4501%" y="1135.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.16%)</title><rect x="62.2270%" y="1109" width="0.1618%" height="15" fill="rgb(216,45,12)" fg:x="2308" fg:w="6"/><text x="62.4770%" y="1119.50"></text></g><g><title>switch_fpu_return (2 samples, 0.05%)</title><rect x="62.3349%" y="1093" width="0.0539%" height="15" fill="rgb(246,21,19)" fg:x="2312" fg:w="2"/><text x="62.5849%" y="1103.50"></text></g><g><title>restore_fpregs_from_fpstate (2 samples, 0.05%)</title><rect x="62.3349%" y="1077" width="0.0539%" height="15" fill="rgb(213,98,42)" fg:x="2312" fg:w="2"/><text x="62.5849%" y="1087.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (4 samples, 0.11%)</title><rect x="62.3888%" y="1157" width="0.1078%" height="15" fill="rgb(250,136,47)" fg:x="2314" fg:w="4"/><text x="62.6388%" y="1167.50"></text></g><g><title>save_fpregs_to_fpstate (3 samples, 0.08%)</title><rect x="62.4966%" y="1157" width="0.0809%" height="15" fill="rgb(251,124,27)" fg:x="2318" fg:w="3"/><text x="62.7466%" y="1167.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (216 samples, 5.82%)</title><rect x="56.9156%" y="1189" width="5.8237%" height="15" fill="rgb(229,180,14)" fg:x="2111" fg:w="216"/><text x="57.1656%" y="1199.50">mio::sy..</text></g><g><title>epoll_wait (213 samples, 5.74%)</title><rect x="56.9965%" y="1173" width="5.7428%" height="15" fill="rgb(245,216,25)" fg:x="2114" fg:w="213"/><text x="57.2465%" y="1183.50">epoll_w..</text></g><g><title>syscall_return_via_sysret (6 samples, 0.16%)</title><rect x="62.5775%" y="1157" width="0.1618%" height="15" fill="rgb(251,43,5)" fg:x="2321" fg:w="6"/><text x="62.8275%" y="1167.50"></text></g><g><title>core::mem::drop (1 samples, 0.03%)</title><rect x="62.7393%" y="1173" width="0.0270%" height="15" fill="rgb(250,128,24)" fg:x="2327" fg:w="1"/><text x="62.9893%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (1 samples, 0.03%)</title><rect x="62.7393%" y="1157" width="0.0270%" height="15" fill="rgb(217,117,27)" fg:x="2327" fg:w="1"/><text x="62.9893%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (1 samples, 0.03%)</title><rect x="62.7393%" y="1141" width="0.0270%" height="15" fill="rgb(245,147,4)" fg:x="2327" fg:w="1"/><text x="62.9893%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="62.7393%" y="1125" width="0.0270%" height="15" fill="rgb(242,201,35)" fg:x="2327" fg:w="1"/><text x="62.9893%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.03%)</title><rect x="62.7393%" y="1109" width="0.0270%" height="15" fill="rgb(218,181,1)" fg:x="2327" fg:w="1"/><text x="62.9893%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.03%)</title><rect x="62.7393%" y="1093" width="0.0270%" height="15" fill="rgb(222,6,29)" fg:x="2327" fg:w="1"/><text x="62.9893%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="62.7393%" y="1077" width="0.0270%" height="15" fill="rgb(208,186,3)" fg:x="2327" fg:w="1"/><text x="62.9893%" y="1087.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (1 samples, 0.03%)</title><rect x="62.7662%" y="1173" width="0.0270%" height="15" fill="rgb(216,36,26)" fg:x="2328" fg:w="1"/><text x="63.0162%" y="1183.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17hf293d88640a143a9E.llvm.14389421325859682170 (221 samples, 5.96%)</title><rect x="56.8617%" y="1205" width="5.9585%" height="15" fill="rgb(248,201,23)" fg:x="2109" fg:w="221"/><text x="57.1117%" y="1215.50">_ZN5toki..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (3 samples, 0.08%)</title><rect x="62.7393%" y="1189" width="0.0809%" height="15" fill="rgb(251,170,31)" fg:x="2327" fg:w="3"/><text x="62.9893%" y="1199.50"></text></g><g><title>tokio::util::wake_list::WakeList::push (1 samples, 0.03%)</title><rect x="62.7932%" y="1173" width="0.0270%" height="15" fill="rgb(207,110,25)" fg:x="2329" fg:w="1"/><text x="63.0432%" y="1183.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (3 samples, 0.08%)</title><rect x="62.8202%" y="1205" width="0.0809%" height="15" fill="rgb(250,54,15)" fg:x="2330" fg:w="3"/><text x="63.0702%" y="1215.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="62.8741%" y="1189" width="0.0270%" height="15" fill="rgb(227,68,33)" fg:x="2332" fg:w="1"/><text x="63.1241%" y="1199.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.03%)</title><rect x="62.8741%" y="1173" width="0.0270%" height="15" fill="rgb(238,34,41)" fg:x="2332" fg:w="1"/><text x="63.1241%" y="1183.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.03%)</title><rect x="62.8741%" y="1157" width="0.0270%" height="15" fill="rgb(220,11,15)" fg:x="2332" fg:w="1"/><text x="63.1241%" y="1167.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h38cdf9c9b81600e8E.llvm.8554875322481988541 (225 samples, 6.07%)</title><rect x="56.8617%" y="1221" width="6.0663%" height="15" fill="rgb(246,111,35)" fg:x="2109" fg:w="225"/><text x="57.1117%" y="1231.50">_ZN5toki..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.03%)</title><rect x="62.9011%" y="1205" width="0.0270%" height="15" fill="rgb(209,88,53)" fg:x="2333" fg:w="1"/><text x="63.1511%" y="1215.50"></text></g><g><title>epoll_wait (1 samples, 0.03%)</title><rect x="62.9011%" y="1189" width="0.0270%" height="15" fill="rgb(231,185,47)" fg:x="2333" fg:w="1"/><text x="63.1511%" y="1199.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="62.9011%" y="1173" width="0.0270%" height="15" fill="rgb(233,154,1)" fg:x="2333" fg:w="1"/><text x="63.1511%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.05%)</title><rect x="63.0089%" y="1205" width="0.0539%" height="15" fill="rgb(225,15,46)" fg:x="2337" fg:w="2"/><text x="63.2589%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.05%)</title><rect x="63.0089%" y="1189" width="0.0539%" height="15" fill="rgb(211,135,41)" fg:x="2337" fg:w="2"/><text x="63.2589%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.05%)</title><rect x="63.0089%" y="1173" width="0.0539%" height="15" fill="rgb(208,54,0)" fg:x="2337" fg:w="2"/><text x="63.2589%" y="1183.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (2 samples, 0.05%)</title><rect x="63.0628%" y="1157" width="0.0539%" height="15" fill="rgb(244,136,14)" fg:x="2339" fg:w="2"/><text x="63.3128%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (2 samples, 0.05%)</title><rect x="63.0628%" y="1141" width="0.0539%" height="15" fill="rgb(241,56,14)" fg:x="2339" fg:w="2"/><text x="63.3128%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.05%)</title><rect x="63.0628%" y="1125" width="0.0539%" height="15" fill="rgb(205,80,24)" fg:x="2339" fg:w="2"/><text x="63.3128%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.11%)</title><rect x="63.0628%" y="1205" width="0.1078%" height="15" fill="rgb(220,57,4)" fg:x="2339" fg:w="4"/><text x="63.3128%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.11%)</title><rect x="63.0628%" y="1189" width="0.1078%" height="15" fill="rgb(226,193,50)" fg:x="2339" fg:w="4"/><text x="63.3128%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (4 samples, 0.11%)</title><rect x="63.0628%" y="1173" width="0.1078%" height="15" fill="rgb(231,168,22)" fg:x="2339" fg:w="4"/><text x="63.3128%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (2 samples, 0.05%)</title><rect x="63.1167%" y="1157" width="0.0539%" height="15" fill="rgb(254,215,14)" fg:x="2341" fg:w="2"/><text x="63.3667%" y="1167.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (1 samples, 0.03%)</title><rect x="63.1437%" y="1141" width="0.0270%" height="15" fill="rgb(211,115,16)" fg:x="2342" fg:w="1"/><text x="63.3937%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.03%)</title><rect x="63.1437%" y="1125" width="0.0270%" height="15" fill="rgb(236,210,16)" fg:x="2342" fg:w="1"/><text x="63.3937%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.03%)</title><rect x="63.1437%" y="1109" width="0.0270%" height="15" fill="rgb(221,94,12)" fg:x="2342" fg:w="1"/><text x="63.3937%" y="1119.50"></text></g><g><title>futex_unqueue (1 samples, 0.03%)</title><rect x="63.3055%" y="1109" width="0.0270%" height="15" fill="rgb(235,218,49)" fg:x="2348" fg:w="1"/><text x="63.5555%" y="1119.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="63.4942%" y="1045" width="0.0270%" height="15" fill="rgb(217,114,14)" fg:x="2355" fg:w="1"/><text x="63.7442%" y="1055.50"></text></g><g><title>perf_ctx_disable (1 samples, 0.03%)</title><rect x="63.5212%" y="1045" width="0.0270%" height="15" fill="rgb(216,145,22)" fg:x="2356" fg:w="1"/><text x="63.7712%" y="1055.50"></text></g><g><title>__perf_event_task_sched_out (5 samples, 0.13%)</title><rect x="63.4403%" y="1061" width="0.1348%" height="15" fill="rgb(217,112,39)" fg:x="2353" fg:w="5"/><text x="63.6903%" y="1071.50"></text></g><g><title>perf_ctx_enable (1 samples, 0.03%)</title><rect x="63.5481%" y="1045" width="0.0270%" height="15" fill="rgb(225,85,32)" fg:x="2357" fg:w="1"/><text x="63.7981%" y="1055.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (1 samples, 0.03%)</title><rect x="63.5481%" y="1029" width="0.0270%" height="15" fill="rgb(245,209,47)" fg:x="2357" fg:w="1"/><text x="63.7981%" y="1039.50"></text></g><g><title>dequeue_task (1 samples, 0.03%)</title><rect x="63.5751%" y="1061" width="0.0270%" height="15" fill="rgb(218,220,15)" fg:x="2358" fg:w="1"/><text x="63.8251%" y="1071.50"></text></g><g><title>update_cfs_group (1 samples, 0.03%)</title><rect x="63.6560%" y="1029" width="0.0270%" height="15" fill="rgb(222,202,31)" fg:x="2361" fg:w="1"/><text x="63.9060%" y="1039.50"></text></g><g><title>update_curr (6 samples, 0.16%)</title><rect x="63.6829%" y="1029" width="0.1618%" height="15" fill="rgb(243,203,4)" fg:x="2362" fg:w="6"/><text x="63.9329%" y="1039.50"></text></g><g><title>update_min_vruntime (1 samples, 0.03%)</title><rect x="63.8177%" y="1013" width="0.0270%" height="15" fill="rgb(237,92,17)" fg:x="2367" fg:w="1"/><text x="64.0677%" y="1023.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.05%)</title><rect x="63.8447%" y="1013" width="0.0539%" height="15" fill="rgb(231,119,7)" fg:x="2368" fg:w="2"/><text x="64.0947%" y="1023.50"></text></g><g><title>update_load_avg (3 samples, 0.08%)</title><rect x="63.8447%" y="1029" width="0.0809%" height="15" fill="rgb(237,82,41)" fg:x="2368" fg:w="3"/><text x="64.0947%" y="1039.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="63.8986%" y="1013" width="0.0270%" height="15" fill="rgb(226,81,48)" fg:x="2370" fg:w="1"/><text x="64.1486%" y="1023.50"></text></g><g><title>dequeue_entity (14 samples, 0.38%)</title><rect x="63.6020%" y="1045" width="0.3775%" height="15" fill="rgb(234,70,51)" fg:x="2359" fg:w="14"/><text x="63.8520%" y="1055.50"></text></g><g><title>update_min_vruntime (2 samples, 0.05%)</title><rect x="63.9256%" y="1029" width="0.0539%" height="15" fill="rgb(251,86,4)" fg:x="2371" fg:w="2"/><text x="64.1756%" y="1039.50"></text></g><g><title>reweight_entity (8 samples, 0.22%)</title><rect x="63.9795%" y="1045" width="0.2157%" height="15" fill="rgb(244,144,28)" fg:x="2373" fg:w="8"/><text x="64.2295%" y="1055.50"></text></g><g><title>update_curr (3 samples, 0.08%)</title><rect x="64.1143%" y="1029" width="0.0809%" height="15" fill="rgb(232,161,39)" fg:x="2378" fg:w="3"/><text x="64.3643%" y="1039.50"></text></g><g><title>__calc_delta.constprop.0 (3 samples, 0.08%)</title><rect x="64.1143%" y="1013" width="0.0809%" height="15" fill="rgb(247,34,51)" fg:x="2378" fg:w="3"/><text x="64.3643%" y="1023.50"></text></g><g><title>set_next_buddy (3 samples, 0.08%)</title><rect x="64.1952%" y="1045" width="0.0809%" height="15" fill="rgb(225,132,2)" fg:x="2381" fg:w="3"/><text x="64.4452%" y="1055.50"></text></g><g><title>update_cfs_group (2 samples, 0.05%)</title><rect x="64.2761%" y="1045" width="0.0539%" height="15" fill="rgb(209,159,44)" fg:x="2384" fg:w="2"/><text x="64.5261%" y="1055.50"></text></g><g><title>dequeue_task_fair (30 samples, 0.81%)</title><rect x="63.6020%" y="1061" width="0.8088%" height="15" fill="rgb(251,214,1)" fg:x="2359" fg:w="30"/><text x="63.8520%" y="1071.50"></text></g><g><title>update_load_avg (3 samples, 0.08%)</title><rect x="64.3300%" y="1045" width="0.0809%" height="15" fill="rgb(247,84,47)" fg:x="2386" fg:w="3"/><text x="64.5800%" y="1055.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="64.3839%" y="1029" width="0.0270%" height="15" fill="rgb(240,111,43)" fg:x="2388" fg:w="1"/><text x="64.6339%" y="1039.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="64.4648%" y="1029" width="0.0270%" height="15" fill="rgb(215,214,35)" fg:x="2391" fg:w="1"/><text x="64.7148%" y="1039.50"></text></g><g><title>finish_task_switch.isra.0 (56 samples, 1.51%)</title><rect x="64.4109%" y="1061" width="1.5098%" height="15" fill="rgb(248,207,23)" fg:x="2389" fg:w="56"/><text x="64.6609%" y="1071.50"></text></g><g><title>__perf_event_task_sched_in (56 samples, 1.51%)</title><rect x="64.4109%" y="1045" width="1.5098%" height="15" fill="rgb(214,186,4)" fg:x="2389" fg:w="56"/><text x="64.6609%" y="1055.50"></text></g><g><title>perf_ctx_enable (53 samples, 1.43%)</title><rect x="64.4918%" y="1029" width="1.4290%" height="15" fill="rgb(220,133,22)" fg:x="2392" fg:w="53"/><text x="64.7418%" y="1039.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (51 samples, 1.38%)</title><rect x="64.5457%" y="1013" width="1.3750%" height="15" fill="rgb(239,134,19)" fg:x="2394" fg:w="51"/><text x="64.7957%" y="1023.50"></text></g><g><title>native_write_msr (51 samples, 1.38%)</title><rect x="64.5457%" y="997" width="1.3750%" height="15" fill="rgb(250,140,9)" fg:x="2394" fg:w="51"/><text x="64.7957%" y="1007.50"></text></g><g><title>pick_next_entity.isra.0 (3 samples, 0.08%)</title><rect x="66.1364%" y="1045" width="0.0809%" height="15" fill="rgb(225,59,14)" fg:x="2453" fg:w="3"/><text x="66.3864%" y="1055.50"></text></g><g><title>__pick_eevdf (2 samples, 0.05%)</title><rect x="66.1634%" y="1029" width="0.0539%" height="15" fill="rgb(214,152,51)" fg:x="2454" fg:w="2"/><text x="66.4134%" y="1039.50"></text></g><g><title>__dequeue_entity (1 samples, 0.03%)</title><rect x="66.2712%" y="1029" width="0.0270%" height="15" fill="rgb(251,227,43)" fg:x="2458" fg:w="1"/><text x="66.5212%" y="1039.50"></text></g><g><title>pick_next_task_fair (16 samples, 0.43%)</title><rect x="65.9207%" y="1061" width="0.4314%" height="15" fill="rgb(241,96,17)" fg:x="2445" fg:w="16"/><text x="66.1707%" y="1071.50"></text></g><g><title>set_next_entity (5 samples, 0.13%)</title><rect x="66.2173%" y="1045" width="0.1348%" height="15" fill="rgb(234,198,43)" fg:x="2456" fg:w="5"/><text x="66.4673%" y="1055.50"></text></g><g><title>update_load_avg (2 samples, 0.05%)</title><rect x="66.2982%" y="1029" width="0.0539%" height="15" fill="rgb(220,108,29)" fg:x="2459" fg:w="2"/><text x="66.5482%" y="1039.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="66.3252%" y="1013" width="0.0270%" height="15" fill="rgb(226,163,33)" fg:x="2460" fg:w="1"/><text x="66.5752%" y="1023.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.03%)</title><rect x="66.3521%" y="1061" width="0.0270%" height="15" fill="rgb(205,194,45)" fg:x="2461" fg:w="1"/><text x="66.6021%" y="1071.50"></text></g><g><title>psi_flags_change (1 samples, 0.03%)</title><rect x="66.3791%" y="1045" width="0.0270%" height="15" fill="rgb(206,143,44)" fg:x="2462" fg:w="1"/><text x="66.6291%" y="1055.50"></text></g><g><title>psi_task_switch (15 samples, 0.40%)</title><rect x="66.3791%" y="1061" width="0.4044%" height="15" fill="rgb(236,136,36)" fg:x="2462" fg:w="15"/><text x="66.6291%" y="1071.50"></text></g><g><title>psi_group_change (14 samples, 0.38%)</title><rect x="66.4060%" y="1045" width="0.3775%" height="15" fill="rgb(249,172,42)" fg:x="2463" fg:w="14"/><text x="66.6560%" y="1055.50"></text></g><g><title>record_times (1 samples, 0.03%)</title><rect x="66.7565%" y="1029" width="0.0270%" height="15" fill="rgb(216,139,23)" fg:x="2476" fg:w="1"/><text x="67.0065%" y="1039.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="66.7835%" y="1061" width="0.0270%" height="15" fill="rgb(207,166,20)" fg:x="2477" fg:w="1"/><text x="67.0335%" y="1071.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="66.8644%" y="1045" width="0.0270%" height="15" fill="rgb(210,209,22)" fg:x="2480" fg:w="1"/><text x="67.1144%" y="1055.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="66.8644%" y="1029" width="0.0270%" height="15" fill="rgb(232,118,20)" fg:x="2480" fg:w="1"/><text x="67.1144%" y="1039.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="66.8644%" y="1013" width="0.0270%" height="15" fill="rgb(238,113,42)" fg:x="2480" fg:w="1"/><text x="67.1144%" y="1023.50"></text></g><g><title>futex_wait_queue (133 samples, 3.59%)</title><rect x="63.3324%" y="1109" width="3.5859%" height="15" fill="rgb(231,42,5)" fg:x="2349" fg:w="133"/><text x="63.5824%" y="1119.50">fute..</text></g><g><title>schedule (133 samples, 3.59%)</title><rect x="63.3324%" y="1093" width="3.5859%" height="15" fill="rgb(243,166,24)" fg:x="2349" fg:w="133"/><text x="63.5824%" y="1103.50">sche..</text></g><g><title>__schedule (131 samples, 3.53%)</title><rect x="63.3864%" y="1077" width="3.5319%" height="15" fill="rgb(237,226,12)" fg:x="2351" fg:w="131"/><text x="63.6364%" y="1087.50">__s..</text></g><g><title>update_rq_clock (4 samples, 0.11%)</title><rect x="66.8105%" y="1061" width="0.1078%" height="15" fill="rgb(229,133,24)" fg:x="2478" fg:w="4"/><text x="67.0605%" y="1071.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.03%)</title><rect x="66.8913%" y="1045" width="0.0270%" height="15" fill="rgb(238,33,43)" fg:x="2481" fg:w="1"/><text x="67.1413%" y="1055.50"></text></g><g><title>futex_get_value_locked (2 samples, 0.05%)</title><rect x="66.9183%" y="1093" width="0.0539%" height="15" fill="rgb(227,59,38)" fg:x="2482" fg:w="2"/><text x="67.1683%" y="1103.50"></text></g><g><title>__get_user_nocheck_4 (1 samples, 0.03%)</title><rect x="66.9453%" y="1077" width="0.0270%" height="15" fill="rgb(230,97,0)" fg:x="2483" fg:w="1"/><text x="67.1953%" y="1087.50"></text></g><g><title>futex_q_lock (3 samples, 0.08%)</title><rect x="66.9722%" y="1093" width="0.0809%" height="15" fill="rgb(250,173,50)" fg:x="2484" fg:w="3"/><text x="67.2222%" y="1103.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="67.0262%" y="1077" width="0.0270%" height="15" fill="rgb(240,15,50)" fg:x="2486" fg:w="1"/><text x="67.2762%" y="1087.50"></text></g><g><title>__x64_sys_futex (142 samples, 3.83%)</title><rect x="63.2516%" y="1157" width="3.8285%" height="15" fill="rgb(221,93,22)" fg:x="2346" fg:w="142"/><text x="63.5016%" y="1167.50">__x6..</text></g><g><title>do_futex (142 samples, 3.83%)</title><rect x="63.2516%" y="1141" width="3.8285%" height="15" fill="rgb(245,180,53)" fg:x="2346" fg:w="142"/><text x="63.5016%" y="1151.50">do_f..</text></g><g><title>futex_wait (141 samples, 3.80%)</title><rect x="63.2785%" y="1125" width="3.8016%" height="15" fill="rgb(231,88,51)" fg:x="2347" fg:w="141"/><text x="63.5285%" y="1135.50">fute..</text></g><g><title>futex_wait_setup (6 samples, 0.16%)</title><rect x="66.9183%" y="1109" width="0.1618%" height="15" fill="rgb(240,58,21)" fg:x="2482" fg:w="6"/><text x="67.1683%" y="1119.50"></text></g><g><title>get_futex_key (1 samples, 0.03%)</title><rect x="67.0531%" y="1093" width="0.0270%" height="15" fill="rgb(237,21,10)" fg:x="2487" fg:w="1"/><text x="67.3031%" y="1103.50"></text></g><g><title>__rseq_handle_notify_resume (5 samples, 0.13%)</title><rect x="67.2418%" y="1125" width="0.1348%" height="15" fill="rgb(218,43,11)" fg:x="2494" fg:w="5"/><text x="67.4918%" y="1135.50"></text></g><g><title>__get_user_8 (3 samples, 0.08%)</title><rect x="67.2958%" y="1109" width="0.0809%" height="15" fill="rgb(218,221,29)" fg:x="2496" fg:w="3"/><text x="67.5458%" y="1119.50"></text></g><g><title>syscall_exit_to_user_mode (16 samples, 0.43%)</title><rect x="67.0801%" y="1157" width="0.4314%" height="15" fill="rgb(214,118,42)" fg:x="2488" fg:w="16"/><text x="67.3301%" y="1167.50"></text></g><g><title>exit_to_user_mode_prepare (16 samples, 0.43%)</title><rect x="67.0801%" y="1141" width="0.4314%" height="15" fill="rgb(251,200,26)" fg:x="2488" fg:w="16"/><text x="67.3301%" y="1151.50"></text></g><g><title>switch_fpu_return (5 samples, 0.13%)</title><rect x="67.3767%" y="1125" width="0.1348%" height="15" fill="rgb(237,101,39)" fg:x="2499" fg:w="5"/><text x="67.6267%" y="1135.50"></text></g><g><title>restore_fpregs_from_fpstate (4 samples, 0.11%)</title><rect x="67.4036%" y="1109" width="0.1078%" height="15" fill="rgb(251,117,11)" fg:x="2500" fg:w="4"/><text x="67.6536%" y="1119.50"></text></g><g><title>entry_SYSCALL_64 (162 samples, 4.37%)</title><rect x="63.1707%" y="1189" width="4.3678%" height="15" fill="rgb(216,223,23)" fg:x="2343" fg:w="162"/><text x="63.4207%" y="1199.50">entry..</text></g><g><title>do_syscall_64 (160 samples, 4.31%)</title><rect x="63.2246%" y="1173" width="4.3138%" height="15" fill="rgb(251,54,12)" fg:x="2345" fg:w="160"/><text x="63.4746%" y="1183.50">do_sy..</text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="67.5115%" y="1157" width="0.0270%" height="15" fill="rgb(254,176,54)" fg:x="2504" fg:w="1"/><text x="67.7615%" y="1167.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (9 samples, 0.24%)</title><rect x="67.5384%" y="1189" width="0.2427%" height="15" fill="rgb(210,32,8)" fg:x="2505" fg:w="9"/><text x="67.7884%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (188 samples, 5.07%)</title><rect x="62.9280%" y="1221" width="5.0688%" height="15" fill="rgb(235,52,38)" fg:x="2334" fg:w="188"/><text x="63.1780%" y="1231.50">parkin..</text></g><g><title>syscall (179 samples, 4.83%)</title><rect x="63.1707%" y="1205" width="4.8261%" height="15" fill="rgb(231,4,44)" fg:x="2343" fg:w="179"/><text x="63.4207%" y="1215.50">syscall</text></g><g><title>syscall_return_via_sysret (8 samples, 0.22%)</title><rect x="67.7811%" y="1189" width="0.2157%" height="15" fill="rgb(249,2,32)" fg:x="2514" fg:w="8"/><text x="68.0311%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.05%)</title><rect x="68.0237%" y="1189" width="0.0539%" height="15" fill="rgb(224,65,26)" fg:x="2523" fg:w="2"/><text x="68.2737%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.05%)</title><rect x="68.0237%" y="1173" width="0.0539%" height="15" fill="rgb(250,73,40)" fg:x="2523" fg:w="2"/><text x="68.2737%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (4 samples, 0.11%)</title><rect x="67.9968%" y="1205" width="0.1078%" height="15" fill="rgb(253,177,16)" fg:x="2522" fg:w="4"/><text x="68.2468%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="68.0776%" y="1189" width="0.0270%" height="15" fill="rgb(217,32,34)" fg:x="2525" fg:w="1"/><text x="68.3276%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (6 samples, 0.16%)</title><rect x="67.9968%" y="1221" width="0.1618%" height="15" fill="rgb(212,7,10)" fg:x="2522" fg:w="6"/><text x="68.2468%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (2 samples, 0.05%)</title><rect x="68.1046%" y="1205" width="0.0539%" height="15" fill="rgb(245,89,8)" fg:x="2526" fg:w="2"/><text x="68.3546%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.05%)</title><rect x="68.1046%" y="1189" width="0.0539%" height="15" fill="rgb(237,16,53)" fg:x="2526" fg:w="2"/><text x="68.3546%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.05%)</title><rect x="68.1046%" y="1173" width="0.0539%" height="15" fill="rgb(250,204,30)" fg:x="2526" fg:w="2"/><text x="68.3546%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (2 samples, 0.05%)</title><rect x="68.2125%" y="1205" width="0.0539%" height="15" fill="rgb(208,77,27)" fg:x="2530" fg:w="2"/><text x="68.4625%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2 samples, 0.05%)</title><rect x="68.2125%" y="1189" width="0.0539%" height="15" fill="rgb(250,204,28)" fg:x="2530" fg:w="2"/><text x="68.4625%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2 samples, 0.05%)</title><rect x="68.2125%" y="1173" width="0.0539%" height="15" fill="rgb(244,63,21)" fg:x="2530" fg:w="2"/><text x="68.4625%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="68.2125%" y="1157" width="0.0539%" height="15" fill="rgb(236,85,44)" fg:x="2530" fg:w="2"/><text x="68.4625%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (2 samples, 0.05%)</title><rect x="68.2125%" y="1141" width="0.0539%" height="15" fill="rgb(215,98,4)" fg:x="2530" fg:w="2"/><text x="68.4625%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="68.2125%" y="1125" width="0.0539%" height="15" fill="rgb(235,38,11)" fg:x="2530" fg:w="2"/><text x="68.4625%" y="1135.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (2 samples, 0.05%)</title><rect x="68.2125%" y="1109" width="0.0539%" height="15" fill="rgb(254,186,25)" fg:x="2530" fg:w="2"/><text x="68.4625%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (2 samples, 0.05%)</title><rect x="68.2125%" y="1093" width="0.0539%" height="15" fill="rgb(225,55,31)" fg:x="2530" fg:w="2"/><text x="68.4625%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.05%)</title><rect x="68.2125%" y="1077" width="0.0539%" height="15" fill="rgb(211,15,21)" fg:x="2530" fg:w="2"/><text x="68.4625%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.03%)</title><rect x="68.2394%" y="1061" width="0.0270%" height="15" fill="rgb(215,187,41)" fg:x="2531" fg:w="1"/><text x="68.4894%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="68.2664%" y="1189" width="0.0270%" height="15" fill="rgb(248,69,32)" fg:x="2532" fg:w="1"/><text x="68.5164%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="68.2664%" y="1173" width="0.0270%" height="15" fill="rgb(252,102,52)" fg:x="2532" fg:w="1"/><text x="68.5164%" y="1183.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="68.2664%" y="1157" width="0.0270%" height="15" fill="rgb(253,140,32)" fg:x="2532" fg:w="1"/><text x="68.5164%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.03%)</title><rect x="68.2664%" y="1141" width="0.0270%" height="15" fill="rgb(216,56,42)" fg:x="2532" fg:w="1"/><text x="68.5164%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.03%)</title><rect x="68.2664%" y="1125" width="0.0270%" height="15" fill="rgb(216,184,14)" fg:x="2532" fg:w="1"/><text x="68.5164%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="68.2664%" y="1109" width="0.0270%" height="15" fill="rgb(237,187,27)" fg:x="2532" fg:w="1"/><text x="68.5164%" y="1119.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (2 samples, 0.05%)</title><rect x="68.2664%" y="1205" width="0.0539%" height="15" fill="rgb(219,65,3)" fg:x="2532" fg:w="2"/><text x="68.5164%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (1 samples, 0.03%)</title><rect x="68.2933%" y="1189" width="0.0270%" height="15" fill="rgb(245,83,25)" fg:x="2533" fg:w="1"/><text x="68.5433%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (1 samples, 0.03%)</title><rect x="68.2933%" y="1173" width="0.0270%" height="15" fill="rgb(214,205,45)" fg:x="2533" fg:w="1"/><text x="68.5433%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (1 samples, 0.03%)</title><rect x="68.2933%" y="1157" width="0.0270%" height="15" fill="rgb(241,20,18)" fg:x="2533" fg:w="1"/><text x="68.5433%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.03%)</title><rect x="68.2933%" y="1141" width="0.0270%" height="15" fill="rgb(232,163,23)" fg:x="2533" fg:w="1"/><text x="68.5433%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="68.2933%" y="1125" width="0.0270%" height="15" fill="rgb(214,5,46)" fg:x="2533" fg:w="1"/><text x="68.5433%" y="1135.50"></text></g><g><title>tokio::runtime::driver::Handle::time (2 samples, 0.05%)</title><rect x="68.3203%" y="1205" width="0.0539%" height="15" fill="rgb(229,78,17)" fg:x="2534" fg:w="2"/><text x="68.5703%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.05%)</title><rect x="68.3203%" y="1189" width="0.0539%" height="15" fill="rgb(248,89,10)" fg:x="2534" fg:w="2"/><text x="68.5703%" y="1199.50"></text></g><g><title>tokio::runtime::driver::IoStack::park (1 samples, 0.03%)</title><rect x="68.3742%" y="1205" width="0.0270%" height="15" fill="rgb(248,54,15)" fg:x="2536" fg:w="1"/><text x="68.6242%" y="1215.50"></text></g><g><title>tokio::runtime::process::Driver::park (1 samples, 0.03%)</title><rect x="68.3742%" y="1189" width="0.0270%" height="15" fill="rgb(223,116,6)" fg:x="2536" fg:w="1"/><text x="68.6242%" y="1199.50"></text></g><g><title>tokio::runtime::signal::Driver::park (1 samples, 0.03%)</title><rect x="68.3742%" y="1173" width="0.0270%" height="15" fill="rgb(205,125,38)" fg:x="2536" fg:w="1"/><text x="68.6242%" y="1183.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park (1 samples, 0.03%)</title><rect x="68.3742%" y="1157" width="0.0270%" height="15" fill="rgb(251,78,38)" fg:x="2536" fg:w="1"/><text x="68.6242%" y="1167.50"></text></g><g><title>tokio::runtime::driver::Handle::io (1 samples, 0.03%)</title><rect x="68.3742%" y="1141" width="0.0270%" height="15" fill="rgb(253,78,28)" fg:x="2536" fg:w="1"/><text x="68.6242%" y="1151.50"></text></g><g><title>tokio::runtime::driver::IoHandle::as_ref (1 samples, 0.03%)</title><rect x="68.3742%" y="1125" width="0.0270%" height="15" fill="rgb(209,120,3)" fg:x="2536" fg:w="1"/><text x="68.6242%" y="1135.50"></text></g><g><title>tokio::runtime::signal::Driver::process (1 samples, 0.03%)</title><rect x="68.4012%" y="1205" width="0.0270%" height="15" fill="rgb(238,229,9)" fg:x="2537" fg:w="1"/><text x="68.6512%" y="1215.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (1 samples, 0.03%)</title><rect x="68.4012%" y="1189" width="0.0270%" height="15" fill="rgb(253,159,18)" fg:x="2537" fg:w="1"/><text x="68.6512%" y="1199.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (1 samples, 0.03%)</title><rect x="68.4281%" y="1189" width="0.0270%" height="15" fill="rgb(244,42,34)" fg:x="2538" fg:w="1"/><text x="68.6781%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="68.4281%" y="1173" width="0.0270%" height="15" fill="rgb(224,8,7)" fg:x="2538" fg:w="1"/><text x="68.6781%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="68.4281%" y="1157" width="0.0270%" height="15" fill="rgb(210,201,45)" fg:x="2538" fg:w="1"/><text x="68.6781%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="68.4281%" y="1141" width="0.0270%" height="15" fill="rgb(252,185,21)" fg:x="2538" fg:w="1"/><text x="68.6781%" y="1151.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1 samples, 0.03%)</title><rect x="68.4281%" y="1125" width="0.0270%" height="15" fill="rgb(223,131,1)" fg:x="2538" fg:w="1"/><text x="68.6781%" y="1135.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="68.4281%" y="1109" width="0.0270%" height="15" fill="rgb(245,141,16)" fg:x="2538" fg:w="1"/><text x="68.6781%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="68.4281%" y="1093" width="0.0270%" height="15" fill="rgb(229,55,45)" fg:x="2538" fg:w="1"/><text x="68.6781%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (1 samples, 0.03%)</title><rect x="68.4821%" y="997" width="0.0270%" height="15" fill="rgb(208,92,15)" fg:x="2540" fg:w="1"/><text x="68.7321%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="68.4821%" y="981" width="0.0270%" height="15" fill="rgb(234,185,47)" fg:x="2540" fg:w="1"/><text x="68.7321%" y="991.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (1 samples, 0.03%)</title><rect x="68.4821%" y="965" width="0.0270%" height="15" fill="rgb(253,104,50)" fg:x="2540" fg:w="1"/><text x="68.7321%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.03%)</title><rect x="68.4821%" y="949" width="0.0270%" height="15" fill="rgb(205,70,7)" fg:x="2540" fg:w="1"/><text x="68.7321%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.03%)</title><rect x="68.4821%" y="933" width="0.0270%" height="15" fill="rgb(240,178,43)" fg:x="2540" fg:w="1"/><text x="68.7321%" y="943.50"></text></g><g><title>core::mem::drop (5 samples, 0.13%)</title><rect x="68.4821%" y="1013" width="0.1348%" height="15" fill="rgb(214,112,2)" fg:x="2540" fg:w="5"/><text x="68.7321%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (4 samples, 0.11%)</title><rect x="68.5090%" y="997" width="0.1078%" height="15" fill="rgb(206,46,17)" fg:x="2541" fg:w="4"/><text x="68.7590%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (4 samples, 0.11%)</title><rect x="68.5090%" y="981" width="0.1078%" height="15" fill="rgb(225,220,16)" fg:x="2541" fg:w="4"/><text x="68.7590%" y="991.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="68.5090%" y="965" width="0.1078%" height="15" fill="rgb(238,65,40)" fg:x="2541" fg:w="4"/><text x="68.7590%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.11%)</title><rect x="68.5090%" y="949" width="0.1078%" height="15" fill="rgb(230,151,21)" fg:x="2541" fg:w="4"/><text x="68.7590%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.11%)</title><rect x="68.5090%" y="933" width="0.1078%" height="15" fill="rgb(218,58,49)" fg:x="2541" fg:w="4"/><text x="68.7590%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.11%)</title><rect x="68.5090%" y="917" width="0.1078%" height="15" fill="rgb(219,179,14)" fg:x="2541" fg:w="4"/><text x="68.7590%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (3 samples, 0.08%)</title><rect x="68.6169%" y="981" width="0.0809%" height="15" fill="rgb(223,72,1)" fg:x="2545" fg:w="3"/><text x="68.8669%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.08%)</title><rect x="68.6169%" y="965" width="0.0809%" height="15" fill="rgb(238,126,10)" fg:x="2545" fg:w="3"/><text x="68.8669%" y="975.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (4 samples, 0.11%)</title><rect x="68.6169%" y="1013" width="0.1078%" height="15" fill="rgb(224,206,38)" fg:x="2545" fg:w="4"/><text x="68.8669%" y="1023.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (4 samples, 0.11%)</title><rect x="68.6169%" y="997" width="0.1078%" height="15" fill="rgb(212,201,54)" fg:x="2545" fg:w="4"/><text x="68.8669%" y="1007.50"></text></g><g><title>std::sys::sync::rwlock::futex::is_read_lockable (1 samples, 0.03%)</title><rect x="68.6978%" y="981" width="0.0270%" height="15" fill="rgb(218,154,48)" fg:x="2548" fg:w="1"/><text x="68.9478%" y="991.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (5 samples, 0.13%)</title><rect x="68.7247%" y="1013" width="0.1348%" height="15" fill="rgb(232,93,24)" fg:x="2549" fg:w="5"/><text x="68.9747%" y="1023.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.08%)</title><rect x="68.7786%" y="997" width="0.0809%" height="15" fill="rgb(245,30,21)" fg:x="2551" fg:w="3"/><text x="69.0286%" y="1007.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.08%)</title><rect x="68.7786%" y="981" width="0.0809%" height="15" fill="rgb(242,148,29)" fg:x="2551" fg:w="3"/><text x="69.0286%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.08%)</title><rect x="68.7786%" y="965" width="0.0809%" height="15" fill="rgb(244,153,54)" fg:x="2551" fg:w="3"/><text x="69.0286%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.08%)</title><rect x="68.7786%" y="949" width="0.0809%" height="15" fill="rgb(252,87,22)" fg:x="2551" fg:w="3"/><text x="69.0286%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.08%)</title><rect x="68.7786%" y="933" width="0.0809%" height="15" fill="rgb(210,51,29)" fg:x="2551" fg:w="3"/><text x="69.0286%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (17 samples, 0.46%)</title><rect x="68.8595%" y="1013" width="0.4583%" height="15" fill="rgb(242,136,47)" fg:x="2554" fg:w="17"/><text x="69.1095%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (17 samples, 0.46%)</title><rect x="68.8595%" y="997" width="0.4583%" height="15" fill="rgb(238,68,4)" fg:x="2554" fg:w="17"/><text x="69.1095%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (15 samples, 0.40%)</title><rect x="68.9135%" y="981" width="0.4044%" height="15" fill="rgb(242,161,30)" fg:x="2556" fg:w="15"/><text x="69.1635%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (4 samples, 0.11%)</title><rect x="69.2100%" y="965" width="0.1078%" height="15" fill="rgb(218,58,44)" fg:x="2567" fg:w="4"/><text x="69.4600%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.05%)</title><rect x="69.3179%" y="997" width="0.0539%" height="15" fill="rgb(252,125,32)" fg:x="2571" fg:w="2"/><text x="69.5679%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (3 samples, 0.08%)</title><rect x="69.3179%" y="1013" width="0.0809%" height="15" fill="rgb(219,178,0)" fg:x="2571" fg:w="3"/><text x="69.5679%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.03%)</title><rect x="69.3718%" y="997" width="0.0270%" height="15" fill="rgb(213,152,7)" fg:x="2573" fg:w="1"/><text x="69.6218%" y="1007.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (36 samples, 0.97%)</title><rect x="68.4551%" y="1189" width="0.9706%" height="15" fill="rgb(249,109,34)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (36 samples, 0.97%)</title><rect x="68.4551%" y="1173" width="0.9706%" height="15" fill="rgb(232,96,21)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (36 samples, 0.97%)</title><rect x="68.4551%" y="1157" width="0.9706%" height="15" fill="rgb(228,27,39)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (36 samples, 0.97%)</title><rect x="68.4551%" y="1141" width="0.9706%" height="15" fill="rgb(211,182,52)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.97%)</title><rect x="68.4551%" y="1125" width="0.9706%" height="15" fill="rgb(234,178,38)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (36 samples, 0.97%)</title><rect x="68.4551%" y="1109" width="0.9706%" height="15" fill="rgb(221,111,3)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (36 samples, 0.97%)</title><rect x="68.4551%" y="1093" width="0.9706%" height="15" fill="rgb(228,175,21)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (36 samples, 0.97%)</title><rect x="68.4551%" y="1077" width="0.9706%" height="15" fill="rgb(228,174,43)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.97%)</title><rect x="68.4551%" y="1061" width="0.9706%" height="15" fill="rgb(211,191,0)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1071.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (36 samples, 0.97%)</title><rect x="68.4551%" y="1045" width="0.9706%" height="15" fill="rgb(253,117,3)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1055.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (36 samples, 0.97%)</title><rect x="68.4551%" y="1029" width="0.9706%" height="15" fill="rgb(241,127,19)" fg:x="2539" fg:w="36"/><text x="68.7051%" y="1039.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (1 samples, 0.03%)</title><rect x="69.3988%" y="1013" width="0.0270%" height="15" fill="rgb(218,103,12)" fg:x="2574" fg:w="1"/><text x="69.6488%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (474 samples, 12.78%)</title><rect x="56.8617%" y="1237" width="12.7797%" height="15" fill="rgb(236,214,43)" fg:x="2109" fg:w="474"/><text x="57.1117%" y="1247.50">tokio::runtime::sch..</text></g><g><title>tokio::runtime::time::Driver::park_internal (55 samples, 1.48%)</title><rect x="68.1585%" y="1221" width="1.4829%" height="15" fill="rgb(244,144,19)" fg:x="2528" fg:w="55"/><text x="68.4085%" y="1231.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (45 samples, 1.21%)</title><rect x="68.4281%" y="1205" width="1.2133%" height="15" fill="rgb(246,188,10)" fg:x="2538" fg:w="45"/><text x="68.6781%" y="1215.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (8 samples, 0.22%)</title><rect x="69.4257%" y="1189" width="0.2157%" height="15" fill="rgb(212,193,33)" fg:x="2575" fg:w="8"/><text x="69.6757%" y="1199.50"></text></g><g><title>tokio::time::clock::Clock::now (8 samples, 0.22%)</title><rect x="69.4257%" y="1173" width="0.2157%" height="15" fill="rgb(241,51,29)" fg:x="2575" fg:w="8"/><text x="69.6757%" y="1183.50"></text></g><g><title>tokio::time::clock::now (8 samples, 0.22%)</title><rect x="69.4257%" y="1157" width="0.2157%" height="15" fill="rgb(211,58,19)" fg:x="2575" fg:w="8"/><text x="69.6757%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (8 samples, 0.22%)</title><rect x="69.4257%" y="1141" width="0.2157%" height="15" fill="rgb(229,111,26)" fg:x="2575" fg:w="8"/><text x="69.6757%" y="1151.50"></text></g><g><title>clock_gettime (7 samples, 0.19%)</title><rect x="69.4527%" y="1125" width="0.1887%" height="15" fill="rgb(213,115,40)" fg:x="2576" fg:w="7"/><text x="69.7027%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="69.5875%" y="1109" width="0.0539%" height="15" fill="rgb(209,56,44)" fg:x="2581" fg:w="2"/><text x="69.8375%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="69.6414%" y="1221" width="0.0270%" height="15" fill="rgb(230,108,32)" fg:x="2583" fg:w="1"/><text x="69.8914%" y="1231.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="69.6414%" y="1205" width="0.0270%" height="15" fill="rgb(216,165,31)" fg:x="2583" fg:w="1"/><text x="69.8914%" y="1215.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="69.6414%" y="1189" width="0.0270%" height="15" fill="rgb(218,122,21)" fg:x="2583" fg:w="1"/><text x="69.8914%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="69.6684%" y="1157" width="0.0270%" height="15" fill="rgb(223,224,47)" fg:x="2584" fg:w="1"/><text x="69.9184%" y="1167.50"></text></g><g><title>__x64_sys_epoll_wait (3 samples, 0.08%)</title><rect x="69.6953%" y="1125" width="0.0809%" height="15" fill="rgb(238,102,44)" fg:x="2585" fg:w="3"/><text x="69.9453%" y="1135.50"></text></g><g><title>do_epoll_wait (2 samples, 0.05%)</title><rect x="69.7223%" y="1109" width="0.0539%" height="15" fill="rgb(236,46,40)" fg:x="2586" fg:w="2"/><text x="69.9723%" y="1119.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.11%)</title><rect x="69.6953%" y="1157" width="0.1078%" height="15" fill="rgb(247,202,50)" fg:x="2585" fg:w="4"/><text x="69.9453%" y="1167.50"></text></g><g><title>do_syscall_64 (4 samples, 0.11%)</title><rect x="69.6953%" y="1141" width="0.1078%" height="15" fill="rgb(209,99,20)" fg:x="2585" fg:w="4"/><text x="69.9453%" y="1151.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="69.7762%" y="1125" width="0.0270%" height="15" fill="rgb(252,27,34)" fg:x="2588" fg:w="1"/><text x="70.0262%" y="1135.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (5 samples, 0.13%)</title><rect x="69.8032%" y="1157" width="0.1348%" height="15" fill="rgb(215,206,23)" fg:x="2589" fg:w="5"/><text x="70.0532%" y="1167.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h38cdf9c9b81600e8E.llvm.8554875322481988541 (14 samples, 0.38%)</title><rect x="69.6684%" y="1221" width="0.3775%" height="15" fill="rgb(212,135,36)" fg:x="2584" fg:w="14"/><text x="69.9184%" y="1231.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17hf293d88640a143a9E.llvm.14389421325859682170 (14 samples, 0.38%)</title><rect x="69.6684%" y="1205" width="0.3775%" height="15" fill="rgb(240,189,1)" fg:x="2584" fg:w="14"/><text x="69.9184%" y="1215.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (14 samples, 0.38%)</title><rect x="69.6684%" y="1189" width="0.3775%" height="15" fill="rgb(242,56,20)" fg:x="2584" fg:w="14"/><text x="69.9184%" y="1199.50"></text></g><g><title>epoll_wait (14 samples, 0.38%)</title><rect x="69.6684%" y="1173" width="0.3775%" height="15" fill="rgb(247,132,33)" fg:x="2584" fg:w="14"/><text x="69.9184%" y="1183.50"></text></g><g><title>syscall_return_via_sysret (4 samples, 0.11%)</title><rect x="69.9380%" y="1157" width="0.1078%" height="15" fill="rgb(208,149,11)" fg:x="2594" fg:w="4"/><text x="70.1880%" y="1167.50"></text></g><g><title>core::time::Duration::from_millis (1 samples, 0.03%)</title><rect x="70.0458%" y="1221" width="0.0270%" height="15" fill="rgb(211,33,11)" fg:x="2598" fg:w="1"/><text x="70.2958%" y="1231.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.05%)</title><rect x="70.0728%" y="1061" width="0.0539%" height="15" fill="rgb(221,29,38)" fg:x="2599" fg:w="2"/><text x="70.3228%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (3 samples, 0.08%)</title><rect x="70.0728%" y="1205" width="0.0809%" height="15" fill="rgb(206,182,49)" fg:x="2599" fg:w="3"/><text x="70.3228%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (3 samples, 0.08%)</title><rect x="70.0728%" y="1189" width="0.0809%" height="15" fill="rgb(216,140,1)" fg:x="2599" fg:w="3"/><text x="70.3228%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (3 samples, 0.08%)</title><rect x="70.0728%" y="1173" width="0.0809%" height="15" fill="rgb(232,57,40)" fg:x="2599" fg:w="3"/><text x="70.3228%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="70.0728%" y="1157" width="0.0809%" height="15" fill="rgb(224,186,18)" fg:x="2599" fg:w="3"/><text x="70.3228%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (3 samples, 0.08%)</title><rect x="70.0728%" y="1141" width="0.0809%" height="15" fill="rgb(215,121,11)" fg:x="2599" fg:w="3"/><text x="70.3228%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.08%)</title><rect x="70.0728%" y="1125" width="0.0809%" height="15" fill="rgb(245,147,10)" fg:x="2599" fg:w="3"/><text x="70.3228%" y="1135.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (3 samples, 0.08%)</title><rect x="70.0728%" y="1109" width="0.0809%" height="15" fill="rgb(238,153,13)" fg:x="2599" fg:w="3"/><text x="70.3228%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (3 samples, 0.08%)</title><rect x="70.0728%" y="1093" width="0.0809%" height="15" fill="rgb(233,108,0)" fg:x="2599" fg:w="3"/><text x="70.3228%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (3 samples, 0.08%)</title><rect x="70.0728%" y="1077" width="0.0809%" height="15" fill="rgb(212,157,17)" fg:x="2599" fg:w="3"/><text x="70.3228%" y="1087.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (1 samples, 0.03%)</title><rect x="70.1267%" y="1061" width="0.0270%" height="15" fill="rgb(225,213,38)" fg:x="2601" fg:w="1"/><text x="70.3767%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="70.1267%" y="1045" width="0.0270%" height="15" fill="rgb(248,16,11)" fg:x="2601" fg:w="1"/><text x="70.3767%" y="1055.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (1 samples, 0.03%)</title><rect x="70.1537%" y="1205" width="0.0270%" height="15" fill="rgb(241,33,4)" fg:x="2602" fg:w="1"/><text x="70.4037%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="70.1537%" y="1189" width="0.0270%" height="15" fill="rgb(222,26,43)" fg:x="2602" fg:w="1"/><text x="70.4037%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="70.1537%" y="1173" width="0.0270%" height="15" fill="rgb(243,29,36)" fg:x="2602" fg:w="1"/><text x="70.4037%" y="1183.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="70.1537%" y="1157" width="0.0270%" height="15" fill="rgb(241,9,27)" fg:x="2602" fg:w="1"/><text x="70.4037%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.03%)</title><rect x="70.1537%" y="1141" width="0.0270%" height="15" fill="rgb(205,117,26)" fg:x="2602" fg:w="1"/><text x="70.4037%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.03%)</title><rect x="70.1537%" y="1125" width="0.0270%" height="15" fill="rgb(209,80,39)" fg:x="2602" fg:w="1"/><text x="70.4037%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="70.1537%" y="1109" width="0.0270%" height="15" fill="rgb(239,155,6)" fg:x="2602" fg:w="1"/><text x="70.4037%" y="1119.50"></text></g><g><title>core::mem::drop (1 samples, 0.03%)</title><rect x="70.2346%" y="1013" width="0.0270%" height="15" fill="rgb(212,104,12)" fg:x="2605" fg:w="1"/><text x="70.4846%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (1 samples, 0.03%)</title><rect x="70.2346%" y="997" width="0.0270%" height="15" fill="rgb(234,204,3)" fg:x="2605" fg:w="1"/><text x="70.4846%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="70.2346%" y="981" width="0.0270%" height="15" fill="rgb(251,218,7)" fg:x="2605" fg:w="1"/><text x="70.4846%" y="991.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (1 samples, 0.03%)</title><rect x="70.2346%" y="965" width="0.0270%" height="15" fill="rgb(221,81,32)" fg:x="2605" fg:w="1"/><text x="70.4846%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.03%)</title><rect x="70.2346%" y="949" width="0.0270%" height="15" fill="rgb(214,152,26)" fg:x="2605" fg:w="1"/><text x="70.4846%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.03%)</title><rect x="70.2346%" y="933" width="0.0270%" height="15" fill="rgb(223,22,3)" fg:x="2605" fg:w="1"/><text x="70.4846%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (2 samples, 0.05%)</title><rect x="70.2615%" y="981" width="0.0539%" height="15" fill="rgb(207,174,7)" fg:x="2606" fg:w="2"/><text x="70.5115%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.05%)</title><rect x="70.2615%" y="965" width="0.0539%" height="15" fill="rgb(224,19,52)" fg:x="2606" fg:w="2"/><text x="70.5115%" y="975.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (3 samples, 0.08%)</title><rect x="70.2615%" y="1013" width="0.0809%" height="15" fill="rgb(228,24,14)" fg:x="2606" fg:w="3"/><text x="70.5115%" y="1023.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (3 samples, 0.08%)</title><rect x="70.2615%" y="997" width="0.0809%" height="15" fill="rgb(230,153,43)" fg:x="2606" fg:w="3"/><text x="70.5115%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.03%)</title><rect x="70.3154%" y="981" width="0.0270%" height="15" fill="rgb(231,106,12)" fg:x="2608" fg:w="1"/><text x="70.5654%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="70.3154%" y="965" width="0.0270%" height="15" fill="rgb(215,92,2)" fg:x="2608" fg:w="1"/><text x="70.5654%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.03%)</title><rect x="70.3424%" y="1013" width="0.0270%" height="15" fill="rgb(249,143,25)" fg:x="2609" fg:w="1"/><text x="70.5924%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.03%)</title><rect x="70.3424%" y="997" width="0.0270%" height="15" fill="rgb(252,7,35)" fg:x="2609" fg:w="1"/><text x="70.5924%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.03%)</title><rect x="70.3424%" y="981" width="0.0270%" height="15" fill="rgb(216,69,40)" fg:x="2609" fg:w="1"/><text x="70.5924%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.03%)</title><rect x="70.3424%" y="965" width="0.0270%" height="15" fill="rgb(240,36,33)" fg:x="2609" fg:w="1"/><text x="70.5924%" y="975.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (13 samples, 0.35%)</title><rect x="70.0728%" y="1221" width="0.3505%" height="15" fill="rgb(231,128,14)" fg:x="2599" fg:w="13"/><text x="70.3228%" y="1231.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (9 samples, 0.24%)</title><rect x="70.1806%" y="1205" width="0.2427%" height="15" fill="rgb(245,143,14)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1215.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (9 samples, 0.24%)</title><rect x="70.1806%" y="1189" width="0.2427%" height="15" fill="rgb(222,130,28)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (9 samples, 0.24%)</title><rect x="70.1806%" y="1173" width="0.2427%" height="15" fill="rgb(212,10,48)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (9 samples, 0.24%)</title><rect x="70.1806%" y="1157" width="0.2427%" height="15" fill="rgb(254,118,45)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (9 samples, 0.24%)</title><rect x="70.1806%" y="1141" width="0.2427%" height="15" fill="rgb(228,6,45)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.24%)</title><rect x="70.1806%" y="1125" width="0.2427%" height="15" fill="rgb(241,18,35)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (9 samples, 0.24%)</title><rect x="70.1806%" y="1109" width="0.2427%" height="15" fill="rgb(227,214,53)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.24%)</title><rect x="70.1806%" y="1093" width="0.2427%" height="15" fill="rgb(224,107,51)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (9 samples, 0.24%)</title><rect x="70.1806%" y="1077" width="0.2427%" height="15" fill="rgb(248,60,28)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.24%)</title><rect x="70.1806%" y="1061" width="0.2427%" height="15" fill="rgb(249,101,23)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1071.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (9 samples, 0.24%)</title><rect x="70.1806%" y="1045" width="0.2427%" height="15" fill="rgb(228,51,19)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1055.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (9 samples, 0.24%)</title><rect x="70.1806%" y="1029" width="0.2427%" height="15" fill="rgb(213,20,6)" fg:x="2603" fg:w="9"/><text x="70.4306%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (2 samples, 0.05%)</title><rect x="70.3694%" y="1013" width="0.0539%" height="15" fill="rgb(212,124,10)" fg:x="2610" fg:w="2"/><text x="70.6194%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.05%)</title><rect x="70.3694%" y="997" width="0.0539%" height="15" fill="rgb(248,3,40)" fg:x="2610" fg:w="2"/><text x="70.6194%" y="1007.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (1 samples, 0.03%)</title><rect x="70.3963%" y="981" width="0.0270%" height="15" fill="rgb(223,178,23)" fg:x="2611" fg:w="1"/><text x="70.6463%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="70.3963%" y="965" width="0.0270%" height="15" fill="rgb(240,132,45)" fg:x="2611" fg:w="1"/><text x="70.6463%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (30 samples, 0.81%)</title><rect x="69.6414%" y="1237" width="0.8088%" height="15" fill="rgb(245,164,36)" fg:x="2583" fg:w="30"/><text x="69.8914%" y="1247.50"></text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (1 samples, 0.03%)</title><rect x="70.4233%" y="1221" width="0.0270%" height="15" fill="rgb(231,188,53)" fg:x="2612" fg:w="1"/><text x="70.6733%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.03%)</title><rect x="70.4233%" y="1205" width="0.0270%" height="15" fill="rgb(237,198,39)" fg:x="2612" fg:w="1"/><text x="70.6733%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="70.4233%" y="1189" width="0.0270%" height="15" fill="rgb(223,120,35)" fg:x="2612" fg:w="1"/><text x="70.6733%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (509 samples, 13.72%)</title><rect x="56.7538%" y="1253" width="13.7234%" height="15" fill="rgb(253,107,49)" fg:x="2105" fg:w="509"/><text x="57.0038%" y="1263.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (1 samples, 0.03%)</title><rect x="70.4503%" y="1237" width="0.0270%" height="15" fill="rgb(216,44,31)" fg:x="2613" fg:w="1"/><text x="70.7003%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (1 samples, 0.03%)</title><rect x="70.4503%" y="1221" width="0.0270%" height="15" fill="rgb(253,87,21)" fg:x="2613" fg:w="1"/><text x="70.7003%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="70.4503%" y="1205" width="0.0270%" height="15" fill="rgb(226,18,2)" fg:x="2613" fg:w="1"/><text x="70.7003%" y="1215.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="70.4503%" y="1189" width="0.0270%" height="15" fill="rgb(216,8,46)" fg:x="2613" fg:w="1"/><text x="70.7003%" y="1199.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="70.4503%" y="1173" width="0.0270%" height="15" fill="rgb(226,140,39)" fg:x="2613" fg:w="1"/><text x="70.7003%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (1 samples, 0.03%)</title><rect x="70.4772%" y="1205" width="0.0270%" height="15" fill="rgb(221,194,54)" fg:x="2614" fg:w="1"/><text x="70.7272%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.05%)</title><rect x="70.5042%" y="1173" width="0.0539%" height="15" fill="rgb(213,92,11)" fg:x="2615" fg:w="2"/><text x="70.7542%" y="1183.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (2 samples, 0.05%)</title><rect x="70.5042%" y="1157" width="0.0539%" height="15" fill="rgb(229,162,46)" fg:x="2615" fg:w="2"/><text x="70.7542%" y="1167.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (2 samples, 0.05%)</title><rect x="70.5042%" y="1141" width="0.0539%" height="15" fill="rgb(214,111,36)" fg:x="2615" fg:w="2"/><text x="70.7542%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.05%)</title><rect x="70.5042%" y="1125" width="0.0539%" height="15" fill="rgb(207,6,21)" fg:x="2615" fg:w="2"/><text x="70.7542%" y="1135.50"></text></g><g><title>tokio::runtime::context::budget (3 samples, 0.08%)</title><rect x="70.5042%" y="1205" width="0.0809%" height="15" fill="rgb(213,127,38)" fg:x="2615" fg:w="3"/><text x="70.7542%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.08%)</title><rect x="70.5042%" y="1189" width="0.0809%" height="15" fill="rgb(238,118,32)" fg:x="2615" fg:w="3"/><text x="70.7542%" y="1199.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1 samples, 0.03%)</title><rect x="70.5581%" y="1173" width="0.0270%" height="15" fill="rgb(240,139,39)" fg:x="2617" fg:w="1"/><text x="70.8081%" y="1183.50"></text></g><g><title>tokio::runtime::coop::with_budget::_{{closure}} (1 samples, 0.03%)</title><rect x="70.5581%" y="1157" width="0.0270%" height="15" fill="rgb(235,10,37)" fg:x="2617" fg:w="1"/><text x="70.8081%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="70.5581%" y="1141" width="0.0270%" height="15" fill="rgb(249,171,38)" fg:x="2617" fg:w="1"/><text x="70.8081%" y="1151.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.03%)</title><rect x="70.5851%" y="1189" width="0.0270%" height="15" fill="rgb(242,144,32)" fg:x="2618" fg:w="1"/><text x="70.8351%" y="1199.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.03%)</title><rect x="70.5851%" y="1173" width="0.0270%" height="15" fill="rgb(217,117,21)" fg:x="2618" fg:w="1"/><text x="70.8351%" y="1183.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.03%)</title><rect x="70.5851%" y="1157" width="0.0270%" height="15" fill="rgb(249,87,1)" fg:x="2618" fg:w="1"/><text x="70.8351%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (2 samples, 0.05%)</title><rect x="70.6120%" y="1189" width="0.0539%" height="15" fill="rgb(248,196,48)" fg:x="2619" fg:w="2"/><text x="70.8620%" y="1199.50"></text></g><g><title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="70.6390%" y="1173" width="0.0270%" height="15" fill="rgb(251,206,33)" fg:x="2620" fg:w="1"/><text x="70.8890%" y="1183.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="70.6390%" y="1157" width="0.0270%" height="15" fill="rgb(232,141,28)" fg:x="2620" fg:w="1"/><text x="70.8890%" y="1167.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="70.6390%" y="1141" width="0.0270%" height="15" fill="rgb(209,167,14)" fg:x="2620" fg:w="1"/><text x="70.8890%" y="1151.50"></text></g><g><title>switch_fpu_return (1 samples, 0.03%)</title><rect x="70.6390%" y="1125" width="0.0270%" height="15" fill="rgb(225,11,50)" fg:x="2620" fg:w="1"/><text x="70.8890%" y="1135.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.03%)</title><rect x="70.6390%" y="1109" width="0.0270%" height="15" fill="rgb(209,50,20)" fg:x="2620" fg:w="1"/><text x="70.8890%" y="1119.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::process_new_packets (1 samples, 0.03%)</title><rect x="70.7199%" y="805" width="0.0270%" height="15" fill="rgb(212,17,46)" fg:x="2623" fg:w="1"/><text x="70.9699%" y="815.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_new_packets (1 samples, 0.03%)</title><rect x="70.7199%" y="789" width="0.0270%" height="15" fill="rgb(216,101,39)" fg:x="2623" fg:w="1"/><text x="70.9699%" y="799.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::deframe (1 samples, 0.03%)</title><rect x="70.7199%" y="773" width="0.0270%" height="15" fill="rgb(212,228,48)" fg:x="2623" fg:w="1"/><text x="70.9699%" y="783.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_more_input (1 samples, 0.03%)</title><rect x="70.7199%" y="757" width="0.0270%" height="15" fill="rgb(250,6,50)" fg:x="2623" fg:w="1"/><text x="70.9699%" y="767.50"></text></g><g><title>&lt;rustls::msgs::deframer::DeframerIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="70.7199%" y="741" width="0.0270%" height="15" fill="rgb(250,160,48)" fg:x="2623" fg:w="1"/><text x="70.9699%" y="751.50"></text></g><g><title>rustls::msgs::message::outbound::read_opaque_message_header (1 samples, 0.03%)</title><rect x="70.7199%" y="725" width="0.0270%" height="15" fill="rgb(244,216,33)" fg:x="2623" fg:w="1"/><text x="70.9699%" y="735.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="70.7738%" y="645" width="0.0270%" height="15" fill="rgb(207,157,5)" fg:x="2625" fg:w="1"/><text x="71.0238%" y="655.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="70.7738%" y="629" width="0.0270%" height="15" fill="rgb(228,199,8)" fg:x="2625" fg:w="1"/><text x="71.0238%" y="639.50"></text></g><g><title>sock_recvmsg (1 samples, 0.03%)</title><rect x="70.7738%" y="613" width="0.0270%" height="15" fill="rgb(227,80,20)" fg:x="2625" fg:w="1"/><text x="71.0238%" y="623.50"></text></g><g><title>inet_recvmsg (1 samples, 0.03%)</title><rect x="70.7738%" y="597" width="0.0270%" height="15" fill="rgb(222,9,33)" fg:x="2625" fg:w="1"/><text x="71.0238%" y="607.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadU32&lt;R&gt; as core::future::future::Future&gt;::poll (4 samples, 0.11%)</title><rect x="70.7199%" y="949" width="0.1078%" height="15" fill="rgb(239,44,28)" fg:x="2623" fg:w="4"/><text x="70.9699%" y="959.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (4 samples, 0.11%)</title><rect x="70.7199%" y="933" width="0.1078%" height="15" fill="rgb(249,187,43)" fg:x="2623" fg:w="4"/><text x="70.9699%" y="943.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (4 samples, 0.11%)</title><rect x="70.7199%" y="917" width="0.1078%" height="15" fill="rgb(216,141,28)" fg:x="2623" fg:w="4"/><text x="70.9699%" y="927.50"></text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (4 samples, 0.11%)</title><rect x="70.7199%" y="901" width="0.1078%" height="15" fill="rgb(230,154,53)" fg:x="2623" fg:w="4"/><text x="70.9699%" y="911.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (4 samples, 0.11%)</title><rect x="70.7199%" y="885" width="0.1078%" height="15" fill="rgb(227,82,4)" fg:x="2623" fg:w="4"/><text x="70.9699%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (4 samples, 0.11%)</title><rect x="70.7199%" y="869" width="0.1078%" height="15" fill="rgb(220,107,16)" fg:x="2623" fg:w="4"/><text x="70.9699%" y="879.50"></text></g><g><title>&lt;tokio_rustls::client::TlsStream&lt;IO&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (4 samples, 0.11%)</title><rect x="70.7199%" y="853" width="0.1078%" height="15" fill="rgb(207,187,2)" fg:x="2623" fg:w="4"/><text x="70.9699%" y="863.50"></text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (4 samples, 0.11%)</title><rect x="70.7199%" y="837" width="0.1078%" height="15" fill="rgb(210,162,52)" fg:x="2623" fg:w="4"/><text x="70.9699%" y="847.50"></text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::read_io (4 samples, 0.11%)</title><rect x="70.7199%" y="821" width="0.1078%" height="15" fill="rgb(217,216,49)" fg:x="2623" fg:w="4"/><text x="70.9699%" y="831.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::read_tls (3 samples, 0.08%)</title><rect x="70.7468%" y="805" width="0.0809%" height="15" fill="rgb(218,146,49)" fg:x="2624" fg:w="3"/><text x="70.9968%" y="815.50"></text></g><g><title>rustls::msgs::deframer::buffers::DeframerVecBuffer::read (3 samples, 0.08%)</title><rect x="70.7468%" y="789" width="0.0809%" height="15" fill="rgb(216,55,40)" fg:x="2624" fg:w="3"/><text x="70.9968%" y="799.50"></text></g><g><title>&lt;tokio_rustls::common::SyncReadAdapter&lt;T&gt; as std::io::Read&gt;::read (3 samples, 0.08%)</title><rect x="70.7468%" y="773" width="0.0809%" height="15" fill="rgb(208,196,21)" fg:x="2624" fg:w="3"/><text x="70.9968%" y="783.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.08%)</title><rect x="70.7468%" y="757" width="0.0809%" height="15" fill="rgb(242,117,42)" fg:x="2624" fg:w="3"/><text x="70.9968%" y="767.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (3 samples, 0.08%)</title><rect x="70.7468%" y="741" width="0.0809%" height="15" fill="rgb(210,11,23)" fg:x="2624" fg:w="3"/><text x="70.9968%" y="751.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (3 samples, 0.08%)</title><rect x="70.7468%" y="725" width="0.0809%" height="15" fill="rgb(217,110,2)" fg:x="2624" fg:w="3"/><text x="70.9968%" y="735.50"></text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Read&gt;::read (3 samples, 0.08%)</title><rect x="70.7468%" y="709" width="0.0809%" height="15" fill="rgb(229,77,54)" fg:x="2624" fg:w="3"/><text x="70.9968%" y="719.50"></text></g><g><title>recv (3 samples, 0.08%)</title><rect x="70.7468%" y="693" width="0.0809%" height="15" fill="rgb(218,53,16)" fg:x="2624" fg:w="3"/><text x="70.9968%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.08%)</title><rect x="70.7468%" y="677" width="0.0809%" height="15" fill="rgb(215,38,13)" fg:x="2624" fg:w="3"/><text x="70.9968%" y="687.50"></text></g><g><title>do_syscall_64 (2 samples, 0.05%)</title><rect x="70.7738%" y="661" width="0.0539%" height="15" fill="rgb(235,42,18)" fg:x="2625" fg:w="2"/><text x="71.0238%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="70.8008%" y="645" width="0.0270%" height="15" fill="rgb(219,66,54)" fg:x="2626" fg:w="1"/><text x="71.0508%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="70.8008%" y="629" width="0.0270%" height="15" fill="rgb(222,205,4)" fg:x="2626" fg:w="1"/><text x="71.0508%" y="639.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="70.8008%" y="613" width="0.0270%" height="15" fill="rgb(227,213,46)" fg:x="2626" fg:w="1"/><text x="71.0508%" y="623.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="70.8008%" y="597" width="0.0270%" height="15" fill="rgb(250,145,42)" fg:x="2626" fg:w="1"/><text x="71.0508%" y="607.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="70.8008%" y="581" width="0.0270%" height="15" fill="rgb(219,15,2)" fg:x="2626" fg:w="1"/><text x="71.0508%" y="591.50"></text></g><g><title>set_next_entity (1 samples, 0.03%)</title><rect x="70.8008%" y="565" width="0.0270%" height="15" fill="rgb(231,181,52)" fg:x="2626" fg:w="1"/><text x="71.0508%" y="575.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="70.8008%" y="549" width="0.0270%" height="15" fill="rgb(235,1,42)" fg:x="2626" fg:w="1"/><text x="71.0508%" y="559.50"></text></g><g><title>tokio::runtime::coop::budget (14 samples, 0.38%)</title><rect x="70.4772%" y="1237" width="0.3775%" height="15" fill="rgb(249,88,27)" fg:x="2614" fg:w="14"/><text x="70.7272%" y="1247.50"></text></g><g><title>tokio::runtime::coop::with_budget (14 samples, 0.38%)</title><rect x="70.4772%" y="1221" width="0.3775%" height="15" fill="rgb(235,145,16)" fg:x="2614" fg:w="14"/><text x="70.7272%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (10 samples, 0.27%)</title><rect x="70.5851%" y="1205" width="0.2696%" height="15" fill="rgb(237,114,19)" fg:x="2618" fg:w="10"/><text x="70.8351%" y="1215.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (7 samples, 0.19%)</title><rect x="70.6659%" y="1189" width="0.1887%" height="15" fill="rgb(238,51,50)" fg:x="2621" fg:w="7"/><text x="70.9159%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7 samples, 0.19%)</title><rect x="70.6659%" y="1173" width="0.1887%" height="15" fill="rgb(205,194,25)" fg:x="2621" fg:w="7"/><text x="70.9159%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.16%)</title><rect x="70.6929%" y="1157" width="0.1618%" height="15" fill="rgb(215,203,17)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (6 samples, 0.16%)</title><rect x="70.6929%" y="1141" width="0.1618%" height="15" fill="rgb(233,112,49)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6 samples, 0.16%)</title><rect x="70.6929%" y="1125" width="0.1618%" height="15" fill="rgb(241,130,26)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.16%)</title><rect x="70.6929%" y="1109" width="0.1618%" height="15" fill="rgb(252,223,19)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1119.50"></text></g><g><title>std::panicking::try (6 samples, 0.16%)</title><rect x="70.6929%" y="1093" width="0.1618%" height="15" fill="rgb(211,95,25)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.16%)</title><rect x="70.6929%" y="1077" width="0.1618%" height="15" fill="rgb(251,182,27)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.16%)</title><rect x="70.6929%" y="1061" width="0.1618%" height="15" fill="rgb(238,24,4)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (6 samples, 0.16%)</title><rect x="70.6929%" y="1045" width="0.1618%" height="15" fill="rgb(224,220,25)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (6 samples, 0.16%)</title><rect x="70.6929%" y="1029" width="0.1618%" height="15" fill="rgb(239,133,26)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1039.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.16%)</title><rect x="70.6929%" y="1013" width="0.1618%" height="15" fill="rgb(211,94,48)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (6 samples, 0.16%)</title><rect x="70.6929%" y="997" width="0.1618%" height="15" fill="rgb(239,87,6)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="1007.50"></text></g><g><title>kvlr::connection::processor::read_processor::_{{closure}} (6 samples, 0.16%)</title><rect x="70.6929%" y="981" width="0.1618%" height="15" fill="rgb(227,62,0)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="991.50"></text></g><g><title>kvlr::connection::frame::Frame::read_from_stream::_{{closure}} (6 samples, 0.16%)</title><rect x="70.6929%" y="965" width="0.1618%" height="15" fill="rgb(211,226,4)" fg:x="2622" fg:w="6"/><text x="70.9429%" y="975.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.03%)</title><rect x="70.8277%" y="949" width="0.0270%" height="15" fill="rgb(253,38,52)" fg:x="2627" fg:w="1"/><text x="71.0777%" y="959.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.03%)</title><rect x="70.8277%" y="933" width="0.0270%" height="15" fill="rgb(229,126,40)" fg:x="2627" fg:w="1"/><text x="71.0777%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.03%)</title><rect x="70.8277%" y="917" width="0.0270%" height="15" fill="rgb(229,165,44)" fg:x="2627" fg:w="1"/><text x="71.0777%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="70.8277%" y="901" width="0.0270%" height="15" fill="rgb(247,95,47)" fg:x="2627" fg:w="1"/><text x="71.0777%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1 samples, 0.03%)</title><rect x="70.8277%" y="885" width="0.0270%" height="15" fill="rgb(216,140,30)" fg:x="2627" fg:w="1"/><text x="71.0777%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="70.8277%" y="869" width="0.0270%" height="15" fill="rgb(246,214,8)" fg:x="2627" fg:w="1"/><text x="71.0777%" y="879.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1 samples, 0.03%)</title><rect x="70.8277%" y="853" width="0.0270%" height="15" fill="rgb(227,224,15)" fg:x="2627" fg:w="1"/><text x="71.0777%" y="863.50"></text></g><g><title>__libc_calloc (1 samples, 0.03%)</title><rect x="70.8277%" y="837" width="0.0270%" height="15" fill="rgb(233,175,4)" fg:x="2627" fg:w="1"/><text x="71.0777%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="70.8277%" y="821" width="0.0270%" height="15" fill="rgb(221,66,45)" fg:x="2627" fg:w="1"/><text x="71.0777%" y="831.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (1 samples, 0.03%)</title><rect x="70.8547%" y="1237" width="0.0270%" height="15" fill="rgb(221,178,18)" fg:x="2628" fg:w="1"/><text x="71.1047%" y="1247.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1 samples, 0.03%)</title><rect x="70.8547%" y="1221" width="0.0270%" height="15" fill="rgb(213,81,29)" fg:x="2628" fg:w="1"/><text x="71.1047%" y="1231.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (1 samples, 0.03%)</title><rect x="70.8547%" y="1205" width="0.0270%" height="15" fill="rgb(220,89,49)" fg:x="2628" fg:w="1"/><text x="71.1047%" y="1215.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (1 samples, 0.03%)</title><rect x="70.8547%" y="1189" width="0.0270%" height="15" fill="rgb(227,60,33)" fg:x="2628" fg:w="1"/><text x="71.1047%" y="1199.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.03%)</title><rect x="70.8547%" y="1173" width="0.0270%" height="15" fill="rgb(205,113,12)" fg:x="2628" fg:w="1"/><text x="71.1047%" y="1183.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1 samples, 0.03%)</title><rect x="70.8547%" y="1157" width="0.0270%" height="15" fill="rgb(211,32,1)" fg:x="2628" fg:w="1"/><text x="71.1047%" y="1167.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1 samples, 0.03%)</title><rect x="70.8547%" y="1141" width="0.0270%" height="15" fill="rgb(246,2,12)" fg:x="2628" fg:w="1"/><text x="71.1047%" y="1151.50"></text></g><g><title>write (1 samples, 0.03%)</title><rect x="70.8547%" y="1125" width="0.0270%" height="15" fill="rgb(243,37,27)" fg:x="2628" fg:w="1"/><text x="71.1047%" y="1135.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="70.8547%" y="1109" width="0.0270%" height="15" fill="rgb(248,211,31)" fg:x="2628" fg:w="1"/><text x="71.1047%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="70.8816%" y="1173" width="0.0270%" height="15" fill="rgb(242,146,47)" fg:x="2629" fg:w="1"/><text x="71.1316%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="70.8816%" y="1157" width="0.0270%" height="15" fill="rgb(206,70,20)" fg:x="2629" fg:w="1"/><text x="71.1316%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (2 samples, 0.05%)</title><rect x="70.8816%" y="1189" width="0.0539%" height="15" fill="rgb(215,10,51)" fg:x="2629" fg:w="2"/><text x="71.1316%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.03%)</title><rect x="70.9086%" y="1173" width="0.0270%" height="15" fill="rgb(243,178,53)" fg:x="2630" fg:w="1"/><text x="71.1586%" y="1183.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (1 samples, 0.03%)</title><rect x="70.9086%" y="1157" width="0.0270%" height="15" fill="rgb(233,221,20)" fg:x="2630" fg:w="1"/><text x="71.1586%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.03%)</title><rect x="70.9086%" y="1141" width="0.0270%" height="15" fill="rgb(218,95,35)" fg:x="2630" fg:w="1"/><text x="71.1586%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.03%)</title><rect x="70.9086%" y="1125" width="0.0270%" height="15" fill="rgb(229,13,5)" fg:x="2630" fg:w="1"/><text x="71.1586%" y="1135.50"></text></g><g><title>futex_hash (2 samples, 0.05%)</title><rect x="71.0704%" y="1093" width="0.0539%" height="15" fill="rgb(252,164,30)" fg:x="2636" fg:w="2"/><text x="71.3204%" y="1103.50"></text></g><g><title>futex_wake_mark (3 samples, 0.08%)</title><rect x="71.1243%" y="1093" width="0.0809%" height="15" fill="rgb(232,68,36)" fg:x="2638" fg:w="3"/><text x="71.3743%" y="1103.50"></text></g><g><title>select_task_rq_fair (6 samples, 0.16%)</title><rect x="71.2321%" y="1061" width="0.1618%" height="15" fill="rgb(219,59,54)" fg:x="2642" fg:w="6"/><text x="71.4821%" y="1071.50"></text></g><g><title>task_h_load (1 samples, 0.03%)</title><rect x="71.3669%" y="1045" width="0.0270%" height="15" fill="rgb(250,92,33)" fg:x="2647" fg:w="1"/><text x="71.6169%" y="1055.50"></text></g><g><title>check_preempt_curr (5 samples, 0.13%)</title><rect x="71.3939%" y="1045" width="0.1348%" height="15" fill="rgb(229,162,54)" fg:x="2648" fg:w="5"/><text x="71.6439%" y="1055.50"></text></g><g><title>check_preempt_wakeup (4 samples, 0.11%)</title><rect x="71.4209%" y="1029" width="0.1078%" height="15" fill="rgb(244,114,52)" fg:x="2649" fg:w="4"/><text x="71.6709%" y="1039.50"></text></g><g><title>__pick_eevdf (4 samples, 0.11%)</title><rect x="71.4209%" y="1013" width="0.1078%" height="15" fill="rgb(212,211,43)" fg:x="2649" fg:w="4"/><text x="71.6709%" y="1023.50"></text></g><g><title>__enqueue_entity (1 samples, 0.03%)</title><rect x="71.6366%" y="997" width="0.0270%" height="15" fill="rgb(226,147,8)" fg:x="2657" fg:w="1"/><text x="71.8866%" y="1007.50"></text></g><g><title>place_entity (1 samples, 0.03%)</title><rect x="71.6635%" y="997" width="0.0270%" height="15" fill="rgb(226,23,13)" fg:x="2658" fg:w="1"/><text x="71.9135%" y="1007.50"></text></g><g><title>update_curr (3 samples, 0.08%)</title><rect x="71.6905%" y="997" width="0.0809%" height="15" fill="rgb(240,63,4)" fg:x="2659" fg:w="3"/><text x="71.9405%" y="1007.50"></text></g><g><title>update_min_vruntime (2 samples, 0.05%)</title><rect x="71.7174%" y="981" width="0.0539%" height="15" fill="rgb(221,1,32)" fg:x="2660" fg:w="2"/><text x="71.9674%" y="991.50"></text></g><g><title>enqueue_entity (6 samples, 0.16%)</title><rect x="71.6366%" y="1013" width="0.1618%" height="15" fill="rgb(242,117,10)" fg:x="2657" fg:w="6"/><text x="71.8866%" y="1023.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="71.7714%" y="997" width="0.0270%" height="15" fill="rgb(249,172,44)" fg:x="2662" fg:w="1"/><text x="72.0214%" y="1007.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="71.7714%" y="981" width="0.0270%" height="15" fill="rgb(244,46,45)" fg:x="2662" fg:w="1"/><text x="72.0214%" y="991.50"></text></g><g><title>avg_vruntime (2 samples, 0.05%)</title><rect x="71.8792%" y="997" width="0.0539%" height="15" fill="rgb(206,43,17)" fg:x="2666" fg:w="2"/><text x="72.1292%" y="1007.50"></text></g><g><title>reweight_entity (6 samples, 0.16%)</title><rect x="71.7983%" y="1013" width="0.1618%" height="15" fill="rgb(239,218,39)" fg:x="2663" fg:w="6"/><text x="72.0483%" y="1023.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="71.9331%" y="997" width="0.0270%" height="15" fill="rgb(208,169,54)" fg:x="2668" fg:w="1"/><text x="72.1831%" y="1007.50"></text></g><g><title>update_min_vruntime (1 samples, 0.03%)</title><rect x="71.9331%" y="981" width="0.0270%" height="15" fill="rgb(247,25,42)" fg:x="2668" fg:w="1"/><text x="72.1831%" y="991.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.03%)</title><rect x="72.0140%" y="997" width="0.0270%" height="15" fill="rgb(226,23,31)" fg:x="2671" fg:w="1"/><text x="72.2640%" y="1007.50"></text></g><g><title>enqueue_task_fair (21 samples, 0.57%)</title><rect x="71.5287%" y="1029" width="0.5662%" height="15" fill="rgb(247,16,28)" fg:x="2653" fg:w="21"/><text x="71.7787%" y="1039.50"></text></g><g><title>update_load_avg (5 samples, 0.13%)</title><rect x="71.9601%" y="1013" width="0.1348%" height="15" fill="rgb(231,147,38)" fg:x="2669" fg:w="5"/><text x="72.2101%" y="1023.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.05%)</title><rect x="72.0410%" y="997" width="0.0539%" height="15" fill="rgb(253,81,48)" fg:x="2672" fg:w="2"/><text x="72.2910%" y="1007.50"></text></g><g><title>ttwu_do_activate (32 samples, 0.86%)</title><rect x="71.3939%" y="1061" width="0.8628%" height="15" fill="rgb(249,222,43)" fg:x="2648" fg:w="32"/><text x="71.6439%" y="1071.50"></text></g><g><title>enqueue_task (27 samples, 0.73%)</title><rect x="71.5287%" y="1045" width="0.7280%" height="15" fill="rgb(221,3,27)" fg:x="2653" fg:w="27"/><text x="71.7787%" y="1055.50"></text></g><g><title>psi_task_change (6 samples, 0.16%)</title><rect x="72.0949%" y="1029" width="0.1618%" height="15" fill="rgb(228,180,5)" fg:x="2674" fg:w="6"/><text x="72.3449%" y="1039.50"></text></g><g><title>psi_group_change (4 samples, 0.11%)</title><rect x="72.1488%" y="1013" width="0.1078%" height="15" fill="rgb(227,131,42)" fg:x="2676" fg:w="4"/><text x="72.3988%" y="1023.50"></text></g><g><title>__x64_sys_futex (50 samples, 1.35%)</title><rect x="70.9625%" y="1141" width="1.3481%" height="15" fill="rgb(212,3,39)" fg:x="2632" fg:w="50"/><text x="71.2125%" y="1151.50"></text></g><g><title>do_futex (49 samples, 1.32%)</title><rect x="70.9895%" y="1125" width="1.3211%" height="15" fill="rgb(226,45,5)" fg:x="2633" fg:w="49"/><text x="71.2395%" y="1135.50"></text></g><g><title>futex_wake (48 samples, 1.29%)</title><rect x="71.0164%" y="1109" width="1.2941%" height="15" fill="rgb(215,167,45)" fg:x="2634" fg:w="48"/><text x="71.2664%" y="1119.50"></text></g><g><title>wake_up_q (41 samples, 1.11%)</title><rect x="71.2052%" y="1093" width="1.1054%" height="15" fill="rgb(250,218,53)" fg:x="2641" fg:w="41"/><text x="71.4552%" y="1103.50"></text></g><g><title>try_to_wake_up (41 samples, 1.11%)</title><rect x="71.2052%" y="1077" width="1.1054%" height="15" fill="rgb(207,140,0)" fg:x="2641" fg:w="41"/><text x="71.4552%" y="1087.50"></text></g><g><title>update_rq_clock (2 samples, 0.05%)</title><rect x="72.2567%" y="1061" width="0.0539%" height="15" fill="rgb(238,133,51)" fg:x="2680" fg:w="2"/><text x="72.5067%" y="1071.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.03%)</title><rect x="72.2836%" y="1045" width="0.0270%" height="15" fill="rgb(218,203,53)" fg:x="2681" fg:w="1"/><text x="72.5336%" y="1055.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.03%)</title><rect x="72.3106%" y="1109" width="0.0270%" height="15" fill="rgb(226,184,25)" fg:x="2682" fg:w="1"/><text x="72.5606%" y="1119.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.16%)</title><rect x="72.3376%" y="1077" width="0.1618%" height="15" fill="rgb(231,121,21)" fg:x="2683" fg:w="6"/><text x="72.5876%" y="1087.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.16%)</title><rect x="72.3376%" y="1061" width="0.1618%" height="15" fill="rgb(251,14,34)" fg:x="2683" fg:w="6"/><text x="72.5876%" y="1071.50"></text></g><g><title>perf_ctx_enable (6 samples, 0.16%)</title><rect x="72.3376%" y="1045" width="0.1618%" height="15" fill="rgb(249,193,11)" fg:x="2683" fg:w="6"/><text x="72.5876%" y="1055.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (6 samples, 0.16%)</title><rect x="72.3376%" y="1029" width="0.1618%" height="15" fill="rgb(220,172,37)" fg:x="2683" fg:w="6"/><text x="72.5876%" y="1039.50"></text></g><g><title>native_write_msr (6 samples, 0.16%)</title><rect x="72.3376%" y="1013" width="0.1618%" height="15" fill="rgb(231,229,43)" fg:x="2683" fg:w="6"/><text x="72.5876%" y="1023.50"></text></g><g><title>pick_next_entity.isra.0 (1 samples, 0.03%)</title><rect x="72.4993%" y="1061" width="0.0270%" height="15" fill="rgb(250,161,5)" fg:x="2689" fg:w="1"/><text x="72.7493%" y="1071.50"></text></g><g><title>__pick_eevdf (1 samples, 0.03%)</title><rect x="72.4993%" y="1045" width="0.0270%" height="15" fill="rgb(218,225,18)" fg:x="2689" fg:w="1"/><text x="72.7493%" y="1055.50"></text></g><g><title>entry_SYSCALL_64 (60 samples, 1.62%)</title><rect x="70.9356%" y="1173" width="1.6177%" height="15" fill="rgb(245,45,42)" fg:x="2631" fg:w="60"/><text x="71.1856%" y="1183.50"></text></g><g><title>do_syscall_64 (59 samples, 1.59%)</title><rect x="70.9625%" y="1157" width="1.5907%" height="15" fill="rgb(211,115,1)" fg:x="2632" fg:w="59"/><text x="71.2125%" y="1167.50"></text></g><g><title>syscall_exit_to_user_mode (9 samples, 0.24%)</title><rect x="72.3106%" y="1141" width="0.2427%" height="15" fill="rgb(248,133,52)" fg:x="2682" fg:w="9"/><text x="72.5606%" y="1151.50"></text></g><g><title>exit_to_user_mode_prepare (9 samples, 0.24%)</title><rect x="72.3106%" y="1125" width="0.2427%" height="15" fill="rgb(238,100,21)" fg:x="2682" fg:w="9"/><text x="72.5606%" y="1135.50"></text></g><g><title>schedule (8 samples, 0.22%)</title><rect x="72.3376%" y="1109" width="0.2157%" height="15" fill="rgb(247,144,11)" fg:x="2683" fg:w="8"/><text x="72.5876%" y="1119.50"></text></g><g><title>__schedule (8 samples, 0.22%)</title><rect x="72.3376%" y="1093" width="0.2157%" height="15" fill="rgb(206,164,16)" fg:x="2683" fg:w="8"/><text x="72.5876%" y="1103.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.05%)</title><rect x="72.4993%" y="1077" width="0.0539%" height="15" fill="rgb(222,34,3)" fg:x="2689" fg:w="2"/><text x="72.7493%" y="1087.50"></text></g><g><title>put_prev_entity (1 samples, 0.03%)</title><rect x="72.5263%" y="1061" width="0.0270%" height="15" fill="rgb(248,82,4)" fg:x="2690" fg:w="1"/><text x="72.7763%" y="1071.50"></text></g><g><title>min_deadline_cb_rotate (1 samples, 0.03%)</title><rect x="72.5263%" y="1045" width="0.0270%" height="15" fill="rgb(228,81,46)" fg:x="2690" fg:w="1"/><text x="72.7763%" y="1055.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (2 samples, 0.05%)</title><rect x="72.5532%" y="1173" width="0.0539%" height="15" fill="rgb(227,67,47)" fg:x="2691" fg:w="2"/><text x="72.8032%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (67 samples, 1.81%)</title><rect x="70.8816%" y="1205" width="1.8064%" height="15" fill="rgb(215,93,53)" fg:x="2629" fg:w="67"/><text x="71.1316%" y="1215.50">p..</text></g><g><title>syscall (65 samples, 1.75%)</title><rect x="70.9356%" y="1189" width="1.7525%" height="15" fill="rgb(248,194,39)" fg:x="2631" fg:w="65"/><text x="71.1856%" y="1199.50"></text></g><g><title>syscall_return_via_sysret (3 samples, 0.08%)</title><rect x="72.6072%" y="1173" width="0.0809%" height="15" fill="rgb(215,5,19)" fg:x="2693" fg:w="3"/><text x="72.8572%" y="1183.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="72.7420%" y="1077" width="0.0270%" height="15" fill="rgb(226,215,51)" fg:x="2698" fg:w="1"/><text x="72.9920%" y="1087.50"></text></g><g><title>__fdget_pos (2 samples, 0.05%)</title><rect x="72.9037%" y="1029" width="0.0539%" height="15" fill="rgb(225,56,26)" fg:x="2704" fg:w="2"/><text x="73.1537%" y="1039.50"></text></g><g><title>__fget_light (2 samples, 0.05%)</title><rect x="72.9037%" y="1013" width="0.0539%" height="15" fill="rgb(222,75,29)" fg:x="2704" fg:w="2"/><text x="73.1537%" y="1023.50"></text></g><g><title>fput (1 samples, 0.03%)</title><rect x="72.9577%" y="1029" width="0.0270%" height="15" fill="rgb(236,139,6)" fg:x="2706" fg:w="1"/><text x="73.2077%" y="1039.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.11%)</title><rect x="73.0925%" y="901" width="0.1078%" height="15" fill="rgb(223,137,36)" fg:x="2711" fg:w="4"/><text x="73.3425%" y="911.50"></text></g><g><title>available_idle_cpu (1 samples, 0.03%)</title><rect x="73.1734%" y="885" width="0.0270%" height="15" fill="rgb(226,99,2)" fg:x="2714" fg:w="1"/><text x="73.4234%" y="895.50"></text></g><g><title>check_preempt_wakeup (2 samples, 0.05%)</title><rect x="73.2003%" y="869" width="0.0539%" height="15" fill="rgb(206,133,23)" fg:x="2715" fg:w="2"/><text x="73.4503%" y="879.50"></text></g><g><title>__pick_eevdf (2 samples, 0.05%)</title><rect x="73.2003%" y="853" width="0.0539%" height="15" fill="rgb(243,173,15)" fg:x="2715" fg:w="2"/><text x="73.4503%" y="863.50"></text></g><g><title>resched_curr (1 samples, 0.03%)</title><rect x="73.2542%" y="869" width="0.0270%" height="15" fill="rgb(228,69,28)" fg:x="2717" fg:w="1"/><text x="73.5042%" y="879.50"></text></g><g><title>check_preempt_curr (4 samples, 0.11%)</title><rect x="73.2003%" y="885" width="0.1078%" height="15" fill="rgb(212,51,22)" fg:x="2715" fg:w="4"/><text x="73.4503%" y="895.50"></text></g><g><title>x2apic_send_IPI (1 samples, 0.03%)</title><rect x="73.2812%" y="869" width="0.0270%" height="15" fill="rgb(227,113,0)" fg:x="2718" fg:w="1"/><text x="73.5312%" y="879.50"></text></g><g><title>place_entity (1 samples, 0.03%)</title><rect x="73.3351%" y="837" width="0.0270%" height="15" fill="rgb(252,84,27)" fg:x="2720" fg:w="1"/><text x="73.5851%" y="847.50"></text></g><g><title>avg_vruntime (1 samples, 0.03%)</title><rect x="73.3351%" y="821" width="0.0270%" height="15" fill="rgb(223,145,39)" fg:x="2720" fg:w="1"/><text x="73.5851%" y="831.50"></text></g><g><title>enqueue_entity (2 samples, 0.05%)</title><rect x="73.3351%" y="853" width="0.0539%" height="15" fill="rgb(239,219,30)" fg:x="2720" fg:w="2"/><text x="73.5851%" y="863.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="73.3621%" y="837" width="0.0270%" height="15" fill="rgb(224,196,39)" fg:x="2721" fg:w="1"/><text x="73.6121%" y="847.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.03%)</title><rect x="73.3621%" y="821" width="0.0270%" height="15" fill="rgb(205,35,43)" fg:x="2721" fg:w="1"/><text x="73.6121%" y="831.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="73.3621%" y="805" width="0.0270%" height="15" fill="rgb(228,201,21)" fg:x="2721" fg:w="1"/><text x="73.6121%" y="815.50"></text></g><g><title>reweight_entity (1 samples, 0.03%)</title><rect x="73.3891%" y="853" width="0.0270%" height="15" fill="rgb(237,118,16)" fg:x="2722" fg:w="1"/><text x="73.6391%" y="863.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="73.3891%" y="837" width="0.0270%" height="15" fill="rgb(241,17,19)" fg:x="2722" fg:w="1"/><text x="73.6391%" y="847.50"></text></g><g><title>__calc_delta.constprop.0 (1 samples, 0.03%)</title><rect x="73.3891%" y="821" width="0.0270%" height="15" fill="rgb(214,10,25)" fg:x="2722" fg:w="1"/><text x="73.6391%" y="831.50"></text></g><g><title>update_cfs_group (1 samples, 0.03%)</title><rect x="73.4160%" y="853" width="0.0270%" height="15" fill="rgb(238,37,29)" fg:x="2723" fg:w="1"/><text x="73.6660%" y="863.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.19%)</title><rect x="73.3082%" y="869" width="0.1887%" height="15" fill="rgb(253,83,25)" fg:x="2719" fg:w="7"/><text x="73.5582%" y="879.50"></text></g><g><title>update_load_avg (2 samples, 0.05%)</title><rect x="73.4430%" y="853" width="0.0539%" height="15" fill="rgb(234,192,12)" fg:x="2724" fg:w="2"/><text x="73.6930%" y="863.50"></text></g><g><title>psi_group_change (3 samples, 0.08%)</title><rect x="73.5508%" y="853" width="0.0809%" height="15" fill="rgb(241,216,45)" fg:x="2728" fg:w="3"/><text x="73.8008%" y="863.50"></text></g><g><title>ttwu_do_activate (17 samples, 0.46%)</title><rect x="73.2003%" y="901" width="0.4583%" height="15" fill="rgb(242,22,33)" fg:x="2715" fg:w="17"/><text x="73.4503%" y="911.50"></text></g><g><title>enqueue_task (13 samples, 0.35%)</title><rect x="73.3082%" y="885" width="0.3505%" height="15" fill="rgb(231,105,49)" fg:x="2719" fg:w="13"/><text x="73.5582%" y="895.50"></text></g><g><title>psi_task_change (6 samples, 0.16%)</title><rect x="73.4969%" y="869" width="0.1618%" height="15" fill="rgb(218,204,15)" fg:x="2726" fg:w="6"/><text x="73.7469%" y="879.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="73.6317%" y="853" width="0.0270%" height="15" fill="rgb(235,138,41)" fg:x="2731" fg:w="1"/><text x="73.8817%" y="863.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="73.6317%" y="837" width="0.0270%" height="15" fill="rgb(246,0,9)" fg:x="2731" fg:w="1"/><text x="73.8817%" y="847.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="73.6317%" y="821" width="0.0270%" height="15" fill="rgb(210,74,4)" fg:x="2731" fg:w="1"/><text x="73.8817%" y="831.50"></text></g><g><title>__wake_up_common (25 samples, 0.67%)</title><rect x="73.0386%" y="997" width="0.6740%" height="15" fill="rgb(250,60,41)" fg:x="2709" fg:w="25"/><text x="73.2886%" y="1007.50"></text></g><g><title>ep_poll_callback (25 samples, 0.67%)</title><rect x="73.0386%" y="981" width="0.6740%" height="15" fill="rgb(220,115,12)" fg:x="2709" fg:w="25"/><text x="73.2886%" y="991.50"></text></g><g><title>__wake_up_common_lock (25 samples, 0.67%)</title><rect x="73.0386%" y="965" width="0.6740%" height="15" fill="rgb(237,100,13)" fg:x="2709" fg:w="25"/><text x="73.2886%" y="975.50"></text></g><g><title>__wake_up_common (25 samples, 0.67%)</title><rect x="73.0386%" y="949" width="0.6740%" height="15" fill="rgb(213,55,26)" fg:x="2709" fg:w="25"/><text x="73.2886%" y="959.50"></text></g><g><title>ep_autoremove_wake_function (24 samples, 0.65%)</title><rect x="73.0655%" y="933" width="0.6471%" height="15" fill="rgb(216,17,4)" fg:x="2710" fg:w="24"/><text x="73.3155%" y="943.50"></text></g><g><title>try_to_wake_up (24 samples, 0.65%)</title><rect x="73.0655%" y="917" width="0.6471%" height="15" fill="rgb(220,153,47)" fg:x="2710" fg:w="24"/><text x="73.3155%" y="927.50"></text></g><g><title>update_rq_clock (2 samples, 0.05%)</title><rect x="73.6587%" y="901" width="0.0539%" height="15" fill="rgb(215,131,9)" fg:x="2732" fg:w="2"/><text x="73.9087%" y="911.50"></text></g><g><title>eventfd_write (26 samples, 0.70%)</title><rect x="73.0386%" y="1013" width="0.7010%" height="15" fill="rgb(233,46,42)" fg:x="2709" fg:w="26"/><text x="73.2886%" y="1023.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="73.7126%" y="997" width="0.0270%" height="15" fill="rgb(226,86,7)" fg:x="2734" fg:w="1"/><text x="73.9626%" y="1007.50"></text></g><g><title>ksys_write (35 samples, 0.94%)</title><rect x="72.8768%" y="1045" width="0.9437%" height="15" fill="rgb(239,226,21)" fg:x="2703" fg:w="35"/><text x="73.1268%" y="1055.50"></text></g><g><title>vfs_write (31 samples, 0.84%)</title><rect x="72.9846%" y="1029" width="0.8358%" height="15" fill="rgb(244,137,22)" fg:x="2707" fg:w="31"/><text x="73.2346%" y="1039.50"></text></g><g><title>security_file_permission (3 samples, 0.08%)</title><rect x="73.7396%" y="1013" width="0.0809%" height="15" fill="rgb(211,139,35)" fg:x="2735" fg:w="3"/><text x="73.9896%" y="1023.50"></text></g><g><title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="73.7665%" y="997" width="0.0539%" height="15" fill="rgb(214,62,50)" fg:x="2736" fg:w="2"/><text x="74.0165%" y="1007.50"></text></g><g><title>aa_file_perm (2 samples, 0.05%)</title><rect x="73.7665%" y="981" width="0.0539%" height="15" fill="rgb(212,113,44)" fg:x="2736" fg:w="2"/><text x="74.0165%" y="991.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.03%)</title><rect x="73.8474%" y="1013" width="0.0270%" height="15" fill="rgb(226,150,43)" fg:x="2739" fg:w="1"/><text x="74.0974%" y="1023.50"></text></g><g><title>__get_user_8 (1 samples, 0.03%)</title><rect x="73.8474%" y="997" width="0.0270%" height="15" fill="rgb(250,71,37)" fg:x="2739" fg:w="1"/><text x="74.0974%" y="1007.50"></text></g><g><title>__switch_to (1 samples, 0.03%)</title><rect x="73.8744%" y="981" width="0.0270%" height="15" fill="rgb(219,76,19)" fg:x="2740" fg:w="1"/><text x="74.1244%" y="991.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="73.9013%" y="981" width="0.0270%" height="15" fill="rgb(250,39,11)" fg:x="2741" fg:w="1"/><text x="74.1513%" y="991.50"></text></g><g><title>schedule (3 samples, 0.08%)</title><rect x="73.8744%" y="1013" width="0.0809%" height="15" fill="rgb(230,64,31)" fg:x="2740" fg:w="3"/><text x="74.1244%" y="1023.50"></text></g><g><title>__schedule (3 samples, 0.08%)</title><rect x="73.8744%" y="997" width="0.0809%" height="15" fill="rgb(208,222,23)" fg:x="2740" fg:w="3"/><text x="74.1244%" y="1007.50"></text></g><g><title>switch_mm_irqs_off (1 samples, 0.03%)</title><rect x="73.9283%" y="981" width="0.0270%" height="15" fill="rgb(227,125,18)" fg:x="2742" fg:w="1"/><text x="74.1783%" y="991.50"></text></g><g><title>syscall_exit_to_user_mode (6 samples, 0.16%)</title><rect x="73.8204%" y="1045" width="0.1618%" height="15" fill="rgb(234,210,9)" fg:x="2738" fg:w="6"/><text x="74.0704%" y="1055.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.16%)</title><rect x="73.8204%" y="1029" width="0.1618%" height="15" fill="rgb(217,127,24)" fg:x="2738" fg:w="6"/><text x="74.0704%" y="1039.50"></text></g><g><title>switch_fpu_return (1 samples, 0.03%)</title><rect x="73.9552%" y="1013" width="0.0270%" height="15" fill="rgb(239,141,48)" fg:x="2743" fg:w="1"/><text x="74.2052%" y="1023.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.03%)</title><rect x="73.9552%" y="997" width="0.0270%" height="15" fill="rgb(227,109,8)" fg:x="2743" fg:w="1"/><text x="74.2052%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (46 samples, 1.24%)</title><rect x="72.7689%" y="1077" width="1.2402%" height="15" fill="rgb(235,184,23)" fg:x="2699" fg:w="46"/><text x="73.0189%" y="1087.50"></text></g><g><title>do_syscall_64 (42 samples, 1.13%)</title><rect x="72.8768%" y="1061" width="1.1324%" height="15" fill="rgb(227,226,48)" fg:x="2703" fg:w="42"/><text x="73.1268%" y="1071.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="73.9822%" y="1045" width="0.0270%" height="15" fill="rgb(206,150,11)" fg:x="2744" fg:w="1"/><text x="74.2322%" y="1055.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (8 samples, 0.22%)</title><rect x="74.0092%" y="1077" width="0.2157%" height="15" fill="rgb(254,2,33)" fg:x="2745" fg:w="8"/><text x="74.2592%" y="1087.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (63 samples, 1.70%)</title><rect x="72.6881%" y="1205" width="1.6986%" height="15" fill="rgb(243,160,20)" fg:x="2696" fg:w="63"/><text x="72.9381%" y="1215.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (63 samples, 1.70%)</title><rect x="72.6881%" y="1189" width="1.6986%" height="15" fill="rgb(218,208,30)" fg:x="2696" fg:w="63"/><text x="72.9381%" y="1199.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (63 samples, 1.70%)</title><rect x="72.6881%" y="1173" width="1.6986%" height="15" fill="rgb(224,120,49)" fg:x="2696" fg:w="63"/><text x="72.9381%" y="1183.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (63 samples, 1.70%)</title><rect x="72.6881%" y="1157" width="1.6986%" height="15" fill="rgb(246,12,2)" fg:x="2696" fg:w="63"/><text x="72.9381%" y="1167.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (62 samples, 1.67%)</title><rect x="72.7150%" y="1141" width="1.6716%" height="15" fill="rgb(236,117,3)" fg:x="2697" fg:w="62"/><text x="72.9650%" y="1151.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (62 samples, 1.67%)</title><rect x="72.7150%" y="1125" width="1.6716%" height="15" fill="rgb(216,128,52)" fg:x="2697" fg:w="62"/><text x="72.9650%" y="1135.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (62 samples, 1.67%)</title><rect x="72.7150%" y="1109" width="1.6716%" height="15" fill="rgb(246,145,19)" fg:x="2697" fg:w="62"/><text x="72.9650%" y="1119.50"></text></g><g><title>write (61 samples, 1.64%)</title><rect x="72.7420%" y="1093" width="1.6446%" height="15" fill="rgb(222,11,46)" fg:x="2698" fg:w="61"/><text x="72.9920%" y="1103.50"></text></g><g><title>syscall_return_via_sysret (6 samples, 0.16%)</title><rect x="74.2249%" y="1077" width="0.1618%" height="15" fill="rgb(245,82,36)" fg:x="2753" fg:w="6"/><text x="74.4749%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.03%)</title><rect x="74.3866%" y="1173" width="0.0270%" height="15" fill="rgb(250,73,51)" fg:x="2759" fg:w="1"/><text x="74.6366%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.03%)</title><rect x="74.3866%" y="1157" width="0.0270%" height="15" fill="rgb(221,189,23)" fg:x="2759" fg:w="1"/><text x="74.6366%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (2 samples, 0.05%)</title><rect x="74.3866%" y="1205" width="0.0539%" height="15" fill="rgb(210,33,7)" fg:x="2759" fg:w="2"/><text x="74.6366%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (2 samples, 0.05%)</title><rect x="74.3866%" y="1189" width="0.0539%" height="15" fill="rgb(210,107,22)" fg:x="2759" fg:w="2"/><text x="74.6366%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (1 samples, 0.03%)</title><rect x="74.4136%" y="1173" width="0.0270%" height="15" fill="rgb(222,116,37)" fg:x="2760" fg:w="1"/><text x="74.6636%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 0.03%)</title><rect x="74.4136%" y="1157" width="0.0270%" height="15" fill="rgb(254,17,48)" fg:x="2760" fg:w="1"/><text x="74.6636%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (1 samples, 0.03%)</title><rect x="74.4136%" y="1141" width="0.0270%" height="15" fill="rgb(224,36,32)" fg:x="2760" fg:w="1"/><text x="74.6636%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (133 samples, 3.59%)</title><rect x="70.8816%" y="1237" width="3.5859%" height="15" fill="rgb(232,90,46)" fg:x="2629" fg:w="133"/><text x="71.1316%" y="1247.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (133 samples, 3.59%)</title><rect x="70.8816%" y="1221" width="3.5859%" height="15" fill="rgb(241,66,40)" fg:x="2629" fg:w="133"/><text x="71.1316%" y="1231.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (1 samples, 0.03%)</title><rect x="74.4406%" y="1205" width="0.0270%" height="15" fill="rgb(249,184,29)" fg:x="2761" fg:w="1"/><text x="74.6906%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.03%)</title><rect x="74.4406%" y="1189" width="0.0270%" height="15" fill="rgb(231,181,1)" fg:x="2761" fg:w="1"/><text x="74.6906%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (1 samples, 0.03%)</title><rect x="74.4406%" y="1173" width="0.0270%" height="15" fill="rgb(224,94,2)" fg:x="2761" fg:w="1"/><text x="74.6906%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="74.4406%" y="1157" width="0.0270%" height="15" fill="rgb(229,170,15)" fg:x="2761" fg:w="1"/><text x="74.6906%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="74.4406%" y="1141" width="0.0270%" height="15" fill="rgb(240,127,35)" fg:x="2761" fg:w="1"/><text x="74.6906%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.03%)</title><rect x="74.6023%" y="1061" width="0.0270%" height="15" fill="rgb(248,196,34)" fg:x="2767" fg:w="1"/><text x="74.8523%" y="1071.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="74.6023%" y="1045" width="0.0270%" height="15" fill="rgb(236,137,7)" fg:x="2767" fg:w="1"/><text x="74.8523%" y="1055.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.03%)</title><rect x="74.6023%" y="1029" width="0.0270%" height="15" fill="rgb(235,127,16)" fg:x="2767" fg:w="1"/><text x="74.8523%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="74.6023%" y="1013" width="0.0270%" height="15" fill="rgb(250,192,54)" fg:x="2767" fg:w="1"/><text x="74.8523%" y="1023.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (1 samples, 0.03%)</title><rect x="74.6023%" y="997" width="0.0270%" height="15" fill="rgb(218,98,20)" fg:x="2767" fg:w="1"/><text x="74.8523%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="74.6023%" y="981" width="0.0270%" height="15" fill="rgb(230,176,47)" fg:x="2767" fg:w="1"/><text x="74.8523%" y="991.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="74.6023%" y="965" width="0.0270%" height="15" fill="rgb(244,2,33)" fg:x="2767" fg:w="1"/><text x="74.8523%" y="975.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="74.6023%" y="949" width="0.0270%" height="15" fill="rgb(231,100,17)" fg:x="2767" fg:w="1"/><text x="74.8523%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;std::collections::hash::map::HashMap&lt;kvlr::rpc::CallID,tokio::sync::oneshot::Sender&lt;core::result::Result&lt;alloc::vec::Vec&lt;u8&gt;,kvlr::rpc::InternalServerError&gt;&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="74.7910%" y="997" width="0.0270%" height="15" fill="rgb(245,23,12)" fg:x="2774" fg:w="1"/><text x="75.0410%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="74.7910%" y="981" width="0.0270%" height="15" fill="rgb(249,55,22)" fg:x="2774" fg:w="1"/><text x="75.0410%" y="991.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write_unlock (1 samples, 0.03%)</title><rect x="74.7910%" y="965" width="0.0270%" height="15" fill="rgb(207,134,9)" fg:x="2774" fg:w="1"/><text x="75.0410%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.03%)</title><rect x="74.7910%" y="949" width="0.0270%" height="15" fill="rgb(218,134,0)" fg:x="2774" fg:w="1"/><text x="75.0410%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.03%)</title><rect x="74.7910%" y="933" width="0.0270%" height="15" fill="rgb(213,212,33)" fg:x="2774" fg:w="1"/><text x="75.0410%" y="943.50"></text></g><g><title>rmp_serde::decode::Deserializer&lt;rmp_serde::decode::ReadReader&lt;R&gt;&gt;::new (1 samples, 0.03%)</title><rect x="74.8180%" y="981" width="0.0270%" height="15" fill="rgb(252,106,18)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="991.50"></text></g><g><title>rmp_serde::decode::ReadReader&lt;R&gt;::new (1 samples, 0.03%)</title><rect x="74.8180%" y="965" width="0.0270%" height="15" fill="rgb(208,126,42)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="74.8180%" y="949" width="0.0270%" height="15" fill="rgb(246,175,29)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="74.8180%" y="933" width="0.0270%" height="15" fill="rgb(215,13,50)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="74.8180%" y="917" width="0.0270%" height="15" fill="rgb(216,172,15)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="74.8180%" y="901" width="0.0270%" height="15" fill="rgb(212,103,13)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="74.8180%" y="885" width="0.0270%" height="15" fill="rgb(231,171,36)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="74.8180%" y="869" width="0.0270%" height="15" fill="rgb(250,123,20)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="74.8180%" y="853" width="0.0270%" height="15" fill="rgb(212,53,50)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="863.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="74.8180%" y="837" width="0.0270%" height="15" fill="rgb(243,54,12)" fg:x="2775" fg:w="1"/><text x="75.0680%" y="847.50"></text></g><g><title>rmp_serde::decode::Deserializer&lt;R,C&gt;::take_or_read_marker (2 samples, 0.05%)</title><rect x="74.8719%" y="821" width="0.0539%" height="15" fill="rgb(234,101,34)" fg:x="2777" fg:w="2"/><text x="75.1219%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.05%)</title><rect x="74.8719%" y="805" width="0.0539%" height="15" fill="rgb(254,67,22)" fg:x="2777" fg:w="2"/><text x="75.1219%" y="815.50"></text></g><g><title>&lt;&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::Field as serde::de::Deserialize&gt;::deserialize::FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.03%)</title><rect x="74.9259%" y="805" width="0.0270%" height="15" fill="rgb(250,35,47)" fg:x="2779" fg:w="1"/><text x="75.1759%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.03%)</title><rect x="74.9259%" y="789" width="0.0270%" height="15" fill="rgb(226,126,38)" fg:x="2779" fg:w="1"/><text x="75.1759%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.03%)</title><rect x="74.9259%" y="773" width="0.0270%" height="15" fill="rgb(216,138,53)" fg:x="2779" fg:w="1"/><text x="75.1759%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1 samples, 0.03%)</title><rect x="74.9259%" y="757" width="0.0270%" height="15" fill="rgb(246,199,43)" fg:x="2779" fg:w="1"/><text x="75.1759%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.03%)</title><rect x="74.9259%" y="741" width="0.0270%" height="15" fill="rgb(232,125,11)" fg:x="2779" fg:w="1"/><text x="75.1759%" y="751.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.03%)</title><rect x="74.9528%" y="805" width="0.0270%" height="15" fill="rgb(218,219,45)" fg:x="2780" fg:w="1"/><text x="75.2028%" y="815.50"></text></g><g><title>serde::de::EnumAccess::variant (9 samples, 0.24%)</title><rect x="74.8450%" y="933" width="0.2427%" height="15" fill="rgb(216,102,54)" fg:x="2776" fg:w="9"/><text x="75.0950%" y="943.50"></text></g><g><title>&lt;rmp_serde::decode::VariantAccess&lt;R,C&gt; as serde::de::EnumAccess&gt;::variant_seed (9 samples, 0.24%)</title><rect x="74.8450%" y="917" width="0.2427%" height="15" fill="rgb(250,228,7)" fg:x="2776" fg:w="9"/><text x="75.0950%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.24%)</title><rect x="74.8450%" y="901" width="0.2427%" height="15" fill="rgb(226,125,25)" fg:x="2776" fg:w="9"/><text x="75.0950%" y="911.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::Field as serde::de::Deserialize&gt;::deserialize (9 samples, 0.24%)</title><rect x="74.8450%" y="885" width="0.2427%" height="15" fill="rgb(224,165,27)" fg:x="2776" fg:w="9"/><text x="75.0950%" y="895.50"></text></g><g><title>&lt;&amp;mut rmp_serde::decode::Deserializer&lt;R,C&gt; as serde::de::Deserializer&gt;::deserialize_identifier (9 samples, 0.24%)</title><rect x="74.8450%" y="869" width="0.2427%" height="15" fill="rgb(233,86,3)" fg:x="2776" fg:w="9"/><text x="75.0950%" y="879.50"></text></g><g><title>&lt;&amp;mut rmp_serde::decode::Deserializer&lt;R,C&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.24%)</title><rect x="74.8450%" y="853" width="0.2427%" height="15" fill="rgb(228,116,20)" fg:x="2776" fg:w="9"/><text x="75.0950%" y="863.50"></text></g><g><title>rmp_serde::decode::Deserializer&lt;R,C&gt;::any_inner (9 samples, 0.24%)</title><rect x="74.8450%" y="837" width="0.2427%" height="15" fill="rgb(209,192,17)" fg:x="2776" fg:w="9"/><text x="75.0950%" y="847.50"></text></g><g><title>rmp_serde::decode::read_str_data (6 samples, 0.16%)</title><rect x="74.9259%" y="821" width="0.1618%" height="15" fill="rgb(224,88,34)" fg:x="2779" fg:w="6"/><text x="75.1759%" y="831.50"></text></g><g><title>rmp_serde::decode::read_bin_data (4 samples, 0.11%)</title><rect x="74.9798%" y="805" width="0.1078%" height="15" fill="rgb(233,38,6)" fg:x="2781" fg:w="4"/><text x="75.2298%" y="815.50"></text></g><g><title>&lt;rmp_serde::decode::ReadReader&lt;R&gt; as rmp_serde::decode::ReadSlice&gt;::read_slice (3 samples, 0.08%)</title><rect x="75.0067%" y="789" width="0.0809%" height="15" fill="rgb(212,59,30)" fg:x="2782" fg:w="3"/><text x="75.2567%" y="799.50"></text></g><g><title>std::io::Read::read_to_end (3 samples, 0.08%)</title><rect x="75.0067%" y="773" width="0.0809%" height="15" fill="rgb(213,80,3)" fg:x="2782" fg:w="3"/><text x="75.2567%" y="783.50"></text></g><g><title>std::io::default_read_to_end (3 samples, 0.08%)</title><rect x="75.0067%" y="757" width="0.0809%" height="15" fill="rgb(251,178,7)" fg:x="2782" fg:w="3"/><text x="75.2567%" y="767.50"></text></g><g><title>rmp_serde::decode::Deserializer&lt;R,C&gt;::take_or_read_marker (2 samples, 0.05%)</title><rect x="75.1146%" y="725" width="0.0539%" height="15" fill="rgb(213,154,26)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.05%)</title><rect x="75.1146%" y="709" width="0.0539%" height="15" fill="rgb(238,165,49)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="719.50"></text></g><g><title>rmp_serde::decode::Deserializer&lt;R,C&gt;::take_or_read_marker::_{{closure}} (2 samples, 0.05%)</title><rect x="75.1146%" y="693" width="0.0539%" height="15" fill="rgb(248,91,46)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="703.50"></text></g><g><title>rmp::decode::read_marker (2 samples, 0.05%)</title><rect x="75.1146%" y="677" width="0.0539%" height="15" fill="rgb(244,21,52)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="687.50"></text></g><g><title>rmp::decode::RmpRead::read_u8 (2 samples, 0.05%)</title><rect x="75.1146%" y="661" width="0.0539%" height="15" fill="rgb(247,122,20)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="671.50"></text></g><g><title>&lt;T as rmp::decode::RmpRead&gt;::read_exact_buf (2 samples, 0.05%)</title><rect x="75.1146%" y="645" width="0.0539%" height="15" fill="rgb(218,27,9)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="655.50"></text></g><g><title>&lt;rmp_serde::decode::ReadReader&lt;R&gt; as std::io::Read&gt;::read_exact (2 samples, 0.05%)</title><rect x="75.1146%" y="629" width="0.0539%" height="15" fill="rgb(246,7,6)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_exact (2 samples, 0.05%)</title><rect x="75.1146%" y="613" width="0.0539%" height="15" fill="rgb(227,135,54)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="623.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (2 samples, 0.05%)</title><rect x="75.1146%" y="597" width="0.0539%" height="15" fill="rgb(247,14,11)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="607.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (2 samples, 0.05%)</title><rect x="75.1146%" y="581" width="0.0539%" height="15" fill="rgb(206,149,34)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="591.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (2 samples, 0.05%)</title><rect x="75.1146%" y="565" width="0.0539%" height="15" fill="rgb(227,228,4)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (2 samples, 0.05%)</title><rect x="75.1146%" y="549" width="0.0539%" height="15" fill="rgb(238,218,28)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.05%)</title><rect x="75.1146%" y="533" width="0.0539%" height="15" fill="rgb(252,86,40)" fg:x="2786" fg:w="2"/><text x="75.3646%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.08%)</title><rect x="75.1146%" y="837" width="0.0809%" height="15" fill="rgb(251,225,11)" fg:x="2786" fg:w="3"/><text x="75.3646%" y="847.50"></text></g><g><title>&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (3 samples, 0.08%)</title><rect x="75.1146%" y="821" width="0.0809%" height="15" fill="rgb(206,46,49)" fg:x="2786" fg:w="3"/><text x="75.3646%" y="831.50"></text></g><g><title>serde::de::SeqAccess::next_element (3 samples, 0.08%)</title><rect x="75.1146%" y="805" width="0.0809%" height="15" fill="rgb(245,128,24)" fg:x="2786" fg:w="3"/><text x="75.3646%" y="815.50"></text></g><g><title>&lt;rmp_serde::decode::SeqAccess&lt;R,C&gt; as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 0.08%)</title><rect x="75.1146%" y="789" width="0.0809%" height="15" fill="rgb(219,177,34)" fg:x="2786" fg:w="3"/><text x="75.3646%" y="799.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.08%)</title><rect x="75.1146%" y="773" width="0.0809%" height="15" fill="rgb(218,60,48)" fg:x="2786" fg:w="3"/><text x="75.3646%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (3 samples, 0.08%)</title><rect x="75.1146%" y="757" width="0.0809%" height="15" fill="rgb(221,11,5)" fg:x="2786" fg:w="3"/><text x="75.3646%" y="767.50"></text></g><g><title>&lt;&amp;mut rmp_serde::decode::Deserializer&lt;R,C&gt; as serde::de::Deserializer&gt;::deserialize_u8 (3 samples, 0.08%)</title><rect x="75.1146%" y="741" width="0.0809%" height="15" fill="rgb(220,148,13)" fg:x="2786" fg:w="3"/><text x="75.3646%" y="751.50"></text></g><g><title>rmp_serde::decode::any_num (1 samples, 0.03%)</title><rect x="75.1685%" y="725" width="0.0270%" height="15" fill="rgb(210,16,3)" fg:x="2788" fg:w="1"/><text x="75.4185%" y="735.50"></text></g><g><title>rmp::decode::RmpRead::read_data_u8 (1 samples, 0.03%)</title><rect x="75.1685%" y="709" width="0.0270%" height="15" fill="rgb(236,80,2)" fg:x="2788" fg:w="1"/><text x="75.4185%" y="719.50"></text></g><g><title>rmp::decode::RmpRead::read_u8 (1 samples, 0.03%)</title><rect x="75.1685%" y="693" width="0.0270%" height="15" fill="rgb(239,129,19)" fg:x="2788" fg:w="1"/><text x="75.4185%" y="703.50"></text></g><g><title>&lt;T as rmp::decode::RmpRead&gt;::read_exact_buf (1 samples, 0.03%)</title><rect x="75.1685%" y="677" width="0.0270%" height="15" fill="rgb(220,106,35)" fg:x="2788" fg:w="1"/><text x="75.4185%" y="687.50"></text></g><g><title>&lt;rmp_serde::decode::ReadReader&lt;R&gt; as std::io::Read&gt;::read_exact (1 samples, 0.03%)</title><rect x="75.1685%" y="661" width="0.0270%" height="15" fill="rgb(252,139,45)" fg:x="2788" fg:w="1"/><text x="75.4185%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_exact (1 samples, 0.03%)</title><rect x="75.1685%" y="645" width="0.0270%" height="15" fill="rgb(229,8,36)" fg:x="2788" fg:w="1"/><text x="75.4185%" y="655.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (1 samples, 0.03%)</title><rect x="75.1685%" y="629" width="0.0270%" height="15" fill="rgb(230,126,33)" fg:x="2788" fg:w="1"/><text x="75.4185%" y="639.50"></text></g><g><title>rmp_serde::decode::from_read (16 samples, 0.43%)</title><rect x="74.8180%" y="997" width="0.4314%" height="15" fill="rgb(239,140,21)" fg:x="2775" fg:w="16"/><text x="75.0680%" y="1007.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize (15 samples, 0.40%)</title><rect x="74.8450%" y="981" width="0.4044%" height="15" fill="rgb(254,104,9)" fg:x="2776" fg:w="15"/><text x="75.0950%" y="991.50"></text></g><g><title>&lt;&amp;mut rmp_serde::decode::Deserializer&lt;R,C&gt; as serde::de::Deserializer&gt;::deserialize_enum (15 samples, 0.40%)</title><rect x="74.8450%" y="965" width="0.4044%" height="15" fill="rgb(239,52,14)" fg:x="2776" fg:w="15"/><text x="75.0950%" y="975.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::ResultVisitor&lt;T,E&gt; as serde::de::Visitor&gt;::visit_enum (15 samples, 0.40%)</title><rect x="74.8450%" y="949" width="0.4044%" height="15" fill="rgb(208,227,44)" fg:x="2776" fg:w="15"/><text x="75.0950%" y="959.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (6 samples, 0.16%)</title><rect x="75.0876%" y="933" width="0.1618%" height="15" fill="rgb(246,18,19)" fg:x="2785" fg:w="6"/><text x="75.3376%" y="943.50"></text></g><g><title>&lt;rmp_serde::decode::VariantAccess&lt;R,C&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (6 samples, 0.16%)</title><rect x="75.0876%" y="917" width="0.1618%" height="15" fill="rgb(235,228,25)" fg:x="2785" fg:w="6"/><text x="75.3376%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.16%)</title><rect x="75.0876%" y="901" width="0.1618%" height="15" fill="rgb(240,156,20)" fg:x="2785" fg:w="6"/><text x="75.3376%" y="911.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (6 samples, 0.16%)</title><rect x="75.0876%" y="885" width="0.1618%" height="15" fill="rgb(224,8,20)" fg:x="2785" fg:w="6"/><text x="75.3376%" y="895.50"></text></g><g><title>&lt;&amp;mut rmp_serde::decode::Deserializer&lt;R,C&gt; as serde::de::Deserializer&gt;::deserialize_seq (6 samples, 0.16%)</title><rect x="75.0876%" y="869" width="0.1618%" height="15" fill="rgb(214,12,52)" fg:x="2785" fg:w="6"/><text x="75.3376%" y="879.50"></text></g><g><title>rmp_serde::decode::Deserializer&lt;R,C&gt;::any_inner (6 samples, 0.16%)</title><rect x="75.0876%" y="853" width="0.1618%" height="15" fill="rgb(211,220,47)" fg:x="2785" fg:w="6"/><text x="75.3376%" y="863.50"></text></g><g><title>rmp_serde::decode::Deserializer&lt;R,C&gt;::take_or_read_marker (2 samples, 0.05%)</title><rect x="75.1955%" y="837" width="0.0539%" height="15" fill="rgb(250,173,5)" fg:x="2789" fg:w="2"/><text x="75.4455%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.05%)</title><rect x="75.1955%" y="821" width="0.0539%" height="15" fill="rgb(250,125,52)" fg:x="2789" fg:w="2"/><text x="75.4455%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (3 samples, 0.08%)</title><rect x="75.2494%" y="997" width="0.0809%" height="15" fill="rgb(209,133,18)" fg:x="2791" fg:w="3"/><text x="75.4994%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (3 samples, 0.08%)</title><rect x="75.2494%" y="981" width="0.0809%" height="15" fill="rgb(216,173,22)" fg:x="2791" fg:w="3"/><text x="75.4994%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (3 samples, 0.08%)</title><rect x="75.2494%" y="965" width="0.0809%" height="15" fill="rgb(205,3,22)" fg:x="2791" fg:w="3"/><text x="75.4994%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (3 samples, 0.08%)</title><rect x="75.2494%" y="949" width="0.0809%" height="15" fill="rgb(248,22,20)" fg:x="2791" fg:w="3"/><text x="75.4994%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.08%)</title><rect x="75.2494%" y="933" width="0.0809%" height="15" fill="rgb(233,6,29)" fg:x="2791" fg:w="3"/><text x="75.4994%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.08%)</title><rect x="75.2494%" y="917" width="0.0809%" height="15" fill="rgb(240,22,54)" fg:x="2791" fg:w="3"/><text x="75.4994%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="75.3033%" y="901" width="0.0270%" height="15" fill="rgb(231,133,32)" fg:x="2793" fg:w="1"/><text x="75.5533%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="75.3033%" y="885" width="0.0270%" height="15" fill="rgb(248,193,4)" fg:x="2793" fg:w="1"/><text x="75.5533%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="75.3033%" y="869" width="0.0270%" height="15" fill="rgb(211,178,46)" fg:x="2793" fg:w="1"/><text x="75.5533%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;alloc::vec::Vec&lt;u8&gt;,kvlr::rpc::InternalServerError&gt;&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="75.3303%" y="981" width="0.0539%" height="15" fill="rgb(224,5,42)" fg:x="2794" fg:w="2"/><text x="75.5803%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="75.3303%" y="965" width="0.0539%" height="15" fill="rgb(239,176,25)" fg:x="2794" fg:w="2"/><text x="75.5803%" y="975.50"></text></g><g><title>cfree (2 samples, 0.05%)</title><rect x="75.3303%" y="949" width="0.0539%" height="15" fill="rgb(245,187,50)" fg:x="2794" fg:w="2"/><text x="75.5803%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="75.3303%" y="933" width="0.0539%" height="15" fill="rgb(248,24,15)" fg:x="2794" fg:w="2"/><text x="75.5803%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (28 samples, 0.75%)</title><rect x="74.6562%" y="1045" width="0.7549%" height="15" fill="rgb(205,166,13)" fg:x="2769" fg:w="28"/><text x="74.9062%" y="1055.50"></text></g><g><title>&lt;kvlr::rpc::protocol_handler::RpcProtocolHandler as kvlr::connection::protocol_handler::ProtocolHandler&gt;::handle_frame::_{{closure}} (28 samples, 0.75%)</title><rect x="74.6562%" y="1029" width="0.7549%" height="15" fill="rgb(208,114,23)" fg:x="2769" fg:w="28"/><text x="74.9062%" y="1039.50"></text></g><g><title>kvlr::rpc::protocol_handler::RpcProtocolHandler::handle_response::_{{closure}} (23 samples, 0.62%)</title><rect x="74.7910%" y="1013" width="0.6201%" height="15" fill="rgb(239,127,18)" fg:x="2774" fg:w="23"/><text x="75.0410%" y="1023.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (3 samples, 0.08%)</title><rect x="75.3303%" y="997" width="0.0809%" height="15" fill="rgb(219,154,28)" fg:x="2794" fg:w="3"/><text x="75.5803%" y="1007.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.03%)</title><rect x="75.3842%" y="981" width="0.0270%" height="15" fill="rgb(225,157,23)" fg:x="2796" fg:w="1"/><text x="75.6342%" y="991.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::_{{closure}} (1 samples, 0.03%)</title><rect x="75.3842%" y="965" width="0.0270%" height="15" fill="rgb(219,8,6)" fg:x="2796" fg:w="1"/><text x="75.6342%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;alloc::vec::Vec&lt;u8&gt;,kvlr::rpc::InternalServerError&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="75.3842%" y="949" width="0.0270%" height="15" fill="rgb(212,47,6)" fg:x="2796" fg:w="1"/><text x="75.6342%" y="959.50"></text></g><g><title>&lt;kvlr::rpc::protocol_handler::RpcProtocolHandler as kvlr::connection::protocol_handler::ProtocolHandler&gt;::handle_frame (1 samples, 0.03%)</title><rect x="75.4112%" y="1045" width="0.0270%" height="15" fill="rgb(224,190,4)" fg:x="2797" fg:w="1"/><text x="75.6612%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.03%)</title><rect x="75.4112%" y="1029" width="0.0270%" height="15" fill="rgb(239,183,29)" fg:x="2797" fg:w="1"/><text x="75.6612%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="75.4112%" y="1013" width="0.0270%" height="15" fill="rgb(213,57,7)" fg:x="2797" fg:w="1"/><text x="75.6612%" y="1023.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="75.4112%" y="997" width="0.0270%" height="15" fill="rgb(216,148,1)" fg:x="2797" fg:w="1"/><text x="75.6612%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="75.4112%" y="981" width="0.0270%" height="15" fill="rgb(236,182,29)" fg:x="2797" fg:w="1"/><text x="75.6612%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="75.4112%" y="965" width="0.0270%" height="15" fill="rgb(244,120,48)" fg:x="2797" fg:w="1"/><text x="75.6612%" y="975.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="75.4112%" y="949" width="0.0270%" height="15" fill="rgb(206,71,34)" fg:x="2797" fg:w="1"/><text x="75.6612%" y="959.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="75.4112%" y="933" width="0.0270%" height="15" fill="rgb(242,32,6)" fg:x="2797" fg:w="1"/><text x="75.6612%" y="943.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="75.4381%" y="965" width="0.0270%" height="15" fill="rgb(241,35,3)" fg:x="2798" fg:w="1"/><text x="75.6881%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = ()+core::marker::Send&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="75.4381%" y="1045" width="0.0539%" height="15" fill="rgb(222,62,19)" fg:x="2798" fg:w="2"/><text x="75.6881%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = ()+core::marker::Send&gt;&gt; (2 samples, 0.05%)</title><rect x="75.4381%" y="1029" width="0.0539%" height="15" fill="rgb(223,110,41)" fg:x="2798" fg:w="2"/><text x="75.6881%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="75.4381%" y="1013" width="0.0539%" height="15" fill="rgb(208,224,4)" fg:x="2798" fg:w="2"/><text x="75.6881%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="75.4381%" y="997" width="0.0539%" height="15" fill="rgb(241,137,19)" fg:x="2798" fg:w="2"/><text x="75.6881%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="75.4381%" y="981" width="0.0539%" height="15" fill="rgb(244,24,17)" fg:x="2798" fg:w="2"/><text x="75.6881%" y="991.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="75.4651%" y="965" width="0.0270%" height="15" fill="rgb(245,178,49)" fg:x="2799" fg:w="1"/><text x="75.7151%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="75.4651%" y="949" width="0.0270%" height="15" fill="rgb(219,160,38)" fg:x="2799" fg:w="1"/><text x="75.7151%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;kvlr::connection::frame::Frame&gt; (1 samples, 0.03%)</title><rect x="75.4920%" y="1045" width="0.0270%" height="15" fill="rgb(228,137,14)" fg:x="2800" fg:w="1"/><text x="75.7420%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="75.4920%" y="1029" width="0.0270%" height="15" fill="rgb(237,134,11)" fg:x="2800" fg:w="1"/><text x="75.7420%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="75.4920%" y="1013" width="0.0270%" height="15" fill="rgb(211,126,44)" fg:x="2800" fg:w="1"/><text x="75.7420%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="75.4920%" y="997" width="0.0270%" height="15" fill="rgb(226,171,33)" fg:x="2800" fg:w="1"/><text x="75.7420%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="75.4920%" y="981" width="0.0270%" height="15" fill="rgb(253,99,13)" fg:x="2800" fg:w="1"/><text x="75.7420%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="75.4920%" y="965" width="0.0270%" height="15" fill="rgb(244,48,7)" fg:x="2800" fg:w="1"/><text x="75.7420%" y="975.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="75.4920%" y="949" width="0.0270%" height="15" fill="rgb(244,217,54)" fg:x="2800" fg:w="1"/><text x="75.7420%" y="959.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="75.5999%" y="1029" width="0.0270%" height="15" fill="rgb(224,15,18)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="1039.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="75.5999%" y="1013" width="0.0270%" height="15" fill="rgb(244,99,12)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="1023.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="75.5999%" y="997" width="0.0270%" height="15" fill="rgb(233,226,8)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="1007.50"></text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (1 samples, 0.03%)</title><rect x="75.5999%" y="981" width="0.0270%" height="15" fill="rgb(229,211,3)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="991.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (1 samples, 0.03%)</title><rect x="75.5999%" y="965" width="0.0270%" height="15" fill="rgb(216,140,21)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="75.5999%" y="949" width="0.0270%" height="15" fill="rgb(234,122,30)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="959.50"></text></g><g><title>&lt;tokio_rustls::client::TlsStream&lt;IO&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="75.5999%" y="933" width="0.0270%" height="15" fill="rgb(236,25,46)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="943.50"></text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="75.5999%" y="917" width="0.0270%" height="15" fill="rgb(217,52,54)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="927.50"></text></g><g><title>&lt;rustls::conn::connection::Reader as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="75.5999%" y="901" width="0.0270%" height="15" fill="rgb(222,29,26)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="911.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::read (1 samples, 0.03%)</title><rect x="75.5999%" y="885" width="0.0270%" height="15" fill="rgb(216,177,29)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="895.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::consume (1 samples, 0.03%)</title><rect x="75.5999%" y="869" width="0.0270%" height="15" fill="rgb(247,136,51)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="75.5999%" y="853" width="0.0270%" height="15" fill="rgb(231,47,47)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="75.5999%" y="837" width="0.0270%" height="15" fill="rgb(211,192,36)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="75.5999%" y="821" width="0.0270%" height="15" fill="rgb(229,156,32)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="75.5999%" y="805" width="0.0270%" height="15" fill="rgb(248,213,20)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="75.5999%" y="789" width="0.0270%" height="15" fill="rgb(217,64,7)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="799.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="75.5999%" y="773" width="0.0270%" height="15" fill="rgb(232,142,8)" fg:x="2804" fg:w="1"/><text x="75.8499%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="75.6269%" y="981" width="0.0270%" height="15" fill="rgb(224,92,44)" fg:x="2805" fg:w="1"/><text x="75.8769%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="75.6269%" y="965" width="0.0270%" height="15" fill="rgb(214,169,17)" fg:x="2805" fg:w="1"/><text x="75.8769%" y="975.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="75.6269%" y="949" width="0.0270%" height="15" fill="rgb(210,59,37)" fg:x="2805" fg:w="1"/><text x="75.8769%" y="959.50"></text></g><g><title>rustls::conn::connection::Reader::check_no_bytes_state (1 samples, 0.03%)</title><rect x="75.7347%" y="885" width="0.0270%" height="15" fill="rgb(214,116,48)" fg:x="2809" fg:w="1"/><text x="75.9847%" y="895.50"></text></g><g><title>&lt;rustls::conn::connection::Reader as std::io::Read&gt;::read (2 samples, 0.05%)</title><rect x="75.7347%" y="901" width="0.0539%" height="15" fill="rgb(244,191,6)" fg:x="2809" fg:w="2"/><text x="75.9847%" y="911.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::read (1 samples, 0.03%)</title><rect x="75.7617%" y="885" width="0.0270%" height="15" fill="rgb(241,50,52)" fg:x="2810" fg:w="1"/><text x="76.0117%" y="895.50"></text></g><g><title>rustls::common_state::CommonState::wants_read (2 samples, 0.05%)</title><rect x="75.7886%" y="901" width="0.0539%" height="15" fill="rgb(236,75,39)" fg:x="2811" fg:w="2"/><text x="76.0386%" y="911.50"></text></g><g><title>rustls::common_state::CommonState::current_io_state (1 samples, 0.03%)</title><rect x="75.8965%" y="853" width="0.0270%" height="15" fill="rgb(236,99,0)" fg:x="2815" fg:w="1"/><text x="76.1465%" y="863.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::len (1 samples, 0.03%)</title><rect x="75.8965%" y="837" width="0.0270%" height="15" fill="rgb(207,202,15)" fg:x="2815" fg:w="1"/><text x="76.1465%" y="847.50"></text></g><g><title>&lt;&amp;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="75.8965%" y="821" width="0.0270%" height="15" fill="rgb(233,207,14)" fg:x="2815" fg:w="1"/><text x="76.1465%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::iter (1 samples, 0.03%)</title><rect x="75.8965%" y="805" width="0.0270%" height="15" fill="rgb(226,27,51)" fg:x="2815" fg:w="1"/><text x="76.1465%" y="815.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_slices (1 samples, 0.03%)</title><rect x="75.8965%" y="789" width="0.0270%" height="15" fill="rgb(206,104,42)" fg:x="2815" fg:w="1"/><text x="76.1465%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::slice_ranges (1 samples, 0.03%)</title><rect x="75.8965%" y="773" width="0.0270%" height="15" fill="rgb(212,225,4)" fg:x="2815" fg:w="1"/><text x="76.1465%" y="783.50"></text></g><g><title>&lt;rustls::enums::ProtocolVersion as core::convert::From&lt;u16&gt;&gt;::from (1 samples, 0.03%)</title><rect x="76.0582%" y="773" width="0.0270%" height="15" fill="rgb(233,96,42)" fg:x="2821" fg:w="1"/><text x="76.3082%" y="783.50"></text></g><g><title>&lt;rustls::msgs::deframer::DeframerIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.13%)</title><rect x="75.9774%" y="821" width="0.1348%" height="15" fill="rgb(229,21,32)" fg:x="2818" fg:w="5"/><text x="76.2274%" y="831.50"></text></g><g><title>rustls::msgs::message::outbound::read_opaque_message_header (4 samples, 0.11%)</title><rect x="76.0043%" y="805" width="0.1078%" height="15" fill="rgb(226,216,24)" fg:x="2819" fg:w="4"/><text x="76.2543%" y="815.50"></text></g><g><title>&lt;rustls::enums::ProtocolVersion as rustls::msgs::codec::Codec&gt;::read (2 samples, 0.05%)</title><rect x="76.0582%" y="789" width="0.0539%" height="15" fill="rgb(221,163,17)" fg:x="2821" fg:w="2"/><text x="76.3082%" y="799.50"></text></g><g><title>&lt;u16 as rustls::msgs::codec::Codec&gt;::read (1 samples, 0.03%)</title><rect x="76.0852%" y="773" width="0.0270%" height="15" fill="rgb(216,216,42)" fg:x="2822" fg:w="1"/><text x="76.3352%" y="783.50"></text></g><g><title>rustls::msgs::codec::Reader::take (1 samples, 0.03%)</title><rect x="76.0852%" y="757" width="0.0270%" height="15" fill="rgb(240,118,7)" fg:x="2822" fg:w="1"/><text x="76.3352%" y="767.50"></text></g><g><title>rustls::msgs::deframer::DeframerIter::bytes_consumed (1 samples, 0.03%)</title><rect x="76.1122%" y="821" width="0.0270%" height="15" fill="rgb(221,67,37)" fg:x="2823" fg:w="1"/><text x="76.3622%" y="831.50"></text></g><g><title>rustls::msgs::deframer::handshake::HandshakeDeframer::is_aligned (1 samples, 0.03%)</title><rect x="76.1391%" y="821" width="0.0270%" height="15" fill="rgb(241,32,44)" fg:x="2824" fg:w="1"/><text x="76.3891%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="76.1391%" y="805" width="0.0270%" height="15" fill="rgb(235,204,43)" fg:x="2824" fg:w="1"/><text x="76.3891%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.03%)</title><rect x="76.1391%" y="789" width="0.0270%" height="15" fill="rgb(213,116,10)" fg:x="2824" fg:w="1"/><text x="76.3891%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="76.1391%" y="773" width="0.0270%" height="15" fill="rgb(239,15,48)" fg:x="2824" fg:w="1"/><text x="76.3891%" y="783.50"></text></g><g><title>ring::aead::aes::Key::ctr32_encrypt_within (2 samples, 0.05%)</title><rect x="76.2470%" y="709" width="0.0539%" height="15" fill="rgb(207,123,36)" fg:x="2828" fg:w="2"/><text x="76.4970%" y="719.50"></text></g><g><title>ring::aead::aes::ctr32_encrypt_blocks_ (2 samples, 0.05%)</title><rect x="76.2470%" y="693" width="0.0539%" height="15" fill="rgb(209,103,30)" fg:x="2828" fg:w="2"/><text x="76.4970%" y="703.50"></text></g><g><title>ring_core_0_17_8_aes_hw_ctr32_encrypt_blocks (1 samples, 0.03%)</title><rect x="76.2739%" y="677" width="0.0270%" height="15" fill="rgb(238,100,19)" fg:x="2829" fg:w="1"/><text x="76.5239%" y="687.50"></text></g><g><title>ring::aead::aes_gcm::finish (2 samples, 0.05%)</title><rect x="76.3009%" y="709" width="0.0539%" height="15" fill="rgb(244,30,14)" fg:x="2830" fg:w="2"/><text x="76.5509%" y="719.50"></text></g><g><title>ring::aead::gcm::Context::pre_finish (2 samples, 0.05%)</title><rect x="76.3009%" y="693" width="0.0539%" height="15" fill="rgb(249,174,6)" fg:x="2830" fg:w="2"/><text x="76.5509%" y="703.50"></text></g><g><title>ring_core_0_17_8_gcm_gmult_clmul (2 samples, 0.05%)</title><rect x="76.3009%" y="677" width="0.0539%" height="15" fill="rgb(235,213,41)" fg:x="2830" fg:w="2"/><text x="76.5509%" y="687.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="76.3548%" y="693" width="0.0809%" height="15" fill="rgb(213,118,6)" fg:x="2832" fg:w="3"/><text x="76.6048%" y="703.50"></text></g><g><title>ring::aead::gcm::Context::update_block (2 samples, 0.05%)</title><rect x="76.4357%" y="693" width="0.0539%" height="15" fill="rgb(235,44,51)" fg:x="2835" fg:w="2"/><text x="76.6857%" y="703.50"></text></g><g><title>&lt;ring::aead::gcm::Xi as core::ops::bit::BitXorAssign&lt;ring::aead::block::Block&gt;&gt;::bitxor_assign (2 samples, 0.05%)</title><rect x="76.4357%" y="677" width="0.0539%" height="15" fill="rgb(217,9,53)" fg:x="2835" fg:w="2"/><text x="76.6857%" y="687.50"></text></g><g><title>&lt;ring::aead::block::Block as core::ops::bit::BitXorAssign&gt;::bitxor_assign (2 samples, 0.05%)</title><rect x="76.4357%" y="661" width="0.0539%" height="15" fill="rgb(237,172,34)" fg:x="2835" fg:w="2"/><text x="76.6857%" y="671.50"></text></g><g><title>ring::aead::gcm::Context::new (6 samples, 0.16%)</title><rect x="76.3548%" y="709" width="0.1618%" height="15" fill="rgb(206,206,11)" fg:x="2832" fg:w="6"/><text x="76.6048%" y="719.50"></text></g><g><title>ring_core_0_17_8_gcm_gmult_clmul (1 samples, 0.03%)</title><rect x="76.4896%" y="693" width="0.0270%" height="15" fill="rgb(214,149,29)" fg:x="2837" fg:w="1"/><text x="76.7396%" y="703.50"></text></g><g><title>ring::aead::gcm::Context::update_blocks (1 samples, 0.03%)</title><rect x="76.5166%" y="709" width="0.0270%" height="15" fill="rgb(208,123,3)" fg:x="2838" fg:w="1"/><text x="76.7666%" y="719.50"></text></g><g><title>ring::aead::gcm::has_avx_movbe (1 samples, 0.03%)</title><rect x="76.5166%" y="693" width="0.0270%" height="15" fill="rgb(229,126,4)" fg:x="2838" fg:w="1"/><text x="76.7666%" y="703.50"></text></g><g><title>ring::aead::aes::Key::encrypt_iv_xor_block (5 samples, 0.13%)</title><rect x="76.5435%" y="677" width="0.1348%" height="15" fill="rgb(222,92,36)" fg:x="2839" fg:w="5"/><text x="76.7935%" y="687.50"></text></g><g><title>ring::aead::aes::Key::encrypt_block (4 samples, 0.11%)</title><rect x="76.5705%" y="661" width="0.1078%" height="15" fill="rgb(216,39,41)" fg:x="2840" fg:w="4"/><text x="76.8205%" y="671.50"></text></g><g><title>ring::aead::aes::encrypt_block_ (4 samples, 0.11%)</title><rect x="76.5705%" y="645" width="0.1078%" height="15" fill="rgb(253,127,28)" fg:x="2840" fg:w="4"/><text x="76.8205%" y="655.50"></text></g><g><title>ring_core_0_17_8_aes_hw_encrypt (4 samples, 0.11%)</title><rect x="76.5705%" y="629" width="0.1078%" height="15" fill="rgb(249,152,51)" fg:x="2840" fg:w="4"/><text x="76.8205%" y="639.50"></text></g><g><title>ring::aead::shift::shift_partial (7 samples, 0.19%)</title><rect x="76.5435%" y="709" width="0.1887%" height="15" fill="rgb(209,123,42)" fg:x="2839" fg:w="7"/><text x="76.7935%" y="719.50"></text></g><g><title>ring::aead::aes_gcm::aes_gcm_open::_{{closure}} (7 samples, 0.19%)</title><rect x="76.5435%" y="693" width="0.1887%" height="15" fill="rgb(241,118,22)" fg:x="2839" fg:w="7"/><text x="76.7935%" y="703.50"></text></g><g><title>ring::aead::block::Block::overwrite_part_at (2 samples, 0.05%)</title><rect x="76.6783%" y="677" width="0.0539%" height="15" fill="rgb(208,25,7)" fg:x="2844" fg:w="2"/><text x="76.9283%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.05%)</title><rect x="76.6783%" y="661" width="0.0539%" height="15" fill="rgb(243,144,39)" fg:x="2844" fg:w="2"/><text x="76.9283%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="76.6783%" y="645" width="0.0539%" height="15" fill="rgb(250,50,5)" fg:x="2844" fg:w="2"/><text x="76.9283%" y="655.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="76.6783%" y="629" width="0.0539%" height="15" fill="rgb(207,67,11)" fg:x="2844" fg:w="2"/><text x="76.9283%" y="639.50"></text></g><g><title>ring::aead::aes_gcm::aes_gcm_open (22 samples, 0.59%)</title><rect x="76.1930%" y="725" width="0.5932%" height="15" fill="rgb(245,204,40)" fg:x="2826" fg:w="22"/><text x="76.4430%" y="735.50"></text></g><g><title>ring_core_0_17_8_gcm_ghash_avx (2 samples, 0.05%)</title><rect x="76.7323%" y="709" width="0.0539%" height="15" fill="rgb(238,228,24)" fg:x="2846" fg:w="2"/><text x="76.9823%" y="719.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_more_input (33 samples, 0.89%)</title><rect x="75.9234%" y="837" width="0.8897%" height="15" fill="rgb(217,116,22)" fg:x="2816" fg:w="33"/><text x="76.1734%" y="847.50"></text></g><g><title>rustls::record_layer::RecordLayer::decrypt_incoming (24 samples, 0.65%)</title><rect x="76.1661%" y="821" width="0.6471%" height="15" fill="rgb(234,98,12)" fg:x="2825" fg:w="24"/><text x="76.4161%" y="831.50"></text></g><g><title>&lt;rustls::crypto::ring::tls13::Tls13MessageDecrypter as rustls::crypto::cipher::MessageDecrypter&gt;::decrypt (24 samples, 0.65%)</title><rect x="76.1661%" y="805" width="0.6471%" height="15" fill="rgb(242,170,50)" fg:x="2825" fg:w="24"/><text x="76.4161%" y="815.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::open_in_place (24 samples, 0.65%)</title><rect x="76.1661%" y="789" width="0.6471%" height="15" fill="rgb(235,7,5)" fg:x="2825" fg:w="24"/><text x="76.4161%" y="799.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::open_within (24 samples, 0.65%)</title><rect x="76.1661%" y="773" width="0.6471%" height="15" fill="rgb(241,114,28)" fg:x="2825" fg:w="24"/><text x="76.4161%" y="783.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::open_in_place_separate_tag (24 samples, 0.65%)</title><rect x="76.1661%" y="757" width="0.6471%" height="15" fill="rgb(246,112,42)" fg:x="2825" fg:w="24"/><text x="76.4161%" y="767.50"></text></g><g><title>ring::aead::less_safe_key::open_within_ (24 samples, 0.65%)</title><rect x="76.1661%" y="741" width="0.6471%" height="15" fill="rgb(248,228,14)" fg:x="2825" fg:w="24"/><text x="76.4161%" y="751.50"></text></g><g><title>ring::constant_time::verify_slices_are_equal (1 samples, 0.03%)</title><rect x="76.7862%" y="725" width="0.0270%" height="15" fill="rgb(208,133,18)" fg:x="2848" fg:w="1"/><text x="77.0362%" y="735.50"></text></g><g><title>ring_core_0_17_8_CRYPTO_memcmp (1 samples, 0.03%)</title><rect x="76.7862%" y="709" width="0.0270%" height="15" fill="rgb(207,35,49)" fg:x="2848" fg:w="1"/><text x="77.0362%" y="719.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::deframe (34 samples, 0.92%)</title><rect x="75.9234%" y="853" width="0.9167%" height="15" fill="rgb(205,68,36)" fg:x="2816" fg:w="34"/><text x="76.1734%" y="863.50"></text></g><g><title>rustls::msgs::deframer::handshake::HandshakeDeframer::has_message_ready (1 samples, 0.03%)</title><rect x="76.8132%" y="837" width="0.0270%" height="15" fill="rgb(245,62,40)" fg:x="2849" fg:w="1"/><text x="77.0632%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (1 samples, 0.03%)</title><rect x="76.8132%" y="821" width="0.0270%" height="15" fill="rgb(228,27,24)" fg:x="2849" fg:w="1"/><text x="77.0632%" y="831.50"></text></g><g><title>&lt;rustls::msgs::message::Message as core::convert::TryFrom&lt;rustls::msgs::message::inbound::InboundPlainMessage&gt;&gt;::try_from (1 samples, 0.03%)</title><rect x="76.8940%" y="837" width="0.0270%" height="15" fill="rgb(253,19,12)" fg:x="2852" fg:w="1"/><text x="77.1440%" y="847.50"></text></g><g><title>rustls::msgs::message::MessagePayload::new (1 samples, 0.03%)</title><rect x="76.8940%" y="821" width="0.0270%" height="15" fill="rgb(232,28,20)" fg:x="2852" fg:w="1"/><text x="77.1440%" y="831.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="76.9210%" y="837" width="0.0809%" height="15" fill="rgb(218,35,51)" fg:x="2853" fg:w="3"/><text x="77.1710%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.24%)</title><rect x="77.0019%" y="709" width="0.2427%" height="15" fill="rgb(212,90,40)" fg:x="2856" fg:w="9"/><text x="77.2519%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.24%)</title><rect x="77.0019%" y="693" width="0.2427%" height="15" fill="rgb(220,172,12)" fg:x="2856" fg:w="9"/><text x="77.2519%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (9 samples, 0.24%)</title><rect x="77.0019%" y="677" width="0.2427%" height="15" fill="rgb(226,159,20)" fg:x="2856" fg:w="9"/><text x="77.2519%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.24%)</title><rect x="77.0019%" y="661" width="0.2427%" height="15" fill="rgb(234,205,16)" fg:x="2856" fg:w="9"/><text x="77.2519%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.24%)</title><rect x="77.0019%" y="645" width="0.2427%" height="15" fill="rgb(207,9,39)" fg:x="2856" fg:w="9"/><text x="77.2519%" y="655.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.24%)</title><rect x="77.0019%" y="629" width="0.2427%" height="15" fill="rgb(249,143,15)" fg:x="2856" fg:w="9"/><text x="77.2519%" y="639.50"></text></g><g><title>malloc (9 samples, 0.24%)</title><rect x="77.0019%" y="613" width="0.2427%" height="15" fill="rgb(253,133,29)" fg:x="2856" fg:w="9"/><text x="77.2519%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="77.2176%" y="597" width="0.0270%" height="15" fill="rgb(221,187,0)" fg:x="2864" fg:w="1"/><text x="77.4676%" y="607.50"></text></g><g><title>&lt;rustls::client::tls13::ExpectTraffic as rustls::common_state::State&lt;rustls::client::client_conn::ClientConnectionData&gt;&gt;::handle (10 samples, 0.27%)</title><rect x="77.0019%" y="821" width="0.2696%" height="15" fill="rgb(205,204,26)" fg:x="2856" fg:w="10"/><text x="77.2519%" y="831.50"></text></g><g><title>rustls::common_state::CommonState::take_received_plaintext (10 samples, 0.27%)</title><rect x="77.0019%" y="805" width="0.2696%" height="15" fill="rgb(224,68,54)" fg:x="2856" fg:w="10"/><text x="77.2519%" y="815.50"></text></g><g><title>rustls::msgs::base::Payload::into_vec (10 samples, 0.27%)</title><rect x="77.0019%" y="789" width="0.2696%" height="15" fill="rgb(209,67,4)" fg:x="2856" fg:w="10"/><text x="77.2519%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.27%)</title><rect x="77.0019%" y="773" width="0.2696%" height="15" fill="rgb(228,229,18)" fg:x="2856" fg:w="10"/><text x="77.2519%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.27%)</title><rect x="77.0019%" y="757" width="0.2696%" height="15" fill="rgb(231,89,13)" fg:x="2856" fg:w="10"/><text x="77.2519%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.27%)</title><rect x="77.0019%" y="741" width="0.2696%" height="15" fill="rgb(210,182,18)" fg:x="2856" fg:w="10"/><text x="77.2519%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.27%)</title><rect x="77.0019%" y="725" width="0.2696%" height="15" fill="rgb(240,105,2)" fg:x="2856" fg:w="10"/><text x="77.2519%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="77.2445%" y="709" width="0.0270%" height="15" fill="rgb(207,170,50)" fg:x="2865" fg:w="1"/><text x="77.4945%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="77.2445%" y="693" width="0.0270%" height="15" fill="rgb(232,133,24)" fg:x="2865" fg:w="1"/><text x="77.4945%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="77.2445%" y="677" width="0.0270%" height="15" fill="rgb(235,166,27)" fg:x="2865" fg:w="1"/><text x="77.4945%" y="687.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::process_new_packets (52 samples, 1.40%)</title><rect x="75.8965%" y="885" width="1.4020%" height="15" fill="rgb(209,19,13)" fg:x="2815" fg:w="52"/><text x="76.1465%" y="895.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_new_packets (52 samples, 1.40%)</title><rect x="75.8965%" y="869" width="1.4020%" height="15" fill="rgb(226,79,39)" fg:x="2815" fg:w="52"/><text x="76.1465%" y="879.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_msg (17 samples, 0.46%)</title><rect x="76.8401%" y="853" width="0.4583%" height="15" fill="rgb(222,163,10)" fg:x="2850" fg:w="17"/><text x="77.0901%" y="863.50"></text></g><g><title>rustls::common_state::CommonState::process_main_protocol (11 samples, 0.30%)</title><rect x="77.0019%" y="837" width="0.2966%" height="15" fill="rgb(214,44,19)" fg:x="2856" fg:w="11"/><text x="77.2519%" y="847.50"></text></g><g><title>&lt;rustls::client::tls13::ExpectTraffic as rustls::common_state::State&lt;rustls::client::client_conn::ClientConnectionData&gt;&gt;::into_owned (1 samples, 0.03%)</title><rect x="77.2715%" y="821" width="0.0270%" height="15" fill="rgb(210,217,13)" fg:x="2866" fg:w="1"/><text x="77.5215%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="77.3524%" y="757" width="0.0270%" height="15" fill="rgb(237,61,54)" fg:x="2869" fg:w="1"/><text x="77.6024%" y="767.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="77.4602%" y="693" width="0.0270%" height="15" fill="rgb(226,184,24)" fg:x="2873" fg:w="1"/><text x="77.7102%" y="703.50"></text></g><g><title>release_sock (1 samples, 0.03%)</title><rect x="77.5681%" y="645" width="0.0270%" height="15" fill="rgb(223,226,4)" fg:x="2877" fg:w="1"/><text x="77.8181%" y="655.50"></text></g><g><title>__release_sock (1 samples, 0.03%)</title><rect x="77.5681%" y="629" width="0.0270%" height="15" fill="rgb(210,26,41)" fg:x="2877" fg:w="1"/><text x="77.8181%" y="639.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="77.5681%" y="613" width="0.0270%" height="15" fill="rgb(220,221,6)" fg:x="2877" fg:w="1"/><text x="77.8181%" y="623.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="77.5681%" y="597" width="0.0270%" height="15" fill="rgb(225,89,49)" fg:x="2877" fg:w="1"/><text x="77.8181%" y="607.50"></text></g><g><title>tcp_ack (1 samples, 0.03%)</title><rect x="77.5681%" y="581" width="0.0270%" height="15" fill="rgb(218,70,45)" fg:x="2877" fg:w="1"/><text x="77.8181%" y="591.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="77.5681%" y="565" width="0.0270%" height="15" fill="rgb(238,166,21)" fg:x="2877" fg:w="1"/><text x="77.8181%" y="575.50"></text></g><g><title>__sk_mem_reduce_allocated (1 samples, 0.03%)</title><rect x="77.6490%" y="629" width="0.0270%" height="15" fill="rgb(224,141,44)" fg:x="2880" fg:w="1"/><text x="77.8990%" y="639.50"></text></g><g><title>refill_stock (1 samples, 0.03%)</title><rect x="77.6490%" y="613" width="0.0270%" height="15" fill="rgb(230,12,49)" fg:x="2880" fg:w="1"/><text x="77.8990%" y="623.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.03%)</title><rect x="77.6759%" y="629" width="0.0270%" height="15" fill="rgb(212,174,12)" fg:x="2881" fg:w="1"/><text x="77.9259%" y="639.50"></text></g><g><title>__alloc_skb (1 samples, 0.03%)</title><rect x="77.6759%" y="613" width="0.0270%" height="15" fill="rgb(246,67,9)" fg:x="2881" fg:w="1"/><text x="77.9259%" y="623.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="77.6759%" y="597" width="0.0270%" height="15" fill="rgb(239,35,23)" fg:x="2881" fg:w="1"/><text x="77.9259%" y="607.50"></text></g><g><title>raw_local_deliver (1 samples, 0.03%)</title><rect x="77.7838%" y="405" width="0.0270%" height="15" fill="rgb(211,167,0)" fg:x="2885" fg:w="1"/><text x="78.0338%" y="415.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="77.8107%" y="389" width="0.0270%" height="15" fill="rgb(225,119,45)" fg:x="2886" fg:w="1"/><text x="78.0607%" y="399.50"></text></g><g><title>__kfree_skb (1 samples, 0.03%)</title><rect x="77.8377%" y="357" width="0.0270%" height="15" fill="rgb(210,162,6)" fg:x="2887" fg:w="1"/><text x="78.0877%" y="367.50"></text></g><g><title>skb_release_data (1 samples, 0.03%)</title><rect x="77.8377%" y="341" width="0.0270%" height="15" fill="rgb(208,118,35)" fg:x="2887" fg:w="1"/><text x="78.0877%" y="351.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="77.8377%" y="325" width="0.0270%" height="15" fill="rgb(239,4,53)" fg:x="2887" fg:w="1"/><text x="78.0877%" y="335.50"></text></g><g><title>cache_from_obj (1 samples, 0.03%)</title><rect x="77.8377%" y="309" width="0.0270%" height="15" fill="rgb(213,130,21)" fg:x="2887" fg:w="1"/><text x="78.0877%" y="319.50"></text></g><g><title>kmem_cache_free (2 samples, 0.05%)</title><rect x="77.8647%" y="357" width="0.0539%" height="15" fill="rgb(235,148,0)" fg:x="2888" fg:w="2"/><text x="78.1147%" y="367.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="77.9995%" y="309" width="0.0270%" height="15" fill="rgb(244,224,18)" fg:x="2893" fg:w="1"/><text x="78.2495%" y="319.50"></text></g><g><title>skb_release_data (2 samples, 0.05%)</title><rect x="77.9995%" y="325" width="0.0539%" height="15" fill="rgb(211,214,4)" fg:x="2893" fg:w="2"/><text x="78.2495%" y="335.50"></text></g><g><title>skb_free_head (1 samples, 0.03%)</title><rect x="78.0264%" y="309" width="0.0270%" height="15" fill="rgb(206,119,25)" fg:x="2894" fg:w="1"/><text x="78.2764%" y="319.50"></text></g><g><title>__kfree_skb (3 samples, 0.08%)</title><rect x="77.9995%" y="341" width="0.0809%" height="15" fill="rgb(243,93,47)" fg:x="2893" fg:w="3"/><text x="78.2495%" y="351.50"></text></g><g><title>skb_release_head_state (1 samples, 0.03%)</title><rect x="78.0534%" y="325" width="0.0270%" height="15" fill="rgb(224,194,6)" fg:x="2895" fg:w="1"/><text x="78.3034%" y="335.50"></text></g><g><title>cubictcp_acked (1 samples, 0.03%)</title><rect x="78.0803%" y="341" width="0.0270%" height="15" fill="rgb(243,229,6)" fg:x="2896" fg:w="1"/><text x="78.3303%" y="351.50"></text></g><g><title>ip_local_deliver_finish (14 samples, 0.38%)</title><rect x="77.7838%" y="437" width="0.3775%" height="15" fill="rgb(207,23,50)" fg:x="2885" fg:w="14"/><text x="78.0338%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (14 samples, 0.38%)</title><rect x="77.7838%" y="421" width="0.3775%" height="15" fill="rgb(253,192,32)" fg:x="2885" fg:w="14"/><text x="78.0338%" y="431.50"></text></g><g><title>tcp_v4_rcv (13 samples, 0.35%)</title><rect x="77.8107%" y="405" width="0.3505%" height="15" fill="rgb(213,21,6)" fg:x="2886" fg:w="13"/><text x="78.0607%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 0.32%)</title><rect x="77.8377%" y="389" width="0.3235%" height="15" fill="rgb(243,151,13)" fg:x="2887" fg:w="12"/><text x="78.0877%" y="399.50"></text></g><g><title>tcp_rcv_established (12 samples, 0.32%)</title><rect x="77.8377%" y="373" width="0.3235%" height="15" fill="rgb(233,165,41)" fg:x="2887" fg:w="12"/><text x="78.0877%" y="383.50"></text></g><g><title>tcp_ack (9 samples, 0.24%)</title><rect x="77.9186%" y="357" width="0.2427%" height="15" fill="rgb(246,176,45)" fg:x="2890" fg:w="9"/><text x="78.1686%" y="367.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.05%)</title><rect x="78.1073%" y="341" width="0.0539%" height="15" fill="rgb(217,170,52)" fg:x="2897" fg:w="2"/><text x="78.3573%" y="351.50"></text></g><g><title>ip_local_deliver (15 samples, 0.40%)</title><rect x="77.7838%" y="453" width="0.4044%" height="15" fill="rgb(214,203,54)" fg:x="2885" fg:w="15"/><text x="78.0338%" y="463.50"></text></g><g><title>nf_hook_slow (1 samples, 0.03%)</title><rect x="78.1612%" y="437" width="0.0270%" height="15" fill="rgb(248,215,49)" fg:x="2899" fg:w="1"/><text x="78.4112%" y="447.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.03%)</title><rect x="78.1612%" y="421" width="0.0270%" height="15" fill="rgb(208,46,10)" fg:x="2899" fg:w="1"/><text x="78.4112%" y="431.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.03%)</title><rect x="78.1612%" y="405" width="0.0270%" height="15" fill="rgb(254,5,31)" fg:x="2899" fg:w="1"/><text x="78.4112%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (16 samples, 0.43%)</title><rect x="77.7838%" y="469" width="0.4314%" height="15" fill="rgb(222,104,33)" fg:x="2885" fg:w="16"/><text x="78.0338%" y="479.50"></text></g><g><title>ip_rcv (1 samples, 0.03%)</title><rect x="78.1882%" y="453" width="0.0270%" height="15" fill="rgb(248,49,16)" fg:x="2900" fg:w="1"/><text x="78.4382%" y="463.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="78.1882%" y="437" width="0.0270%" height="15" fill="rgb(232,198,41)" fg:x="2900" fg:w="1"/><text x="78.4382%" y="447.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="78.2152%" y="469" width="0.0270%" height="15" fill="rgb(214,125,3)" fg:x="2901" fg:w="1"/><text x="78.4652%" y="479.50"></text></g><g><title>__local_bh_enable_ip (20 samples, 0.54%)</title><rect x="77.7298%" y="565" width="0.5392%" height="15" fill="rgb(229,220,28)" fg:x="2883" fg:w="20"/><text x="77.9798%" y="575.50"></text></g><g><title>do_softirq.part.0 (20 samples, 0.54%)</title><rect x="77.7298%" y="549" width="0.5392%" height="15" fill="rgb(222,64,37)" fg:x="2883" fg:w="20"/><text x="77.9798%" y="559.50"></text></g><g><title>handle_softirqs (19 samples, 0.51%)</title><rect x="77.7568%" y="533" width="0.5123%" height="15" fill="rgb(249,184,13)" fg:x="2884" fg:w="19"/><text x="78.0068%" y="543.50"></text></g><g><title>net_rx_action (19 samples, 0.51%)</title><rect x="77.7568%" y="517" width="0.5123%" height="15" fill="rgb(252,176,6)" fg:x="2884" fg:w="19"/><text x="78.0068%" y="527.50"></text></g><g><title>__napi_poll (19 samples, 0.51%)</title><rect x="77.7568%" y="501" width="0.5123%" height="15" fill="rgb(228,153,7)" fg:x="2884" fg:w="19"/><text x="78.0068%" y="511.50"></text></g><g><title>process_backlog (18 samples, 0.49%)</title><rect x="77.7838%" y="485" width="0.4853%" height="15" fill="rgb(242,193,5)" fg:x="2885" fg:w="18"/><text x="78.0338%" y="495.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="78.2421%" y="469" width="0.0270%" height="15" fill="rgb(232,140,9)" fg:x="2902" fg:w="1"/><text x="78.4921%" y="479.50"></text></g><g><title>ip_finish_output2 (21 samples, 0.57%)</title><rect x="77.7298%" y="597" width="0.5662%" height="15" fill="rgb(213,222,16)" fg:x="2883" fg:w="21"/><text x="77.9798%" y="607.50"></text></g><g><title>__dev_queue_xmit (21 samples, 0.57%)</title><rect x="77.7298%" y="581" width="0.5662%" height="15" fill="rgb(222,75,50)" fg:x="2883" fg:w="21"/><text x="77.9798%" y="591.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="78.2691%" y="565" width="0.0270%" height="15" fill="rgb(205,180,2)" fg:x="2903" fg:w="1"/><text x="78.5191%" y="575.50"></text></g><g><title>loopback_xmit (1 samples, 0.03%)</title><rect x="78.2691%" y="549" width="0.0270%" height="15" fill="rgb(216,34,7)" fg:x="2903" fg:w="1"/><text x="78.5191%" y="559.50"></text></g><g><title>__netif_rx (1 samples, 0.03%)</title><rect x="78.2691%" y="533" width="0.0270%" height="15" fill="rgb(253,16,32)" fg:x="2903" fg:w="1"/><text x="78.5191%" y="543.50"></text></g><g><title>netif_rx_internal (1 samples, 0.03%)</title><rect x="78.2691%" y="517" width="0.0270%" height="15" fill="rgb(208,97,28)" fg:x="2903" fg:w="1"/><text x="78.5191%" y="527.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="78.2691%" y="501" width="0.0270%" height="15" fill="rgb(225,92,11)" fg:x="2903" fg:w="1"/><text x="78.5191%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="78.2691%" y="485" width="0.0270%" height="15" fill="rgb(243,38,12)" fg:x="2903" fg:w="1"/><text x="78.5191%" y="495.50"></text></g><g><title>ip_send_check (1 samples, 0.03%)</title><rect x="78.2960%" y="565" width="0.0270%" height="15" fill="rgb(208,139,16)" fg:x="2904" fg:w="1"/><text x="78.5460%" y="575.50"></text></g><g><title>[[nf_conntrack]] (3 samples, 0.08%)</title><rect x="78.3230%" y="549" width="0.0809%" height="15" fill="rgb(227,24,9)" fg:x="2905" fg:w="3"/><text x="78.5730%" y="559.50"></text></g><g><title>[[nf_conntrack]] (3 samples, 0.08%)</title><rect x="78.3230%" y="533" width="0.0809%" height="15" fill="rgb(206,62,11)" fg:x="2905" fg:w="3"/><text x="78.5730%" y="543.50"></text></g><g><title>[[nf_defrag_ipv4]] (1 samples, 0.03%)</title><rect x="78.4039%" y="549" width="0.0270%" height="15" fill="rgb(228,134,27)" fg:x="2908" fg:w="1"/><text x="78.6539%" y="559.50"></text></g><g><title>ip_local_out (6 samples, 0.16%)</title><rect x="78.2960%" y="597" width="0.1618%" height="15" fill="rgb(205,55,33)" fg:x="2904" fg:w="6"/><text x="78.5460%" y="607.50"></text></g><g><title>__ip_local_out (6 samples, 0.16%)</title><rect x="78.2960%" y="581" width="0.1618%" height="15" fill="rgb(243,75,43)" fg:x="2904" fg:w="6"/><text x="78.5460%" y="591.50"></text></g><g><title>nf_hook_slow (5 samples, 0.13%)</title><rect x="78.3230%" y="565" width="0.1348%" height="15" fill="rgb(223,27,42)" fg:x="2905" fg:w="5"/><text x="78.5730%" y="575.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.03%)</title><rect x="78.4308%" y="549" width="0.0270%" height="15" fill="rgb(232,189,33)" fg:x="2909" fg:w="1"/><text x="78.6808%" y="559.50"></text></g><g><title>__tcp_transmit_skb (30 samples, 0.81%)</title><rect x="77.7029%" y="629" width="0.8088%" height="15" fill="rgb(210,9,39)" fg:x="2882" fg:w="30"/><text x="77.9529%" y="639.50"></text></g><g><title>__ip_queue_xmit (29 samples, 0.78%)</title><rect x="77.7298%" y="613" width="0.7819%" height="15" fill="rgb(242,85,26)" fg:x="2883" fg:w="29"/><text x="77.9798%" y="623.50"></text></g><g><title>ip_output (2 samples, 0.05%)</title><rect x="78.4578%" y="597" width="0.0539%" height="15" fill="rgb(248,44,4)" fg:x="2910" fg:w="2"/><text x="78.7078%" y="607.50"></text></g><g><title>nf_hook_slow (2 samples, 0.05%)</title><rect x="78.4578%" y="581" width="0.0539%" height="15" fill="rgb(250,96,46)" fg:x="2910" fg:w="2"/><text x="78.7078%" y="591.50"></text></g><g><title>[[nf_nat]] (2 samples, 0.05%)</title><rect x="78.4578%" y="565" width="0.0539%" height="15" fill="rgb(229,116,26)" fg:x="2910" fg:w="2"/><text x="78.7078%" y="575.50"></text></g><g><title>[[nf_nat]] (2 samples, 0.05%)</title><rect x="78.4578%" y="549" width="0.0539%" height="15" fill="rgb(246,94,34)" fg:x="2910" fg:w="2"/><text x="78.7078%" y="559.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="78.5387%" y="597" width="0.0270%" height="15" fill="rgb(251,73,21)" fg:x="2913" fg:w="1"/><text x="78.7887%" y="607.50"></text></g><g><title>skb_attempt_defer_free (3 samples, 0.08%)</title><rect x="78.5117%" y="629" width="0.0809%" height="15" fill="rgb(254,121,25)" fg:x="2912" fg:w="3"/><text x="78.7617%" y="639.50"></text></g><g><title>skb_release_data (3 samples, 0.08%)</title><rect x="78.5117%" y="613" width="0.0809%" height="15" fill="rgb(215,161,49)" fg:x="2912" fg:w="3"/><text x="78.7617%" y="623.50"></text></g><g><title>skb_free_head (1 samples, 0.03%)</title><rect x="78.5657%" y="597" width="0.0270%" height="15" fill="rgb(221,43,13)" fg:x="2914" fg:w="1"/><text x="78.8157%" y="607.50"></text></g><g><title>_copy_to_iter (3 samples, 0.08%)</title><rect x="78.5926%" y="597" width="0.0809%" height="15" fill="rgb(249,5,37)" fg:x="2915" fg:w="3"/><text x="78.8426%" y="607.50"></text></g><g><title>copyout (3 samples, 0.08%)</title><rect x="78.5926%" y="581" width="0.0809%" height="15" fill="rgb(226,25,44)" fg:x="2915" fg:w="3"/><text x="78.8426%" y="591.50"></text></g><g><title>rep_movs_alternative (2 samples, 0.05%)</title><rect x="78.6196%" y="565" width="0.0539%" height="15" fill="rgb(238,189,16)" fg:x="2916" fg:w="2"/><text x="78.8696%" y="575.50"></text></g><g><title>skb_copy_datagram_iter (6 samples, 0.16%)</title><rect x="78.5926%" y="629" width="0.1618%" height="15" fill="rgb(251,186,8)" fg:x="2915" fg:w="6"/><text x="78.8426%" y="639.50"></text></g><g><title>__skb_datagram_iter (6 samples, 0.16%)</title><rect x="78.5926%" y="613" width="0.1618%" height="15" fill="rgb(254,34,31)" fg:x="2915" fg:w="6"/><text x="78.8426%" y="623.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.08%)</title><rect x="78.6735%" y="597" width="0.0809%" height="15" fill="rgb(225,215,27)" fg:x="2918" fg:w="3"/><text x="78.9235%" y="607.50"></text></g><g><title>__check_object_size (3 samples, 0.08%)</title><rect x="78.6735%" y="581" width="0.0809%" height="15" fill="rgb(221,192,48)" fg:x="2918" fg:w="3"/><text x="78.9235%" y="591.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="78.7005%" y="565" width="0.0539%" height="15" fill="rgb(219,137,20)" fg:x="2919" fg:w="2"/><text x="78.9505%" y="575.50"></text></g><g><title>sock_rfree (1 samples, 0.03%)</title><rect x="78.7544%" y="629" width="0.0270%" height="15" fill="rgb(219,84,11)" fg:x="2921" fg:w="1"/><text x="79.0044%" y="639.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="78.7813%" y="629" width="0.0270%" height="15" fill="rgb(224,10,23)" fg:x="2922" fg:w="1"/><text x="79.0313%" y="639.50"></text></g><g><title>inet_recvmsg (49 samples, 1.32%)</title><rect x="77.5411%" y="677" width="1.3211%" height="15" fill="rgb(248,22,39)" fg:x="2876" fg:w="49"/><text x="77.7911%" y="687.50"></text></g><g><title>tcp_recvmsg (48 samples, 1.29%)</title><rect x="77.5681%" y="661" width="1.2941%" height="15" fill="rgb(212,154,20)" fg:x="2877" fg:w="48"/><text x="77.8181%" y="671.50"></text></g><g><title>tcp_recvmsg_locked (47 samples, 1.27%)</title><rect x="77.5950%" y="645" width="1.2672%" height="15" fill="rgb(236,199,50)" fg:x="2878" fg:w="47"/><text x="77.8450%" y="655.50"></text></g><g><title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="78.8083%" y="629" width="0.0539%" height="15" fill="rgb(211,9,17)" fg:x="2923" fg:w="2"/><text x="79.0583%" y="639.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="78.8353%" y="613" width="0.0270%" height="15" fill="rgb(243,216,36)" fg:x="2924" fg:w="1"/><text x="79.0853%" y="623.50"></text></g><g><title>ktime_get (1 samples, 0.03%)</title><rect x="78.8353%" y="597" width="0.0270%" height="15" fill="rgb(250,2,10)" fg:x="2924" fg:w="1"/><text x="79.0853%" y="607.50"></text></g><g><title>aa_sk_perm (4 samples, 0.11%)</title><rect x="78.8622%" y="661" width="0.1078%" height="15" fill="rgb(226,50,48)" fg:x="2925" fg:w="4"/><text x="79.1122%" y="671.50"></text></g><g><title>__x64_sys_recvfrom (59 samples, 1.59%)</title><rect x="77.4333%" y="725" width="1.5907%" height="15" fill="rgb(243,81,16)" fg:x="2872" fg:w="59"/><text x="77.6833%" y="735.50"></text></g><g><title>__sys_recvfrom (59 samples, 1.59%)</title><rect x="77.4333%" y="709" width="1.5907%" height="15" fill="rgb(250,14,2)" fg:x="2872" fg:w="59"/><text x="77.6833%" y="719.50"></text></g><g><title>sock_recvmsg (57 samples, 1.54%)</title><rect x="77.4872%" y="693" width="1.5368%" height="15" fill="rgb(233,135,29)" fg:x="2874" fg:w="57"/><text x="77.7372%" y="703.50"></text></g><g><title>security_socket_recvmsg (6 samples, 0.16%)</title><rect x="78.8622%" y="677" width="0.1618%" height="15" fill="rgb(224,64,43)" fg:x="2925" fg:w="6"/><text x="79.1122%" y="687.50"></text></g><g><title>apparmor_socket_recvmsg (2 samples, 0.05%)</title><rect x="78.9701%" y="661" width="0.0539%" height="15" fill="rgb(238,84,13)" fg:x="2929" fg:w="2"/><text x="79.2201%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="79.0240%" y="725" width="0.0270%" height="15" fill="rgb(253,48,26)" fg:x="2931" fg:w="1"/><text x="79.2740%" y="735.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="79.0240%" y="709" width="0.0270%" height="15" fill="rgb(205,223,31)" fg:x="2931" fg:w="1"/><text x="79.2740%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (63 samples, 1.70%)</title><rect x="77.3793%" y="757" width="1.6986%" height="15" fill="rgb(221,41,32)" fg:x="2870" fg:w="63"/><text x="77.6293%" y="767.50"></text></g><g><title>do_syscall_64 (61 samples, 1.64%)</title><rect x="77.4333%" y="741" width="1.6446%" height="15" fill="rgb(213,158,31)" fg:x="2872" fg:w="61"/><text x="77.6833%" y="751.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="79.0510%" y="725" width="0.0270%" height="15" fill="rgb(245,126,43)" fg:x="2932" fg:w="1"/><text x="79.3010%" y="735.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="79.0510%" y="709" width="0.0270%" height="15" fill="rgb(227,7,22)" fg:x="2932" fg:w="1"/><text x="79.3010%" y="719.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="79.0510%" y="693" width="0.0270%" height="15" fill="rgb(252,90,44)" fg:x="2932" fg:w="1"/><text x="79.3010%" y="703.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.03%)</title><rect x="79.0510%" y="677" width="0.0270%" height="15" fill="rgb(253,91,0)" fg:x="2932" fg:w="1"/><text x="79.3010%" y="687.50"></text></g><g><title>handle_softirqs (1 samples, 0.03%)</title><rect x="79.0510%" y="661" width="0.0270%" height="15" fill="rgb(252,175,49)" fg:x="2932" fg:w="1"/><text x="79.3010%" y="671.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="79.0510%" y="645" width="0.0270%" height="15" fill="rgb(246,150,1)" fg:x="2932" fg:w="1"/><text x="79.3010%" y="655.50"></text></g><g><title>update_blocked_averages (1 samples, 0.03%)</title><rect x="79.0510%" y="629" width="0.0270%" height="15" fill="rgb(241,192,25)" fg:x="2932" fg:w="1"/><text x="79.3010%" y="639.50"></text></g><g><title>_raw_spin_rq_lock_irqsave (1 samples, 0.03%)</title><rect x="79.0510%" y="613" width="0.0270%" height="15" fill="rgb(239,187,11)" fg:x="2932" fg:w="1"/><text x="79.3010%" y="623.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (69 samples, 1.86%)</title><rect x="77.3254%" y="805" width="1.8603%" height="15" fill="rgb(218,202,51)" fg:x="2868" fg:w="69"/><text x="77.5754%" y="815.50">&lt;..</text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Read&gt;::read (69 samples, 1.86%)</title><rect x="77.3254%" y="789" width="1.8603%" height="15" fill="rgb(225,176,8)" fg:x="2868" fg:w="69"/><text x="77.5754%" y="799.50">&lt;..</text></g><g><title>recv (69 samples, 1.86%)</title><rect x="77.3254%" y="773" width="1.8603%" height="15" fill="rgb(219,122,41)" fg:x="2868" fg:w="69"/><text x="77.5754%" y="783.50">r..</text></g><g><title>syscall_return_via_sysret (4 samples, 0.11%)</title><rect x="79.0779%" y="757" width="0.1078%" height="15" fill="rgb(248,140,20)" fg:x="2933" fg:w="4"/><text x="79.3279%" y="767.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (1 samples, 0.03%)</title><rect x="79.1858%" y="805" width="0.0270%" height="15" fill="rgb(245,41,37)" fg:x="2937" fg:w="1"/><text x="79.4358%" y="815.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (1 samples, 0.03%)</title><rect x="79.1858%" y="789" width="0.0270%" height="15" fill="rgb(235,82,39)" fg:x="2937" fg:w="1"/><text x="79.4358%" y="799.50"></text></g><g><title>&lt;tokio::io::ready::Ready as core::ops::arith::Sub&gt;::sub (1 samples, 0.03%)</title><rect x="79.1858%" y="773" width="0.0270%" height="15" fill="rgb(230,108,42)" fg:x="2937" fg:w="1"/><text x="79.4358%" y="783.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="79.2397%" y="757" width="0.0539%" height="15" fill="rgb(215,150,50)" fg:x="2939" fg:w="2"/><text x="79.4897%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.03%)</title><rect x="79.2666%" y="741" width="0.0270%" height="15" fill="rgb(233,212,5)" fg:x="2940" fg:w="1"/><text x="79.5166%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="79.2936%" y="757" width="0.0270%" height="15" fill="rgb(245,80,22)" fg:x="2941" fg:w="1"/><text x="79.5436%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="79.2936%" y="741" width="0.0270%" height="15" fill="rgb(238,129,16)" fg:x="2941" fg:w="1"/><text x="79.5436%" y="751.50"></text></g><g><title>rustls::msgs::deframer::buffers::DeframerVecBuffer::read (76 samples, 2.05%)</title><rect x="77.2985%" y="869" width="2.0491%" height="15" fill="rgb(240,19,0)" fg:x="2867" fg:w="76"/><text x="77.5485%" y="879.50">r..</text></g><g><title>&lt;tokio_rustls::common::SyncReadAdapter&lt;T&gt; as std::io::Read&gt;::read (76 samples, 2.05%)</title><rect x="77.2985%" y="853" width="2.0491%" height="15" fill="rgb(232,42,35)" fg:x="2867" fg:w="76"/><text x="77.5485%" y="863.50">&lt;..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (75 samples, 2.02%)</title><rect x="77.3254%" y="837" width="2.0221%" height="15" fill="rgb(223,130,24)" fg:x="2868" fg:w="75"/><text x="77.5754%" y="847.50">&lt;..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (75 samples, 2.02%)</title><rect x="77.3254%" y="821" width="2.0221%" height="15" fill="rgb(237,16,22)" fg:x="2868" fg:w="75"/><text x="77.5754%" y="831.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (5 samples, 0.13%)</title><rect x="79.2127%" y="805" width="0.1348%" height="15" fill="rgb(248,192,20)" fg:x="2938" fg:w="5"/><text x="79.4627%" y="815.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (5 samples, 0.13%)</title><rect x="79.2127%" y="789" width="0.1348%" height="15" fill="rgb(233,167,2)" fg:x="2938" fg:w="5"/><text x="79.4627%" y="799.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.13%)</title><rect x="79.2127%" y="773" width="0.1348%" height="15" fill="rgb(252,71,44)" fg:x="2938" fg:w="5"/><text x="79.4627%" y="783.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="79.3206%" y="757" width="0.0270%" height="15" fill="rgb(238,37,47)" fg:x="2942" fg:w="1"/><text x="79.5706%" y="767.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::read_tls (78 samples, 2.10%)</title><rect x="77.2985%" y="885" width="2.1030%" height="15" fill="rgb(214,202,54)" fg:x="2867" fg:w="78"/><text x="77.5485%" y="895.50">r..</text></g><g><title>rustls::vecbuf::ChunkVecBuffer::is_full (2 samples, 0.05%)</title><rect x="79.3475%" y="869" width="0.0539%" height="15" fill="rgb(254,165,40)" fg:x="2943" fg:w="2"/><text x="79.5975%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.05%)</title><rect x="79.3475%" y="853" width="0.0539%" height="15" fill="rgb(246,173,38)" fg:x="2943" fg:w="2"/><text x="79.5975%" y="863.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::is_full::_{{closure}} (1 samples, 0.03%)</title><rect x="79.3745%" y="837" width="0.0270%" height="15" fill="rgb(215,3,27)" fg:x="2944" fg:w="1"/><text x="79.6245%" y="847.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::len (1 samples, 0.03%)</title><rect x="79.3745%" y="821" width="0.0270%" height="15" fill="rgb(239,169,51)" fg:x="2944" fg:w="1"/><text x="79.6245%" y="831.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="79.3745%" y="805" width="0.0270%" height="15" fill="rgb(212,5,25)" fg:x="2944" fg:w="1"/><text x="79.6245%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="79.3745%" y="789" width="0.0270%" height="15" fill="rgb(243,45,17)" fg:x="2944" fg:w="1"/><text x="79.6245%" y="799.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="79.3745%" y="773" width="0.0270%" height="15" fill="rgb(242,97,9)" fg:x="2944" fg:w="1"/><text x="79.6245%" y="783.50"></text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (139 samples, 3.75%)</title><rect x="75.6808%" y="917" width="3.7476%" height="15" fill="rgb(228,71,31)" fg:x="2807" fg:w="139"/><text x="75.9308%" y="927.50">&lt;tok..</text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::read_io (133 samples, 3.59%)</title><rect x="75.8425%" y="901" width="3.5859%" height="15" fill="rgb(252,184,16)" fg:x="2813" fg:w="133"/><text x="76.0925%" y="911.50">toki..</text></g><g><title>std::io::error::Error::kind (1 samples, 0.03%)</title><rect x="79.4015%" y="885" width="0.0270%" height="15" fill="rgb(236,169,46)" fg:x="2945" fg:w="1"/><text x="79.6515%" y="895.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::data (1 samples, 0.03%)</title><rect x="79.4015%" y="869" width="0.0270%" height="15" fill="rgb(207,17,47)" fg:x="2945" fg:w="1"/><text x="79.6515%" y="879.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (1 samples, 0.03%)</title><rect x="79.4015%" y="853" width="0.0270%" height="15" fill="rgb(206,201,28)" fg:x="2945" fg:w="1"/><text x="79.6515%" y="863.50"></text></g><g><title>std::io::error::repr_bitpacked::kind_from_prim (1 samples, 0.03%)</title><rect x="79.4015%" y="837" width="0.0270%" height="15" fill="rgb(224,184,23)" fg:x="2945" fg:w="1"/><text x="79.6515%" y="847.50"></text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (141 samples, 3.80%)</title><rect x="75.6538%" y="965" width="3.8016%" height="15" fill="rgb(208,139,48)" fg:x="2806" fg:w="141"/><text x="75.9038%" y="975.50">&lt;tok..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (141 samples, 3.80%)</title><rect x="75.6538%" y="949" width="3.8016%" height="15" fill="rgb(208,130,10)" fg:x="2806" fg:w="141"/><text x="75.9038%" y="959.50">&lt;all..</text></g><g><title>&lt;tokio_rustls::client::TlsStream&lt;IO&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (141 samples, 3.80%)</title><rect x="75.6538%" y="933" width="3.8016%" height="15" fill="rgb(211,213,45)" fg:x="2806" fg:w="141"/><text x="75.9038%" y="943.50">&lt;tok..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.03%)</title><rect x="79.4284%" y="917" width="0.0270%" height="15" fill="rgb(235,100,30)" fg:x="2946" fg:w="1"/><text x="79.6784%" y="927.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.03%)</title><rect x="79.4284%" y="901" width="0.0270%" height="15" fill="rgb(206,144,31)" fg:x="2946" fg:w="1"/><text x="79.6784%" y="911.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="79.4284%" y="885" width="0.0270%" height="15" fill="rgb(224,200,26)" fg:x="2946" fg:w="1"/><text x="79.6784%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="79.4284%" y="869" width="0.0270%" height="15" fill="rgb(247,104,53)" fg:x="2946" fg:w="1"/><text x="79.6784%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.03%)</title><rect x="79.4554%" y="917" width="0.0270%" height="15" fill="rgb(220,14,17)" fg:x="2947" fg:w="1"/><text x="79.7054%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.03%)</title><rect x="79.4554%" y="901" width="0.0270%" height="15" fill="rgb(230,140,40)" fg:x="2947" fg:w="1"/><text x="79.7054%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::boxed::Box&lt;tokio_rustls::client::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="79.4554%" y="965" width="0.0809%" height="15" fill="rgb(229,2,41)" fg:x="2947" fg:w="3"/><text x="79.7054%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="79.4554%" y="949" width="0.0809%" height="15" fill="rgb(232,89,16)" fg:x="2947" fg:w="3"/><text x="79.7054%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (3 samples, 0.08%)</title><rect x="79.4554%" y="933" width="0.0809%" height="15" fill="rgb(247,59,52)" fg:x="2947" fg:w="3"/><text x="79.7054%" y="943.50"></text></g><g><title>syscall (2 samples, 0.05%)</title><rect x="79.4823%" y="917" width="0.0539%" height="15" fill="rgb(226,110,21)" fg:x="2948" fg:w="2"/><text x="79.7323%" y="927.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (2 samples, 0.05%)</title><rect x="79.4823%" y="901" width="0.0539%" height="15" fill="rgb(224,176,43)" fg:x="2948" fg:w="2"/><text x="79.7323%" y="911.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.03%)</title><rect x="79.5632%" y="757" width="0.0270%" height="15" fill="rgb(221,73,6)" fg:x="2951" fg:w="1"/><text x="79.8132%" y="767.50"></text></g><g><title>dequeue_entity (1 samples, 0.03%)</title><rect x="79.5632%" y="741" width="0.0270%" height="15" fill="rgb(232,78,19)" fg:x="2951" fg:w="1"/><text x="79.8132%" y="751.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="79.5632%" y="725" width="0.0270%" height="15" fill="rgb(233,112,48)" fg:x="2951" fg:w="1"/><text x="79.8132%" y="735.50"></text></g><g><title>update_min_vruntime (1 samples, 0.03%)</title><rect x="79.5632%" y="709" width="0.0270%" height="15" fill="rgb(243,131,47)" fg:x="2951" fg:w="1"/><text x="79.8132%" y="719.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.13%)</title><rect x="79.5902%" y="741" width="0.1348%" height="15" fill="rgb(226,51,1)" fg:x="2952" fg:w="5"/><text x="79.8402%" y="751.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.13%)</title><rect x="79.5902%" y="725" width="0.1348%" height="15" fill="rgb(247,58,7)" fg:x="2952" fg:w="5"/><text x="79.8402%" y="735.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (5 samples, 0.13%)</title><rect x="79.5902%" y="709" width="0.1348%" height="15" fill="rgb(209,7,32)" fg:x="2952" fg:w="5"/><text x="79.8402%" y="719.50"></text></g><g><title>native_write_msr (5 samples, 0.13%)</title><rect x="79.5902%" y="693" width="0.1348%" height="15" fill="rgb(209,39,41)" fg:x="2952" fg:w="5"/><text x="79.8402%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.16%)</title><rect x="79.5902%" y="757" width="0.1618%" height="15" fill="rgb(226,182,46)" fg:x="2952" fg:w="6"/><text x="79.8402%" y="767.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.03%)</title><rect x="79.7250%" y="741" width="0.0270%" height="15" fill="rgb(230,219,10)" fg:x="2957" fg:w="1"/><text x="79.9750%" y="751.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="79.7520%" y="757" width="0.0270%" height="15" fill="rgb(227,175,30)" fg:x="2958" fg:w="1"/><text x="80.0020%" y="767.50"></text></g><g><title>set_next_entity (1 samples, 0.03%)</title><rect x="79.7520%" y="741" width="0.0270%" height="15" fill="rgb(217,2,50)" fg:x="2958" fg:w="1"/><text x="80.0020%" y="751.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="79.7520%" y="725" width="0.0270%" height="15" fill="rgb(229,160,0)" fg:x="2958" fg:w="1"/><text x="80.0020%" y="735.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="79.7520%" y="709" width="0.0270%" height="15" fill="rgb(207,78,37)" fg:x="2958" fg:w="1"/><text x="80.0020%" y="719.50"></text></g><g><title>__x64_sys_futex (9 samples, 0.24%)</title><rect x="79.5632%" y="853" width="0.2427%" height="15" fill="rgb(225,57,0)" fg:x="2951" fg:w="9"/><text x="79.8132%" y="863.50"></text></g><g><title>do_futex (9 samples, 0.24%)</title><rect x="79.5632%" y="837" width="0.2427%" height="15" fill="rgb(232,154,2)" fg:x="2951" fg:w="9"/><text x="79.8132%" y="847.50"></text></g><g><title>futex_wait (9 samples, 0.24%)</title><rect x="79.5632%" y="821" width="0.2427%" height="15" fill="rgb(241,212,25)" fg:x="2951" fg:w="9"/><text x="79.8132%" y="831.50"></text></g><g><title>futex_wait_queue (9 samples, 0.24%)</title><rect x="79.5632%" y="805" width="0.2427%" height="15" fill="rgb(226,69,20)" fg:x="2951" fg:w="9"/><text x="79.8132%" y="815.50"></text></g><g><title>schedule (9 samples, 0.24%)</title><rect x="79.5632%" y="789" width="0.2427%" height="15" fill="rgb(247,184,54)" fg:x="2951" fg:w="9"/><text x="79.8132%" y="799.50"></text></g><g><title>__schedule (9 samples, 0.24%)</title><rect x="79.5632%" y="773" width="0.2427%" height="15" fill="rgb(210,145,0)" fg:x="2951" fg:w="9"/><text x="79.8132%" y="783.50"></text></g><g><title>psi_task_switch (1 samples, 0.03%)</title><rect x="79.7789%" y="757" width="0.0270%" height="15" fill="rgb(253,82,12)" fg:x="2959" fg:w="1"/><text x="80.0289%" y="767.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (11 samples, 0.30%)</title><rect x="79.5363%" y="917" width="0.2966%" height="15" fill="rgb(245,42,11)" fg:x="2950" fg:w="11"/><text x="79.7863%" y="927.50"></text></g><g><title>syscall (11 samples, 0.30%)</title><rect x="79.5363%" y="901" width="0.2966%" height="15" fill="rgb(219,147,32)" fg:x="2950" fg:w="11"/><text x="79.7863%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.30%)</title><rect x="79.5363%" y="885" width="0.2966%" height="15" fill="rgb(246,12,7)" fg:x="2950" fg:w="11"/><text x="79.7863%" y="895.50"></text></g><g><title>do_syscall_64 (10 samples, 0.27%)</title><rect x="79.5632%" y="869" width="0.2696%" height="15" fill="rgb(243,50,9)" fg:x="2951" fg:w="10"/><text x="79.8132%" y="879.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="79.8059%" y="853" width="0.0270%" height="15" fill="rgb(219,149,6)" fg:x="2960" fg:w="1"/><text x="80.0559%" y="863.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="79.8059%" y="837" width="0.0270%" height="15" fill="rgb(241,51,42)" fg:x="2960" fg:w="1"/><text x="80.0559%" y="847.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadU32&lt;R&gt; as core::future::future::Future&gt;::poll (157 samples, 4.23%)</title><rect x="75.6269%" y="1029" width="4.2329%" height="15" fill="rgb(226,128,27)" fg:x="2805" fg:w="157"/><text x="75.8769%" y="1039.50">&lt;toki..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (157 samples, 4.23%)</title><rect x="75.6269%" y="1013" width="4.2329%" height="15" fill="rgb(244,144,4)" fg:x="2805" fg:w="157"/><text x="75.8769%" y="1023.50">&lt;&amp;mut..</text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (157 samples, 4.23%)</title><rect x="75.6269%" y="997" width="4.2329%" height="15" fill="rgb(221,4,13)" fg:x="2805" fg:w="157"/><text x="75.8769%" y="1007.50">&lt;toki..</text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (156 samples, 4.21%)</title><rect x="75.6538%" y="981" width="4.2060%" height="15" fill="rgb(208,170,28)" fg:x="2806" fg:w="156"/><text x="75.9038%" y="991.50">tokio..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.32%)</title><rect x="79.5363%" y="965" width="0.3235%" height="15" fill="rgb(226,131,13)" fg:x="2950" fg:w="12"/><text x="79.7863%" y="975.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (12 samples, 0.32%)</title><rect x="79.5363%" y="949" width="0.3235%" height="15" fill="rgb(215,72,41)" fg:x="2950" fg:w="12"/><text x="79.7863%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (12 samples, 0.32%)</title><rect x="79.5363%" y="933" width="0.3235%" height="15" fill="rgb(243,108,20)" fg:x="2950" fg:w="12"/><text x="79.7863%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.03%)</title><rect x="79.8328%" y="917" width="0.0270%" height="15" fill="rgb(230,189,17)" fg:x="2961" fg:w="1"/><text x="80.0828%" y="927.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.03%)</title><rect x="79.8328%" y="901" width="0.0270%" height="15" fill="rgb(220,50,17)" fg:x="2961" fg:w="1"/><text x="80.0828%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.03%)</title><rect x="79.8328%" y="885" width="0.0270%" height="15" fill="rgb(248,152,48)" fg:x="2961" fg:w="1"/><text x="80.0828%" y="895.50"></text></g><g><title>alloc::string::String::from_utf8 (1 samples, 0.03%)</title><rect x="79.8598%" y="1029" width="0.0270%" height="15" fill="rgb(244,91,11)" fg:x="2962" fg:w="1"/><text x="80.1098%" y="1039.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.03%)</title><rect x="79.8598%" y="1013" width="0.0270%" height="15" fill="rgb(220,157,5)" fg:x="2962" fg:w="1"/><text x="80.1098%" y="1023.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.03%)</title><rect x="79.8598%" y="997" width="0.0270%" height="15" fill="rgb(253,137,8)" fg:x="2962" fg:w="1"/><text x="80.1098%" y="1007.50"></text></g><g><title>__libc_calloc (6 samples, 0.16%)</title><rect x="79.9137%" y="917" width="0.1618%" height="15" fill="rgb(217,137,51)" fg:x="2964" fg:w="6"/><text x="80.1637%" y="927.50"></text></g><g><title>[libc.so.6] (5 samples, 0.13%)</title><rect x="79.9407%" y="901" width="0.1348%" height="15" fill="rgb(218,209,53)" fg:x="2965" fg:w="5"/><text x="80.1907%" y="911.50"></text></g><g><title>alloc::vec::from_elem (8 samples, 0.22%)</title><rect x="79.8868%" y="1029" width="0.2157%" height="15" fill="rgb(249,137,25)" fg:x="2963" fg:w="8"/><text x="80.1368%" y="1039.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (8 samples, 0.22%)</title><rect x="79.8868%" y="1013" width="0.2157%" height="15" fill="rgb(239,155,26)" fg:x="2963" fg:w="8"/><text x="80.1368%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (7 samples, 0.19%)</title><rect x="79.9137%" y="997" width="0.1887%" height="15" fill="rgb(227,85,46)" fg:x="2964" fg:w="7"/><text x="80.1637%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (7 samples, 0.19%)</title><rect x="79.9137%" y="981" width="0.1887%" height="15" fill="rgb(251,107,43)" fg:x="2964" fg:w="7"/><text x="80.1637%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (7 samples, 0.19%)</title><rect x="79.9137%" y="965" width="0.1887%" height="15" fill="rgb(234,170,33)" fg:x="2964" fg:w="7"/><text x="80.1637%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.19%)</title><rect x="79.9137%" y="949" width="0.1887%" height="15" fill="rgb(206,29,35)" fg:x="2964" fg:w="7"/><text x="80.1637%" y="959.50"></text></g><g><title>alloc::alloc::alloc_zeroed (7 samples, 0.19%)</title><rect x="79.9137%" y="933" width="0.1887%" height="15" fill="rgb(227,138,25)" fg:x="2964" fg:w="7"/><text x="80.1637%" y="943.50"></text></g><g><title>__rust_alloc_zeroed (1 samples, 0.03%)</title><rect x="80.0755%" y="917" width="0.0270%" height="15" fill="rgb(249,131,35)" fg:x="2970" fg:w="1"/><text x="80.3255%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.08%)</title><rect x="80.1025%" y="1029" width="0.0809%" height="15" fill="rgb(239,6,40)" fg:x="2971" fg:w="3"/><text x="80.3525%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.08%)</title><rect x="80.1025%" y="1013" width="0.0809%" height="15" fill="rgb(246,136,47)" fg:x="2971" fg:w="3"/><text x="80.3525%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="80.1025%" y="997" width="0.0809%" height="15" fill="rgb(253,58,26)" fg:x="2971" fg:w="3"/><text x="80.3525%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.08%)</title><rect x="80.1025%" y="981" width="0.0809%" height="15" fill="rgb(237,141,10)" fg:x="2971" fg:w="3"/><text x="80.3525%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.08%)</title><rect x="80.1025%" y="965" width="0.0809%" height="15" fill="rgb(234,156,12)" fg:x="2971" fg:w="3"/><text x="80.3525%" y="975.50"></text></g><g><title>cfree (3 samples, 0.08%)</title><rect x="80.1025%" y="949" width="0.0809%" height="15" fill="rgb(243,224,36)" fg:x="2971" fg:w="3"/><text x="80.3525%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="80.1294%" y="933" width="0.0539%" height="15" fill="rgb(205,229,51)" fg:x="2972" fg:w="2"/><text x="80.3794%" y="943.50"></text></g><g><title>kvlr::connection::frame::Frame::read_from_stream::_{{closure}} (174 samples, 4.69%)</title><rect x="75.5190%" y="1045" width="4.6913%" height="15" fill="rgb(223,189,4)" fg:x="2801" fg:w="174"/><text x="75.7690%" y="1055.50">kvlr:..</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_exact (1 samples, 0.03%)</title><rect x="80.1833%" y="1029" width="0.0270%" height="15" fill="rgb(249,167,54)" fg:x="2974" fg:w="1"/><text x="80.4333%" y="1039.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.03%)</title><rect x="80.1833%" y="1013" width="0.0270%" height="15" fill="rgb(218,34,28)" fg:x="2974" fg:w="1"/><text x="80.4333%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="80.1833%" y="997" width="0.0270%" height="15" fill="rgb(232,109,42)" fg:x="2974" fg:w="1"/><text x="80.4333%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="80.1833%" y="981" width="0.0270%" height="15" fill="rgb(248,214,46)" fg:x="2974" fg:w="1"/><text x="80.4333%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="80.1833%" y="965" width="0.0270%" height="15" fill="rgb(244,216,40)" fg:x="2974" fg:w="1"/><text x="80.4333%" y="975.50"></text></g><g><title>kvlr::connection::processor::read_processor::_{{closure}} (208 samples, 5.61%)</title><rect x="74.6293%" y="1061" width="5.6080%" height="15" fill="rgb(231,226,31)" fg:x="2768" fg:w="208"/><text x="74.8793%" y="1071.50">kvlr::c..</text></g><g><title>tokio::task::yield_now::yield_now::_{{closure}} (1 samples, 0.03%)</title><rect x="80.2103%" y="1045" width="0.0270%" height="15" fill="rgb(238,38,43)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="1055.50"></text></g><g><title>&lt;tokio::task::yield_now::yield_now::{{closure}}::YieldNow as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="80.2103%" y="1029" width="0.0270%" height="15" fill="rgb(208,88,43)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="1039.50"></text></g><g><title>tokio::runtime::context::defer (1 samples, 0.03%)</title><rect x="80.2103%" y="1013" width="0.0270%" height="15" fill="rgb(205,136,37)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="1023.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1 samples, 0.03%)</title><rect x="80.2103%" y="997" width="0.0270%" height="15" fill="rgb(237,34,14)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="80.2103%" y="981" width="0.0270%" height="15" fill="rgb(236,193,44)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="991.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (1 samples, 0.03%)</title><rect x="80.2103%" y="965" width="0.0270%" height="15" fill="rgb(231,48,10)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="975.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="80.2103%" y="949" width="0.0270%" height="15" fill="rgb(213,141,34)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="959.50"></text></g><g><title>tokio::runtime::context::defer::_{{closure}} (1 samples, 0.03%)</title><rect x="80.2103%" y="933" width="0.0270%" height="15" fill="rgb(249,130,34)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::Context::defer (1 samples, 0.03%)</title><rect x="80.2103%" y="917" width="0.0270%" height="15" fill="rgb(219,42,41)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::defer (1 samples, 0.03%)</title><rect x="80.2103%" y="901" width="0.0270%" height="15" fill="rgb(224,100,54)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="911.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="80.2103%" y="885" width="0.0270%" height="15" fill="rgb(229,200,27)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="895.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.03%)</title><rect x="80.2103%" y="869" width="0.0270%" height="15" fill="rgb(217,118,10)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="879.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (1 samples, 0.03%)</title><rect x="80.2103%" y="853" width="0.0270%" height="15" fill="rgb(206,22,3)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="80.2103%" y="837" width="0.0270%" height="15" fill="rgb(232,163,46)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="80.2103%" y="821" width="0.0270%" height="15" fill="rgb(206,95,13)" fg:x="2975" fg:w="1"/><text x="80.4603%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="80.3181%" y="917" width="0.0270%" height="15" fill="rgb(253,154,18)" fg:x="2979" fg:w="1"/><text x="80.5681%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.08%)</title><rect x="80.2912%" y="1029" width="0.0809%" height="15" fill="rgb(219,32,23)" fg:x="2978" fg:w="3"/><text x="80.5412%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.08%)</title><rect x="80.2912%" y="1013" width="0.0809%" height="15" fill="rgb(230,191,45)" fg:x="2978" fg:w="3"/><text x="80.5412%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.08%)</title><rect x="80.2912%" y="997" width="0.0809%" height="15" fill="rgb(229,64,36)" fg:x="2978" fg:w="3"/><text x="80.5412%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="80.2912%" y="981" width="0.0809%" height="15" fill="rgb(205,129,25)" fg:x="2978" fg:w="3"/><text x="80.5412%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.08%)</title><rect x="80.2912%" y="965" width="0.0809%" height="15" fill="rgb(254,112,7)" fg:x="2978" fg:w="3"/><text x="80.5412%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.08%)</title><rect x="80.2912%" y="949" width="0.0809%" height="15" fill="rgb(226,53,48)" fg:x="2978" fg:w="3"/><text x="80.5412%" y="959.50"></text></g><g><title>cfree (3 samples, 0.08%)</title><rect x="80.2912%" y="933" width="0.0809%" height="15" fill="rgb(214,153,38)" fg:x="2978" fg:w="3"/><text x="80.5412%" y="943.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.03%)</title><rect x="80.3451%" y="917" width="0.0270%" height="15" fill="rgb(243,101,7)" fg:x="2980" fg:w="1"/><text x="80.5951%" y="927.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="80.3451%" y="901" width="0.0270%" height="15" fill="rgb(240,140,22)" fg:x="2980" fg:w="1"/><text x="80.5951%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="80.3451%" y="885" width="0.0270%" height="15" fill="rgb(235,114,2)" fg:x="2980" fg:w="1"/><text x="80.5951%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="80.3721%" y="917" width="0.0270%" height="15" fill="rgb(242,59,12)" fg:x="2981" fg:w="1"/><text x="80.6221%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="80.3721%" y="901" width="0.0270%" height="15" fill="rgb(252,134,9)" fg:x="2981" fg:w="1"/><text x="80.6221%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;kvlr::connection::frame::Frame&gt; (5 samples, 0.13%)</title><rect x="80.2912%" y="1045" width="0.1348%" height="15" fill="rgb(236,4,44)" fg:x="2978" fg:w="5"/><text x="80.5412%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="80.3721%" y="1029" width="0.0539%" height="15" fill="rgb(254,172,41)" fg:x="2981" fg:w="2"/><text x="80.6221%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="80.3721%" y="1013" width="0.0539%" height="15" fill="rgb(244,63,20)" fg:x="2981" fg:w="2"/><text x="80.6221%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="80.3721%" y="997" width="0.0539%" height="15" fill="rgb(250,73,31)" fg:x="2981" fg:w="2"/><text x="80.6221%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="80.3721%" y="981" width="0.0539%" height="15" fill="rgb(241,38,36)" fg:x="2981" fg:w="2"/><text x="80.6221%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="80.3721%" y="965" width="0.0539%" height="15" fill="rgb(245,211,2)" fg:x="2981" fg:w="2"/><text x="80.6221%" y="975.50"></text></g><g><title>cfree (2 samples, 0.05%)</title><rect x="80.3721%" y="949" width="0.0539%" height="15" fill="rgb(206,120,28)" fg:x="2981" fg:w="2"/><text x="80.6221%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="80.3721%" y="933" width="0.0539%" height="15" fill="rgb(211,59,34)" fg:x="2981" fg:w="2"/><text x="80.6221%" y="943.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="80.3990%" y="917" width="0.0270%" height="15" fill="rgb(233,168,5)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="80.3990%" y="901" width="0.0270%" height="15" fill="rgb(234,33,13)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="911.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.03%)</title><rect x="80.3990%" y="885" width="0.0270%" height="15" fill="rgb(231,150,26)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="895.50"></text></g><g><title>handle_softirqs (1 samples, 0.03%)</title><rect x="80.3990%" y="869" width="0.0270%" height="15" fill="rgb(217,191,4)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="879.50"></text></g><g><title>run_timer_softirq (1 samples, 0.03%)</title><rect x="80.3990%" y="853" width="0.0270%" height="15" fill="rgb(246,198,38)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="863.50"></text></g><g><title>__run_timers (1 samples, 0.03%)</title><rect x="80.3990%" y="837" width="0.0270%" height="15" fill="rgb(245,64,37)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="847.50"></text></g><g><title>call_timer_fn (1 samples, 0.03%)</title><rect x="80.3990%" y="821" width="0.0270%" height="15" fill="rgb(250,30,36)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="831.50"></text></g><g><title>tcp_write_timer (1 samples, 0.03%)</title><rect x="80.3990%" y="805" width="0.0270%" height="15" fill="rgb(217,86,53)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="815.50"></text></g><g><title>tcp_retransmit_timer (1 samples, 0.03%)</title><rect x="80.3990%" y="789" width="0.0270%" height="15" fill="rgb(228,157,16)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="799.50"></text></g><g><title>tcp_retransmit_skb (1 samples, 0.03%)</title><rect x="80.3990%" y="773" width="0.0270%" height="15" fill="rgb(217,59,31)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="783.50"></text></g><g><title>__tcp_retransmit_skb (1 samples, 0.03%)</title><rect x="80.3990%" y="757" width="0.0270%" height="15" fill="rgb(237,138,41)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="767.50"></text></g><g><title>inet_sk_rebuild_header (1 samples, 0.03%)</title><rect x="80.3990%" y="741" width="0.0270%" height="15" fill="rgb(227,91,49)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="751.50"></text></g><g><title>ip_route_output_flow (1 samples, 0.03%)</title><rect x="80.3990%" y="725" width="0.0270%" height="15" fill="rgb(247,21,44)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="735.50"></text></g><g><title>ip_route_output_key_hash_rcu (1 samples, 0.03%)</title><rect x="80.3990%" y="709" width="0.0270%" height="15" fill="rgb(219,210,51)" fg:x="2982" fg:w="1"/><text x="80.6490%" y="719.50"></text></g><g><title>&lt;tokio::io::util::flush::Flush&lt;A&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="80.4260%" y="1029" width="0.0539%" height="15" fill="rgb(209,140,6)" fg:x="2983" fg:w="2"/><text x="80.6760%" y="1039.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_flush (2 samples, 0.05%)</title><rect x="80.4260%" y="1013" width="0.0539%" height="15" fill="rgb(221,188,24)" fg:x="2983" fg:w="2"/><text x="80.6760%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (2 samples, 0.05%)</title><rect x="80.4260%" y="997" width="0.0539%" height="15" fill="rgb(232,154,20)" fg:x="2983" fg:w="2"/><text x="80.6760%" y="1007.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.03%)</title><rect x="80.4530%" y="981" width="0.0270%" height="15" fill="rgb(244,137,50)" fg:x="2984" fg:w="1"/><text x="80.7030%" y="991.50"></text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (1 samples, 0.03%)</title><rect x="80.4530%" y="965" width="0.0270%" height="15" fill="rgb(225,185,43)" fg:x="2984" fg:w="1"/><text x="80.7030%" y="975.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush::_{{closure}} (1 samples, 0.03%)</title><rect x="80.4530%" y="949" width="0.0270%" height="15" fill="rgb(213,205,38)" fg:x="2984" fg:w="1"/><text x="80.7030%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.03%)</title><rect x="80.4530%" y="933" width="0.0270%" height="15" fill="rgb(236,73,12)" fg:x="2984" fg:w="1"/><text x="80.7030%" y="943.50"></text></g><g><title>&lt;tokio_rustls::client::TlsStream&lt;IO&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.03%)</title><rect x="80.4530%" y="917" width="0.0270%" height="15" fill="rgb(235,219,13)" fg:x="2984" fg:w="1"/><text x="80.7030%" y="927.50"></text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.03%)</title><rect x="80.4530%" y="901" width="0.0270%" height="15" fill="rgb(218,59,36)" fg:x="2984" fg:w="1"/><text x="80.7030%" y="911.50"></text></g><g><title>&lt;rustls::conn::connection::Writer as std::io::Write&gt;::flush (1 samples, 0.03%)</title><rect x="80.4530%" y="885" width="0.0270%" height="15" fill="rgb(205,110,39)" fg:x="2984" fg:w="1"/><text x="80.7030%" y="895.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;&amp;mut alloc::vec::Vec&lt;u8,A&gt;&gt; as std::io::Write&gt;::write (5 samples, 0.13%)</title><rect x="80.4799%" y="1013" width="0.1348%" height="15" fill="rgb(218,206,42)" fg:x="2985" fg:w="5"/><text x="80.7299%" y="1023.50"></text></g><g><title>std::io::cursor::vec_write (5 samples, 0.13%)</title><rect x="80.4799%" y="997" width="0.1348%" height="15" fill="rgb(248,125,24)" fg:x="2985" fg:w="5"/><text x="80.7299%" y="1007.50"></text></g><g><title>std::io::cursor::vec_write_unchecked (4 samples, 0.11%)</title><rect x="80.5069%" y="981" width="0.1078%" height="15" fill="rgb(242,28,27)" fg:x="2986" fg:w="4"/><text x="80.7569%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (4 samples, 0.11%)</title><rect x="80.5069%" y="965" width="0.1078%" height="15" fill="rgb(216,228,15)" fg:x="2986" fg:w="4"/><text x="80.7569%" y="975.50"></text></g><g><title>core::intrinsics::copy (4 samples, 0.11%)</title><rect x="80.5069%" y="949" width="0.1078%" height="15" fill="rgb(235,116,46)" fg:x="2986" fg:w="4"/><text x="80.7569%" y="959.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="80.5069%" y="933" width="0.1078%" height="15" fill="rgb(224,18,32)" fg:x="2986" fg:w="4"/><text x="80.7569%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.03%)</title><rect x="80.6147%" y="981" width="0.0270%" height="15" fill="rgb(252,5,12)" fg:x="2990" fg:w="1"/><text x="80.8647%" y="991.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="80.6417%" y="869" width="0.0270%" height="15" fill="rgb(251,36,5)" fg:x="2991" fg:w="1"/><text x="80.8917%" y="879.50"></text></g><g><title>rustls::common_state::CommonState::buffer_plaintext (1 samples, 0.03%)</title><rect x="80.6686%" y="869" width="0.0270%" height="15" fill="rgb(217,53,14)" fg:x="2992" fg:w="1"/><text x="80.9186%" y="879.50"></text></g><g><title>rustls::common_state::CommonState::perhaps_write_key_update (1 samples, 0.03%)</title><rect x="80.6686%" y="853" width="0.0270%" height="15" fill="rgb(215,86,45)" fg:x="2992" fg:w="1"/><text x="80.9186%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.03%)</title><rect x="80.6686%" y="837" width="0.0270%" height="15" fill="rgb(242,169,11)" fg:x="2992" fg:w="1"/><text x="80.9186%" y="847.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="80.6686%" y="821" width="0.0270%" height="15" fill="rgb(211,213,45)" fg:x="2992" fg:w="1"/><text x="80.9186%" y="831.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="80.6686%" y="805" width="0.0270%" height="15" fill="rgb(205,88,11)" fg:x="2992" fg:w="1"/><text x="80.9186%" y="815.50"></text></g><g><title>rustls::common_state::CommonState::queue_tls_message (3 samples, 0.08%)</title><rect x="80.7226%" y="837" width="0.0809%" height="15" fill="rgb(252,69,26)" fg:x="2994" fg:w="3"/><text x="80.9726%" y="847.50"></text></g><g><title>rustls::msgs::message::outbound::OutboundOpaqueMessage::encode (2 samples, 0.05%)</title><rect x="80.7495%" y="821" width="0.0539%" height="15" fill="rgb(246,123,37)" fg:x="2995" fg:w="2"/><text x="80.9995%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="80.8035%" y="789" width="0.0270%" height="15" fill="rgb(212,205,5)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="799.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::seal_in_place_append_tag::_{{closure}} (1 samples, 0.03%)</title><rect x="80.8035%" y="773" width="0.0270%" height="15" fill="rgb(253,148,0)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="783.50"></text></g><g><title>&lt;rustls::msgs::message::outbound::PrefixedPayload as core::iter::traits::collect::Extend&lt;&amp;u8&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="80.8035%" y="757" width="0.0270%" height="15" fill="rgb(239,22,4)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="80.8035%" y="741" width="0.0270%" height="15" fill="rgb(226,26,53)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="80.8035%" y="725" width="0.0270%" height="15" fill="rgb(225,229,45)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="80.8035%" y="709" width="0.0270%" height="15" fill="rgb(220,60,37)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="80.8035%" y="693" width="0.0270%" height="15" fill="rgb(217,180,35)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="80.8035%" y="677" width="0.0270%" height="15" fill="rgb(229,7,53)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.03%)</title><rect x="80.8035%" y="661" width="0.0270%" height="15" fill="rgb(254,137,3)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.03%)</title><rect x="80.8035%" y="645" width="0.0270%" height="15" fill="rgb(215,140,41)" fg:x="2997" fg:w="1"/><text x="81.0535%" y="655.50"></text></g><g><title>ring::aead::aes::Key::ctr32_encrypt_within (3 samples, 0.08%)</title><rect x="80.9383%" y="741" width="0.0809%" height="15" fill="rgb(250,80,15)" fg:x="3002" fg:w="3"/><text x="81.1883%" y="751.50"></text></g><g><title>ring::aead::aes::ctr32_encrypt_blocks_ (3 samples, 0.08%)</title><rect x="80.9383%" y="725" width="0.0809%" height="15" fill="rgb(252,191,6)" fg:x="3002" fg:w="3"/><text x="81.1883%" y="735.50"></text></g><g><title>ring_core_0_17_8_aes_hw_ctr32_encrypt_blocks (3 samples, 0.08%)</title><rect x="80.9383%" y="709" width="0.0809%" height="15" fill="rgb(246,217,18)" fg:x="3002" fg:w="3"/><text x="81.1883%" y="719.50"></text></g><g><title>_aesni_encrypt8 (1 samples, 0.03%)</title><rect x="80.9922%" y="693" width="0.0270%" height="15" fill="rgb(223,93,7)" fg:x="3004" fg:w="1"/><text x="81.2422%" y="703.50"></text></g><g><title>ring::aead::aes::Key::encrypt_iv_xor_block (1 samples, 0.03%)</title><rect x="81.0191%" y="741" width="0.0270%" height="15" fill="rgb(225,55,52)" fg:x="3005" fg:w="1"/><text x="81.2691%" y="751.50"></text></g><g><title>ring::aead::aes::Key::encrypt_block (1 samples, 0.03%)</title><rect x="81.0191%" y="725" width="0.0270%" height="15" fill="rgb(240,31,24)" fg:x="3005" fg:w="1"/><text x="81.2691%" y="735.50"></text></g><g><title>ring::aead::aes::encrypt_block_ (1 samples, 0.03%)</title><rect x="81.0191%" y="709" width="0.0270%" height="15" fill="rgb(205,56,52)" fg:x="3005" fg:w="1"/><text x="81.2691%" y="719.50"></text></g><g><title>ring_core_0_17_8_aes_hw_encrypt (1 samples, 0.03%)</title><rect x="81.0191%" y="693" width="0.0270%" height="15" fill="rgb(246,146,12)" fg:x="3005" fg:w="1"/><text x="81.2691%" y="703.50"></text></g><g><title>ring::aead::aes_gcm::finish (2 samples, 0.05%)</title><rect x="81.0461%" y="741" width="0.0539%" height="15" fill="rgb(239,84,36)" fg:x="3006" fg:w="2"/><text x="81.2961%" y="751.50"></text></g><g><title>ring::aead::gcm::Context::pre_finish (1 samples, 0.03%)</title><rect x="81.0731%" y="725" width="0.0270%" height="15" fill="rgb(207,41,40)" fg:x="3007" fg:w="1"/><text x="81.3231%" y="735.50"></text></g><g><title>ring::aead::block::Block::zero_from (1 samples, 0.03%)</title><rect x="81.1000%" y="741" width="0.0270%" height="15" fill="rgb(241,179,25)" fg:x="3008" fg:w="1"/><text x="81.3500%" y="751.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.03%)</title><rect x="81.1000%" y="725" width="0.0270%" height="15" fill="rgb(210,0,34)" fg:x="3008" fg:w="1"/><text x="81.3500%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="81.1000%" y="709" width="0.0270%" height="15" fill="rgb(225,217,29)" fg:x="3008" fg:w="1"/><text x="81.3500%" y="719.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="81.1000%" y="693" width="0.0270%" height="15" fill="rgb(216,191,38)" fg:x="3008" fg:w="1"/><text x="81.3500%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="81.1000%" y="677" width="0.0270%" height="15" fill="rgb(232,140,52)" fg:x="3008" fg:w="1"/><text x="81.3500%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="81.1000%" y="661" width="0.0270%" height="15" fill="rgb(223,158,51)" fg:x="3008" fg:w="1"/><text x="81.3500%" y="671.50"></text></g><g><title>core::slice::index::get_offset_len_mut_noubcheck (1 samples, 0.03%)</title><rect x="81.1000%" y="645" width="0.0270%" height="15" fill="rgb(235,29,51)" fg:x="3008" fg:w="1"/><text x="81.3500%" y="655.50"></text></g><g><title>core::slice::index::get_mut_noubcheck (1 samples, 0.03%)</title><rect x="81.1000%" y="629" width="0.0270%" height="15" fill="rgb(215,181,18)" fg:x="3008" fg:w="1"/><text x="81.3500%" y="639.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="81.1270%" y="725" width="0.0539%" height="15" fill="rgb(227,125,34)" fg:x="3009" fg:w="2"/><text x="81.3770%" y="735.50"></text></g><g><title>ring::aead::gcm::Context::update_block (1 samples, 0.03%)</title><rect x="81.1809%" y="725" width="0.0270%" height="15" fill="rgb(230,197,49)" fg:x="3011" fg:w="1"/><text x="81.4309%" y="735.50"></text></g><g><title>&lt;ring::aead::gcm::Xi as core::ops::bit::BitXorAssign&lt;ring::aead::block::Block&gt;&gt;::bitxor_assign (1 samples, 0.03%)</title><rect x="81.1809%" y="709" width="0.0270%" height="15" fill="rgb(239,141,16)" fg:x="3011" fg:w="1"/><text x="81.4309%" y="719.50"></text></g><g><title>&lt;ring::aead::block::Block as core::ops::bit::BitXorAssign&gt;::bitxor_assign (1 samples, 0.03%)</title><rect x="81.1809%" y="693" width="0.0270%" height="15" fill="rgb(225,105,43)" fg:x="3011" fg:w="1"/><text x="81.4309%" y="703.50"></text></g><g><title>ring::aead::gcm::Context::new (4 samples, 0.11%)</title><rect x="81.1270%" y="741" width="0.1078%" height="15" fill="rgb(214,131,14)" fg:x="3009" fg:w="4"/><text x="81.3770%" y="751.50"></text></g><g><title>ring_core_0_17_8_gcm_gmult_clmul (1 samples, 0.03%)</title><rect x="81.2079%" y="725" width="0.0270%" height="15" fill="rgb(229,177,11)" fg:x="3012" fg:w="1"/><text x="81.4579%" y="735.50"></text></g><g><title>_aesni_ctr32_6x (1 samples, 0.03%)</title><rect x="81.2618%" y="725" width="0.0270%" height="15" fill="rgb(231,180,14)" fg:x="3014" fg:w="1"/><text x="81.5118%" y="735.50"></text></g><g><title>ring_core_0_17_8_aesni_gcm_encrypt (19 samples, 0.51%)</title><rect x="81.2348%" y="741" width="0.5123%" height="15" fill="rgb(232,88,2)" fg:x="3013" fg:w="19"/><text x="81.4848%" y="751.50"></text></g><g><title>_aesni_ctr32_ghash_6x (17 samples, 0.46%)</title><rect x="81.2888%" y="725" width="0.4583%" height="15" fill="rgb(205,220,8)" fg:x="3015" fg:w="17"/><text x="81.5388%" y="735.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::seal_in_place_append_tag (37 samples, 1.00%)</title><rect x="80.8035%" y="805" width="0.9976%" height="15" fill="rgb(225,23,53)" fg:x="2997" fg:w="37"/><text x="81.0535%" y="815.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::seal_in_place_separate_tag (36 samples, 0.97%)</title><rect x="80.8304%" y="789" width="0.9706%" height="15" fill="rgb(213,62,29)" fg:x="2998" fg:w="36"/><text x="81.0804%" y="799.50"></text></g><g><title>ring::aead::less_safe_key::seal_in_place_separate_tag_ (36 samples, 0.97%)</title><rect x="80.8304%" y="773" width="0.9706%" height="15" fill="rgb(227,75,7)" fg:x="2998" fg:w="36"/><text x="81.0804%" y="783.50"></text></g><g><title>ring::aead::aes_gcm::aes_gcm_seal (34 samples, 0.92%)</title><rect x="80.8843%" y="757" width="0.9167%" height="15" fill="rgb(207,105,14)" fg:x="3000" fg:w="34"/><text x="81.1343%" y="767.50"></text></g><g><title>ring_core_0_17_8_gcm_ghash_avx (2 samples, 0.05%)</title><rect x="81.7471%" y="741" width="0.0539%" height="15" fill="rgb(245,62,29)" fg:x="3032" fg:w="2"/><text x="81.9971%" y="751.50"></text></g><g><title>rustls::crypto::cipher::Nonce::new (2 samples, 0.05%)</title><rect x="81.8010%" y="805" width="0.0539%" height="15" fill="rgb(236,202,4)" fg:x="3034" fg:w="2"/><text x="82.0510%" y="815.50"></text></g><g><title>rustls::msgs::codec::put_u64 (2 samples, 0.05%)</title><rect x="81.8010%" y="789" width="0.0539%" height="15" fill="rgb(250,67,1)" fg:x="3034" fg:w="2"/><text x="82.0510%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_be_bytes (2 samples, 0.05%)</title><rect x="81.8010%" y="773" width="0.0539%" height="15" fill="rgb(253,115,44)" fg:x="3034" fg:w="2"/><text x="82.0510%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_be (2 samples, 0.05%)</title><rect x="81.8010%" y="757" width="0.0539%" height="15" fill="rgb(251,139,18)" fg:x="3034" fg:w="2"/><text x="82.0510%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (2 samples, 0.05%)</title><rect x="81.8010%" y="741" width="0.0539%" height="15" fill="rgb(218,22,32)" fg:x="3034" fg:w="2"/><text x="82.0510%" y="751.50"></text></g><g><title>rustls::enums::ContentType::to_array (2 samples, 0.05%)</title><rect x="81.8549%" y="805" width="0.0539%" height="15" fill="rgb(243,53,5)" fg:x="3036" fg:w="2"/><text x="82.1049%" y="815.50"></text></g><g><title>rustls::enums::&lt;impl core::convert::From&lt;rustls::enums::ContentType&gt; for u8&gt;::from (2 samples, 0.05%)</title><rect x="81.8549%" y="789" width="0.0539%" height="15" fill="rgb(227,56,16)" fg:x="3036" fg:w="2"/><text x="82.1049%" y="799.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="81.8819%" y="773" width="0.0270%" height="15" fill="rgb(245,53,0)" fg:x="3037" fg:w="1"/><text x="82.1319%" y="783.50"></text></g><g><title>rustls::msgs::message::outbound::PrefixedPayload::extend_from_chunks (3 samples, 0.08%)</title><rect x="81.9089%" y="805" width="0.0809%" height="15" fill="rgb(216,170,35)" fg:x="3038" fg:w="3"/><text x="82.1589%" y="815.50"></text></g><g><title>rustls::msgs::message::outbound::OutboundChunks::copy_to_vec (3 samples, 0.08%)</title><rect x="81.9089%" y="789" width="0.0809%" height="15" fill="rgb(211,200,8)" fg:x="3038" fg:w="3"/><text x="82.1589%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.08%)</title><rect x="81.9089%" y="773" width="0.0809%" height="15" fill="rgb(228,204,44)" fg:x="3038" fg:w="3"/><text x="82.1589%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.08%)</title><rect x="81.9089%" y="757" width="0.0809%" height="15" fill="rgb(214,121,17)" fg:x="3038" fg:w="3"/><text x="82.1589%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.08%)</title><rect x="81.9089%" y="741" width="0.0809%" height="15" fill="rgb(233,64,38)" fg:x="3038" fg:w="3"/><text x="82.1589%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.08%)</title><rect x="81.9089%" y="725" width="0.0809%" height="15" fill="rgb(253,54,19)" fg:x="3038" fg:w="3"/><text x="82.1589%" y="735.50"></text></g><g><title>[libc.so.6] (3 samples, 0.08%)</title><rect x="81.9089%" y="709" width="0.0809%" height="15" fill="rgb(253,94,18)" fg:x="3038" fg:w="3"/><text x="82.1589%" y="719.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="81.9898%" y="677" width="0.0270%" height="15" fill="rgb(227,57,52)" fg:x="3041" fg:w="1"/><text x="82.2398%" y="687.50"></text></g><g><title>&lt;rustls::crypto::ring::tls13::Tls13MessageEncrypter as rustls::crypto::cipher::MessageEncrypter&gt;::encrypt (48 samples, 1.29%)</title><rect x="80.8035%" y="821" width="1.2941%" height="15" fill="rgb(230,228,50)" fg:x="2997" fg:w="48"/><text x="81.0535%" y="831.50"></text></g><g><title>rustls::msgs::message::outbound::PrefixedPayload::with_capacity (4 samples, 0.11%)</title><rect x="81.9898%" y="805" width="0.1078%" height="15" fill="rgb(217,205,27)" fg:x="3041" fg:w="4"/><text x="82.2398%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.11%)</title><rect x="81.9898%" y="789" width="0.1078%" height="15" fill="rgb(252,71,50)" fg:x="3041" fg:w="4"/><text x="82.2398%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="81.9898%" y="773" width="0.1078%" height="15" fill="rgb(209,86,4)" fg:x="3041" fg:w="4"/><text x="82.2398%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="81.9898%" y="757" width="0.1078%" height="15" fill="rgb(229,94,0)" fg:x="3041" fg:w="4"/><text x="82.2398%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.11%)</title><rect x="81.9898%" y="741" width="0.1078%" height="15" fill="rgb(252,223,21)" fg:x="3041" fg:w="4"/><text x="82.2398%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.11%)</title><rect x="81.9898%" y="725" width="0.1078%" height="15" fill="rgb(230,210,4)" fg:x="3041" fg:w="4"/><text x="82.2398%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.11%)</title><rect x="81.9898%" y="709" width="0.1078%" height="15" fill="rgb(240,149,38)" fg:x="3041" fg:w="4"/><text x="82.2398%" y="719.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.11%)</title><rect x="81.9898%" y="693" width="0.1078%" height="15" fill="rgb(254,105,20)" fg:x="3041" fg:w="4"/><text x="82.2398%" y="703.50"></text></g><g><title>malloc (3 samples, 0.08%)</title><rect x="82.0167%" y="677" width="0.0809%" height="15" fill="rgb(253,87,46)" fg:x="3042" fg:w="3"/><text x="82.2667%" y="687.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="82.0437%" y="661" width="0.0539%" height="15" fill="rgb(253,116,33)" fg:x="3043" fg:w="2"/><text x="82.2937%" y="671.50"></text></g><g><title>rustls::record_layer::RecordLayer::encrypt_outgoing (49 samples, 1.32%)</title><rect x="80.8035%" y="837" width="1.3211%" height="15" fill="rgb(229,198,5)" fg:x="2997" fg:w="49"/><text x="81.0535%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.03%)</title><rect x="82.0976%" y="821" width="0.0270%" height="15" fill="rgb(242,38,37)" fg:x="3045" fg:w="1"/><text x="82.3476%" y="831.50"></text></g><g><title>rustls::common_state::CommonState::send_single_fragment (54 samples, 1.46%)</title><rect x="80.6956%" y="853" width="1.4559%" height="15" fill="rgb(242,69,53)" fg:x="2993" fg:w="54"/><text x="80.9456%" y="863.50"></text></g><g><title>rustls::record_layer::RecordLayer::next_pre_encrypt_action (1 samples, 0.03%)</title><rect x="82.1246%" y="837" width="0.0270%" height="15" fill="rgb(249,80,16)" fg:x="3046" fg:w="1"/><text x="82.3746%" y="847.50"></text></g><g><title>rustls::record_layer::RecordLayer::pre_encrypt_action (1 samples, 0.03%)</title><rect x="82.1246%" y="821" width="0.0270%" height="15" fill="rgb(206,128,11)" fg:x="3046" fg:w="1"/><text x="82.3746%" y="831.50"></text></g><g><title>&lt;rustls::conn::ConnectionCommon&lt;T&gt; as rustls::conn::connection::PlaintextSink&gt;::write (57 samples, 1.54%)</title><rect x="80.6417%" y="885" width="1.5368%" height="15" fill="rgb(212,35,20)" fg:x="2991" fg:w="57"/><text x="80.8917%" y="895.50"></text></g><g><title>rustls::common_state::CommonState::send_appdata_encrypt (55 samples, 1.48%)</title><rect x="80.6956%" y="869" width="1.4829%" height="15" fill="rgb(236,79,13)" fg:x="2993" fg:w="55"/><text x="80.9456%" y="879.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::apply_limit (1 samples, 0.03%)</title><rect x="82.1515%" y="853" width="0.0270%" height="15" fill="rgb(233,123,3)" fg:x="3047" fg:w="1"/><text x="82.4015%" y="863.50"></text></g><g><title>&lt;rustls::conn::connection::Writer as std::io::Write&gt;::write (1 samples, 0.03%)</title><rect x="82.1785%" y="885" width="0.0270%" height="15" fill="rgb(214,93,52)" fg:x="3048" fg:w="1"/><text x="82.4285%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="82.2054%" y="837" width="0.0270%" height="15" fill="rgb(251,37,40)" fg:x="3049" fg:w="1"/><text x="82.4554%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="82.2054%" y="821" width="0.0270%" height="15" fill="rgb(227,80,54)" fg:x="3049" fg:w="1"/><text x="82.4554%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.05%)</title><rect x="82.2324%" y="837" width="0.0539%" height="15" fill="rgb(254,48,11)" fg:x="3050" fg:w="2"/><text x="82.4824%" y="847.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (2 samples, 0.05%)</title><rect x="82.3133%" y="741" width="0.0539%" height="15" fill="rgb(235,193,26)" fg:x="3053" fg:w="2"/><text x="82.5633%" y="751.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (1 samples, 0.03%)</title><rect x="82.3403%" y="725" width="0.0270%" height="15" fill="rgb(229,99,21)" fg:x="3054" fg:w="1"/><text x="82.5903%" y="735.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (1 samples, 0.03%)</title><rect x="82.3403%" y="709" width="0.0270%" height="15" fill="rgb(211,140,41)" fg:x="3054" fg:w="1"/><text x="82.5903%" y="719.50"></text></g><g><title>std::sys::pal::unix::cvt (1 samples, 0.03%)</title><rect x="82.3403%" y="693" width="0.0270%" height="15" fill="rgb(240,227,30)" fg:x="3054" fg:w="1"/><text x="82.5903%" y="703.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.03%)</title><rect x="82.3403%" y="677" width="0.0270%" height="15" fill="rgb(215,224,45)" fg:x="3054" fg:w="1"/><text x="82.5903%" y="687.50"></text></g><g><title>__fdget_pos (2 samples, 0.05%)</title><rect x="82.5829%" y="661" width="0.0539%" height="15" fill="rgb(206,123,31)" fg:x="3063" fg:w="2"/><text x="82.8329%" y="671.50"></text></g><g><title>__fget_light (2 samples, 0.05%)</title><rect x="82.5829%" y="645" width="0.0539%" height="15" fill="rgb(210,138,16)" fg:x="3063" fg:w="2"/><text x="82.8329%" y="655.50"></text></g><g><title>fput (1 samples, 0.03%)</title><rect x="82.6368%" y="661" width="0.0270%" height="15" fill="rgb(228,57,28)" fg:x="3065" fg:w="1"/><text x="82.8868%" y="671.50"></text></g><g><title>inet_sendmsg (1 samples, 0.03%)</title><rect x="82.9334%" y="597" width="0.0270%" height="15" fill="rgb(242,170,10)" fg:x="3076" fg:w="1"/><text x="83.1834%" y="607.50"></text></g><g><title>inet_send_prepare (1 samples, 0.03%)</title><rect x="82.9334%" y="581" width="0.0270%" height="15" fill="rgb(228,214,39)" fg:x="3076" fg:w="1"/><text x="83.1834%" y="591.50"></text></g><g><title>security_socket_sendmsg (5 samples, 0.13%)</title><rect x="82.9604%" y="597" width="0.1348%" height="15" fill="rgb(218,179,33)" fg:x="3077" fg:w="5"/><text x="83.2104%" y="607.50"></text></g><g><title>aa_sk_perm (2 samples, 0.05%)</title><rect x="83.0413%" y="581" width="0.0539%" height="15" fill="rgb(235,193,39)" fg:x="3080" fg:w="2"/><text x="83.2913%" y="591.50"></text></g><g><title>__cond_resched (1 samples, 0.03%)</title><rect x="83.0682%" y="565" width="0.0270%" height="15" fill="rgb(219,221,36)" fg:x="3081" fg:w="1"/><text x="83.3182%" y="575.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="83.1221%" y="581" width="0.0270%" height="15" fill="rgb(248,218,19)" fg:x="3083" fg:w="1"/><text x="83.3721%" y="591.50"></text></g><g><title>lock_sock_nested (2 samples, 0.05%)</title><rect x="83.1491%" y="581" width="0.0539%" height="15" fill="rgb(205,50,9)" fg:x="3084" fg:w="2"/><text x="83.3991%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="83.1491%" y="565" width="0.0539%" height="15" fill="rgb(238,81,28)" fg:x="3084" fg:w="2"/><text x="83.3991%" y="575.50"></text></g><g><title>tcp_ack (1 samples, 0.03%)</title><rect x="83.2300%" y="517" width="0.0270%" height="15" fill="rgb(235,110,19)" fg:x="3087" fg:w="1"/><text x="83.4800%" y="527.50"></text></g><g><title>__release_sock (2 samples, 0.05%)</title><rect x="83.2300%" y="565" width="0.0539%" height="15" fill="rgb(214,7,14)" fg:x="3087" fg:w="2"/><text x="83.4800%" y="575.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.05%)</title><rect x="83.2300%" y="549" width="0.0539%" height="15" fill="rgb(211,77,3)" fg:x="3087" fg:w="2"/><text x="83.4800%" y="559.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.05%)</title><rect x="83.2300%" y="533" width="0.0539%" height="15" fill="rgb(229,5,9)" fg:x="3087" fg:w="2"/><text x="83.4800%" y="543.50"></text></g><g><title>tcp_data_queue (1 samples, 0.03%)</title><rect x="83.2569%" y="517" width="0.0270%" height="15" fill="rgb(225,90,11)" fg:x="3088" fg:w="1"/><text x="83.5069%" y="527.50"></text></g><g><title>sock_def_readable (1 samples, 0.03%)</title><rect x="83.2569%" y="501" width="0.0270%" height="15" fill="rgb(242,56,8)" fg:x="3088" fg:w="1"/><text x="83.5069%" y="511.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="83.2569%" y="485" width="0.0270%" height="15" fill="rgb(249,212,39)" fg:x="3088" fg:w="1"/><text x="83.5069%" y="495.50"></text></g><g><title>__wake_up_common (1 samples, 0.03%)</title><rect x="83.2569%" y="469" width="0.0270%" height="15" fill="rgb(236,90,9)" fg:x="3088" fg:w="1"/><text x="83.5069%" y="479.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="83.2839%" y="565" width="0.0270%" height="15" fill="rgb(206,88,35)" fg:x="3089" fg:w="1"/><text x="83.5339%" y="575.50"></text></g><g><title>release_sock (6 samples, 0.16%)</title><rect x="83.2030%" y="581" width="0.1618%" height="15" fill="rgb(205,126,30)" fg:x="3086" fg:w="6"/><text x="83.4530%" y="591.50"></text></g><g><title>tcp_release_cb (2 samples, 0.05%)</title><rect x="83.3109%" y="565" width="0.0539%" height="15" fill="rgb(230,176,12)" fg:x="3090" fg:w="2"/><text x="83.5609%" y="575.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="83.4726%" y="549" width="0.0539%" height="15" fill="rgb(243,19,9)" fg:x="3096" fg:w="2"/><text x="83.7226%" y="559.50"></text></g><g><title>__check_object_size (4 samples, 0.11%)</title><rect x="83.4457%" y="565" width="0.1078%" height="15" fill="rgb(245,171,17)" fg:x="3095" fg:w="4"/><text x="83.6957%" y="575.50"></text></g><g><title>check_stack_object (1 samples, 0.03%)</title><rect x="83.5266%" y="549" width="0.0270%" height="15" fill="rgb(227,52,21)" fg:x="3098" fg:w="1"/><text x="83.7766%" y="559.50"></text></g><g><title>__ip_finish_output (3 samples, 0.08%)</title><rect x="83.7962%" y="501" width="0.0809%" height="15" fill="rgb(238,69,14)" fg:x="3108" fg:w="3"/><text x="84.0462%" y="511.50"></text></g><g><title>ip_skb_dst_mtu (1 samples, 0.03%)</title><rect x="83.8501%" y="485" width="0.0270%" height="15" fill="rgb(241,156,39)" fg:x="3110" fg:w="1"/><text x="84.1001%" y="495.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="83.8771%" y="501" width="0.0270%" height="15" fill="rgb(212,227,28)" fg:x="3111" fg:w="1"/><text x="84.1271%" y="511.50"></text></g><g><title>__sk_dst_check (4 samples, 0.11%)</title><rect x="83.9040%" y="501" width="0.1078%" height="15" fill="rgb(209,118,27)" fg:x="3112" fg:w="4"/><text x="84.1540%" y="511.50"></text></g><g><title>ipv4_dst_check (3 samples, 0.08%)</title><rect x="83.9310%" y="485" width="0.0809%" height="15" fill="rgb(226,102,5)" fg:x="3113" fg:w="3"/><text x="84.1810%" y="495.50"></text></g><g><title>ip_finish_output (1 samples, 0.03%)</title><rect x="84.0119%" y="501" width="0.0270%" height="15" fill="rgb(223,34,3)" fg:x="3116" fg:w="1"/><text x="84.2619%" y="511.50"></text></g><g><title>irqtime_account_irq (5 samples, 0.13%)</title><rect x="84.3624%" y="421" width="0.1348%" height="15" fill="rgb(221,81,38)" fg:x="3129" fg:w="5"/><text x="84.6124%" y="431.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.08%)</title><rect x="84.4163%" y="405" width="0.0809%" height="15" fill="rgb(236,219,28)" fg:x="3131" fg:w="3"/><text x="84.6663%" y="415.50"></text></g><g><title>sched_clock (2 samples, 0.05%)</title><rect x="84.4432%" y="389" width="0.0539%" height="15" fill="rgb(213,200,14)" fg:x="3132" fg:w="2"/><text x="84.6932%" y="399.50"></text></g><g><title>native_sched_clock (2 samples, 0.05%)</title><rect x="84.4432%" y="373" width="0.0539%" height="15" fill="rgb(240,33,19)" fg:x="3132" fg:w="2"/><text x="84.6932%" y="383.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (7 samples, 0.19%)</title><rect x="84.5781%" y="357" width="0.1887%" height="15" fill="rgb(233,113,27)" fg:x="3137" fg:w="7"/><text x="84.8281%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="84.7668%" y="325" width="0.0270%" height="15" fill="rgb(220,221,18)" fg:x="3144" fg:w="1"/><text x="85.0168%" y="335.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="84.7937%" y="325" width="0.0270%" height="15" fill="rgb(238,92,8)" fg:x="3145" fg:w="1"/><text x="85.0437%" y="335.50"></text></g><g><title>raw_local_deliver (4 samples, 0.11%)</title><rect x="84.8207%" y="309" width="0.1078%" height="15" fill="rgb(222,164,16)" fg:x="3146" fg:w="4"/><text x="85.0707%" y="319.50"></text></g><g><title>__inet_lookup_established (5 samples, 0.13%)</title><rect x="85.0364%" y="293" width="0.1348%" height="15" fill="rgb(241,119,3)" fg:x="3154" fg:w="5"/><text x="85.2864%" y="303.50"></text></g><g><title>inet_ehashfn (1 samples, 0.03%)</title><rect x="85.1442%" y="277" width="0.0270%" height="15" fill="rgb(241,44,8)" fg:x="3158" fg:w="1"/><text x="85.3942%" y="287.50"></text></g><g><title>__xfrm_policy_check2.constprop.0 (4 samples, 0.11%)</title><rect x="85.1712%" y="293" width="0.1078%" height="15" fill="rgb(230,36,40)" fg:x="3159" fg:w="4"/><text x="85.4212%" y="303.50"></text></g><g><title>nf_conntrack_put (2 samples, 0.05%)</title><rect x="85.2791%" y="293" width="0.0539%" height="15" fill="rgb(243,16,36)" fg:x="3163" fg:w="2"/><text x="85.5291%" y="303.50"></text></g><g><title>sk_filter_trim_cap (4 samples, 0.11%)</title><rect x="85.3330%" y="293" width="0.1078%" height="15" fill="rgb(231,4,26)" fg:x="3165" fg:w="4"/><text x="85.5830%" y="303.50"></text></g><g><title>security_sock_rcv_skb (3 samples, 0.08%)</title><rect x="85.3599%" y="277" width="0.0809%" height="15" fill="rgb(240,9,31)" fg:x="3166" fg:w="3"/><text x="85.6099%" y="287.50"></text></g><g><title>tcp_inbound_md5_hash (3 samples, 0.08%)</title><rect x="85.4408%" y="293" width="0.0809%" height="15" fill="rgb(207,173,15)" fg:x="3169" fg:w="3"/><text x="85.6908%" y="303.50"></text></g><g><title>tcp_parse_md5sig_option (3 samples, 0.08%)</title><rect x="85.4408%" y="277" width="0.0809%" height="15" fill="rgb(224,192,53)" fg:x="3169" fg:w="3"/><text x="85.6908%" y="287.50"></text></g><g><title>__mod_timer (1 samples, 0.03%)</title><rect x="85.5487%" y="261" width="0.0270%" height="15" fill="rgb(223,67,28)" fg:x="3173" fg:w="1"/><text x="85.7987%" y="271.50"></text></g><g><title>lock_timer_base (1 samples, 0.03%)</title><rect x="85.5487%" y="245" width="0.0270%" height="15" fill="rgb(211,20,47)" fg:x="3173" fg:w="1"/><text x="85.7987%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="85.5487%" y="229" width="0.0270%" height="15" fill="rgb(240,228,2)" fg:x="3173" fg:w="1"/><text x="85.7987%" y="239.50"></text></g><g><title>sk_reset_timer (3 samples, 0.08%)</title><rect x="85.5487%" y="277" width="0.0809%" height="15" fill="rgb(248,151,12)" fg:x="3173" fg:w="3"/><text x="85.7987%" y="287.50"></text></g><g><title>mod_timer (2 samples, 0.05%)</title><rect x="85.5756%" y="261" width="0.0539%" height="15" fill="rgb(244,8,39)" fg:x="3174" fg:w="2"/><text x="85.8256%" y="271.50"></text></g><g><title>sock_def_readable (1 samples, 0.03%)</title><rect x="85.6835%" y="261" width="0.0270%" height="15" fill="rgb(222,26,8)" fg:x="3178" fg:w="1"/><text x="85.9335%" y="271.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="85.6835%" y="245" width="0.0270%" height="15" fill="rgb(213,106,44)" fg:x="3178" fg:w="1"/><text x="85.9335%" y="255.50"></text></g><g><title>__wake_up_common (1 samples, 0.03%)</title><rect x="85.6835%" y="229" width="0.0270%" height="15" fill="rgb(214,129,20)" fg:x="3178" fg:w="1"/><text x="85.9335%" y="239.50"></text></g><g><title>ep_poll_callback (1 samples, 0.03%)</title><rect x="85.6835%" y="213" width="0.0270%" height="15" fill="rgb(212,32,13)" fg:x="3178" fg:w="1"/><text x="85.9335%" y="223.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="85.6835%" y="197" width="0.0270%" height="15" fill="rgb(208,168,33)" fg:x="3178" fg:w="1"/><text x="85.9335%" y="207.50"></text></g><g><title>__wake_up_common (1 samples, 0.03%)</title><rect x="85.6835%" y="181" width="0.0270%" height="15" fill="rgb(231,207,8)" fg:x="3178" fg:w="1"/><text x="85.9335%" y="191.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.03%)</title><rect x="85.6835%" y="165" width="0.0270%" height="15" fill="rgb(235,219,23)" fg:x="3178" fg:w="1"/><text x="85.9335%" y="175.50"></text></g><g><title>try_to_wake_up (1 samples, 0.03%)</title><rect x="85.6835%" y="149" width="0.0270%" height="15" fill="rgb(226,216,26)" fg:x="3178" fg:w="1"/><text x="85.9335%" y="159.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="85.6835%" y="133" width="0.0270%" height="15" fill="rgb(239,137,16)" fg:x="3178" fg:w="1"/><text x="85.9335%" y="143.50"></text></g><g><title>__slab_free (1 samples, 0.03%)</title><rect x="85.9531%" y="213" width="0.0270%" height="15" fill="rgb(207,12,36)" fg:x="3188" fg:w="1"/><text x="86.2031%" y="223.50"></text></g><g><title>__kfree_skb (6 samples, 0.16%)</title><rect x="85.8722%" y="245" width="0.1618%" height="15" fill="rgb(210,214,24)" fg:x="3185" fg:w="6"/><text x="86.1222%" y="255.50"></text></g><g><title>skb_release_data (5 samples, 0.13%)</title><rect x="85.8992%" y="229" width="0.1348%" height="15" fill="rgb(206,56,30)" fg:x="3186" fg:w="5"/><text x="86.1492%" y="239.50"></text></g><g><title>kmem_cache_free (2 samples, 0.05%)</title><rect x="85.9800%" y="213" width="0.0539%" height="15" fill="rgb(228,143,26)" fg:x="3189" fg:w="2"/><text x="86.2300%" y="223.50"></text></g><g><title>cache_from_obj (2 samples, 0.05%)</title><rect x="85.9800%" y="197" width="0.0539%" height="15" fill="rgb(216,218,46)" fg:x="3189" fg:w="2"/><text x="86.2300%" y="207.50"></text></g><g><title>cubictcp_acked (1 samples, 0.03%)</title><rect x="86.0340%" y="245" width="0.0270%" height="15" fill="rgb(206,6,19)" fg:x="3191" fg:w="1"/><text x="86.2840%" y="255.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="86.0609%" y="245" width="0.0270%" height="15" fill="rgb(239,177,51)" fg:x="3192" fg:w="1"/><text x="86.3109%" y="255.50"></text></g><g><title>ktime_get_seconds (1 samples, 0.03%)</title><rect x="86.0879%" y="245" width="0.0270%" height="15" fill="rgb(216,55,25)" fg:x="3193" fg:w="1"/><text x="86.3379%" y="255.50"></text></g><g><title>rb_erase (1 samples, 0.03%)</title><rect x="86.1149%" y="245" width="0.0270%" height="15" fill="rgb(231,163,29)" fg:x="3194" fg:w="1"/><text x="86.3649%" y="255.50"></text></g><g><title>tcp_ack_tstamp (1 samples, 0.03%)</title><rect x="86.1418%" y="245" width="0.0270%" height="15" fill="rgb(232,149,50)" fg:x="3195" fg:w="1"/><text x="86.3918%" y="255.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.03%)</title><rect x="86.1688%" y="245" width="0.0270%" height="15" fill="rgb(223,142,48)" fg:x="3196" fg:w="1"/><text x="86.4188%" y="255.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="86.1957%" y="245" width="0.0270%" height="15" fill="rgb(245,83,23)" fg:x="3197" fg:w="1"/><text x="86.4457%" y="255.50"></text></g><g><title>tcp_rack_advance (2 samples, 0.05%)</title><rect x="86.2227%" y="245" width="0.0539%" height="15" fill="rgb(224,63,2)" fg:x="3198" fg:w="2"/><text x="86.4727%" y="255.50"></text></g><g><title>tcp_ack (22 samples, 0.59%)</title><rect x="85.7104%" y="261" width="0.5932%" height="15" fill="rgb(218,65,53)" fg:x="3179" fg:w="22"/><text x="85.9604%" y="271.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="86.2766%" y="245" width="0.0270%" height="15" fill="rgb(221,84,29)" fg:x="3200" fg:w="1"/><text x="86.5266%" y="255.50"></text></g><g><title>tcp_check_space (2 samples, 0.05%)</title><rect x="86.3036%" y="261" width="0.0539%" height="15" fill="rgb(234,0,32)" fg:x="3201" fg:w="2"/><text x="86.5536%" y="271.50"></text></g><g><title>dst_release (2 samples, 0.05%)</title><rect x="86.4384%" y="245" width="0.0539%" height="15" fill="rgb(206,20,16)" fg:x="3206" fg:w="2"/><text x="86.6884%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="86.6810%" y="117" width="0.0539%" height="15" fill="rgb(244,172,18)" fg:x="3215" fg:w="2"/><text x="86.9310%" y="127.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="86.7350%" y="117" width="0.0270%" height="15" fill="rgb(254,133,1)" fg:x="3217" fg:w="1"/><text x="86.9850%" y="127.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.03%)</title><rect x="86.7619%" y="117" width="0.0270%" height="15" fill="rgb(222,206,41)" fg:x="3218" fg:w="1"/><text x="87.0119%" y="127.50"></text></g><g><title>select_task_rq_fair (6 samples, 0.16%)</title><rect x="86.7889%" y="117" width="0.1618%" height="15" fill="rgb(212,3,42)" fg:x="3219" fg:w="6"/><text x="87.0389%" y="127.50"></text></g><g><title>__enqueue_entity (1 samples, 0.03%)</title><rect x="87.0315%" y="53" width="0.0270%" height="15" fill="rgb(241,11,4)" fg:x="3228" fg:w="1"/><text x="87.2815%" y="63.50"></text></g><g><title>enqueue_entity (3 samples, 0.08%)</title><rect x="87.0315%" y="69" width="0.0809%" height="15" fill="rgb(205,19,26)" fg:x="3228" fg:w="3"/><text x="87.2815%" y="79.50"></text></g><g><title>update_load_avg (2 samples, 0.05%)</title><rect x="87.0585%" y="53" width="0.0539%" height="15" fill="rgb(210,179,32)" fg:x="3229" fg:w="2"/><text x="87.3085%" y="63.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="87.0855%" y="37" width="0.0270%" height="15" fill="rgb(227,116,49)" fg:x="3230" fg:w="1"/><text x="87.3355%" y="47.50"></text></g><g><title>reweight_entity (2 samples, 0.05%)</title><rect x="87.1124%" y="69" width="0.0539%" height="15" fill="rgb(211,146,6)" fg:x="3231" fg:w="2"/><text x="87.3624%" y="79.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="87.1394%" y="53" width="0.0270%" height="15" fill="rgb(219,44,39)" fg:x="3232" fg:w="1"/><text x="87.3894%" y="63.50"></text></g><g><title>__calc_delta.constprop.0 (1 samples, 0.03%)</title><rect x="87.1394%" y="37" width="0.0270%" height="15" fill="rgb(234,128,11)" fg:x="3232" fg:w="1"/><text x="87.3894%" y="47.50"></text></g><g><title>enqueue_task_fair (8 samples, 0.22%)</title><rect x="86.9776%" y="85" width="0.2157%" height="15" fill="rgb(220,183,53)" fg:x="3226" fg:w="8"/><text x="87.2276%" y="95.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="87.1664%" y="69" width="0.0270%" height="15" fill="rgb(213,219,32)" fg:x="3233" fg:w="1"/><text x="87.4164%" y="79.50"></text></g><g><title>psi_flags_change (1 samples, 0.03%)</title><rect x="87.1933%" y="69" width="0.0270%" height="15" fill="rgb(232,156,16)" fg:x="3234" fg:w="1"/><text x="87.4433%" y="79.50"></text></g><g><title>__wake_up_common_lock (24 samples, 0.65%)</title><rect x="86.6541%" y="181" width="0.6471%" height="15" fill="rgb(246,135,34)" fg:x="3214" fg:w="24"/><text x="86.9041%" y="191.50"></text></g><g><title>__wake_up_common (24 samples, 0.65%)</title><rect x="86.6541%" y="165" width="0.6471%" height="15" fill="rgb(241,99,0)" fg:x="3214" fg:w="24"/><text x="86.9041%" y="175.50"></text></g><g><title>ep_autoremove_wake_function (24 samples, 0.65%)</title><rect x="86.6541%" y="149" width="0.6471%" height="15" fill="rgb(222,103,45)" fg:x="3214" fg:w="24"/><text x="86.9041%" y="159.50"></text></g><g><title>try_to_wake_up (24 samples, 0.65%)</title><rect x="86.6541%" y="133" width="0.6471%" height="15" fill="rgb(212,57,4)" fg:x="3214" fg:w="24"/><text x="86.9041%" y="143.50"></text></g><g><title>ttwu_do_activate (13 samples, 0.35%)</title><rect x="86.9507%" y="117" width="0.3505%" height="15" fill="rgb(215,68,47)" fg:x="3225" fg:w="13"/><text x="87.2007%" y="127.50"></text></g><g><title>enqueue_task (13 samples, 0.35%)</title><rect x="86.9507%" y="101" width="0.3505%" height="15" fill="rgb(230,84,2)" fg:x="3225" fg:w="13"/><text x="87.2007%" y="111.50"></text></g><g><title>psi_task_change (4 samples, 0.11%)</title><rect x="87.1933%" y="85" width="0.1078%" height="15" fill="rgb(220,102,14)" fg:x="3234" fg:w="4"/><text x="87.4433%" y="95.50"></text></g><g><title>psi_group_change (3 samples, 0.08%)</title><rect x="87.2203%" y="69" width="0.0809%" height="15" fill="rgb(240,10,32)" fg:x="3235" fg:w="3"/><text x="87.4703%" y="79.50"></text></g><g><title>_raw_read_lock_irqsave (1 samples, 0.03%)</title><rect x="87.3012%" y="181" width="0.0270%" height="15" fill="rgb(215,47,27)" fg:x="3238" fg:w="1"/><text x="87.5512%" y="191.50"></text></g><g><title>__wake_up_common (30 samples, 0.81%)</title><rect x="86.5462%" y="213" width="0.8088%" height="15" fill="rgb(233,188,43)" fg:x="3210" fg:w="30"/><text x="86.7962%" y="223.50"></text></g><g><title>ep_poll_callback (29 samples, 0.78%)</title><rect x="86.5732%" y="197" width="0.7819%" height="15" fill="rgb(253,190,1)" fg:x="3211" fg:w="29"/><text x="86.8232%" y="207.50"></text></g><g><title>_raw_read_unlock_irqrestore (1 samples, 0.03%)</title><rect x="87.3281%" y="181" width="0.0270%" height="15" fill="rgb(206,114,52)" fg:x="3239" fg:w="1"/><text x="87.5781%" y="191.50"></text></g><g><title>sock_def_readable (33 samples, 0.89%)</title><rect x="86.4923%" y="245" width="0.8897%" height="15" fill="rgb(233,120,37)" fg:x="3208" fg:w="33"/><text x="86.7423%" y="255.50"></text></g><g><title>__wake_up_common_lock (31 samples, 0.84%)</title><rect x="86.5462%" y="229" width="0.8358%" height="15" fill="rgb(214,52,39)" fg:x="3210" fg:w="31"/><text x="86.7962%" y="239.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="87.3551%" y="213" width="0.0270%" height="15" fill="rgb(223,80,29)" fg:x="3240" fg:w="1"/><text x="87.6051%" y="223.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="87.3820%" y="245" width="0.0270%" height="15" fill="rgb(230,101,40)" fg:x="3241" fg:w="1"/><text x="87.6320%" y="255.50"></text></g><g><title>tcp_queue_rcv (4 samples, 0.11%)</title><rect x="87.4090%" y="245" width="0.1078%" height="15" fill="rgb(219,211,8)" fg:x="3242" fg:w="4"/><text x="87.6590%" y="255.50"></text></g><g><title>tcp_try_coalesce (2 samples, 0.05%)</title><rect x="87.4629%" y="229" width="0.0539%" height="15" fill="rgb(252,126,28)" fg:x="3244" fg:w="2"/><text x="87.7129%" y="239.50"></text></g><g><title>skb_try_coalesce (1 samples, 0.03%)</title><rect x="87.4899%" y="213" width="0.0270%" height="15" fill="rgb(215,56,38)" fg:x="3245" fg:w="1"/><text x="87.7399%" y="223.50"></text></g><g><title>mem_cgroup_charge_skmem (1 samples, 0.03%)</title><rect x="87.5708%" y="197" width="0.0270%" height="15" fill="rgb(249,55,44)" fg:x="3248" fg:w="1"/><text x="87.8208%" y="207.50"></text></g><g><title>mod_memcg_state (1 samples, 0.03%)</title><rect x="87.5708%" y="181" width="0.0270%" height="15" fill="rgb(220,221,32)" fg:x="3248" fg:w="1"/><text x="87.8208%" y="191.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.03%)</title><rect x="87.5708%" y="165" width="0.0270%" height="15" fill="rgb(212,216,41)" fg:x="3248" fg:w="1"/><text x="87.8208%" y="175.50"></text></g><g><title>tcp_data_queue (49 samples, 1.32%)</title><rect x="86.3575%" y="261" width="1.3211%" height="15" fill="rgb(228,213,43)" fg:x="3203" fg:w="49"/><text x="86.6075%" y="271.50"></text></g><g><title>tcp_try_rmem_schedule (6 samples, 0.16%)</title><rect x="87.5169%" y="245" width="0.1618%" height="15" fill="rgb(211,31,26)" fg:x="3246" fg:w="6"/><text x="87.7669%" y="255.50"></text></g><g><title>__sk_mem_schedule (4 samples, 0.11%)</title><rect x="87.5708%" y="229" width="0.1078%" height="15" fill="rgb(229,202,19)" fg:x="3248" fg:w="4"/><text x="87.8208%" y="239.50"></text></g><g><title>__sk_mem_raise_allocated (4 samples, 0.11%)</title><rect x="87.5708%" y="213" width="0.1078%" height="15" fill="rgb(229,105,46)" fg:x="3248" fg:w="4"/><text x="87.8208%" y="223.50"></text></g><g><title>sk_leave_memory_pressure (3 samples, 0.08%)</title><rect x="87.5977%" y="197" width="0.0809%" height="15" fill="rgb(235,108,1)" fg:x="3249" fg:w="3"/><text x="87.8477%" y="207.50"></text></g><g><title>tcp_rcv_established (78 samples, 2.10%)</title><rect x="85.6295%" y="277" width="2.1030%" height="15" fill="rgb(245,111,35)" fg:x="3176" fg:w="78"/><text x="85.8795%" y="287.50">t..</text></g><g><title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="87.6786%" y="261" width="0.0539%" height="15" fill="rgb(219,185,31)" fg:x="3252" fg:w="2"/><text x="87.9286%" y="271.50"></text></g><g><title>ktime_get (2 samples, 0.05%)</title><rect x="87.6786%" y="245" width="0.0539%" height="15" fill="rgb(214,4,43)" fg:x="3252" fg:w="2"/><text x="87.9286%" y="255.50"></text></g><g><title>read_tsc (1 samples, 0.03%)</title><rect x="87.7056%" y="229" width="0.0270%" height="15" fill="rgb(235,227,40)" fg:x="3253" fg:w="1"/><text x="87.9556%" y="239.50"></text></g><g><title>ip_local_deliver_finish (112 samples, 3.02%)</title><rect x="84.7668%" y="341" width="3.0197%" height="15" fill="rgb(230,88,30)" fg:x="3144" fg:w="112"/><text x="85.0168%" y="351.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (110 samples, 2.97%)</title><rect x="84.8207%" y="325" width="2.9658%" height="15" fill="rgb(216,217,1)" fg:x="3146" fg:w="110"/><text x="85.0707%" y="335.50">ip_..</text></g><g><title>tcp_v4_rcv (106 samples, 2.86%)</title><rect x="84.9286%" y="309" width="2.8579%" height="15" fill="rgb(248,139,50)" fg:x="3150" fg:w="106"/><text x="85.1786%" y="319.50">tc..</text></g><g><title>tcp_v4_do_rcv (84 samples, 2.26%)</title><rect x="85.5217%" y="293" width="2.2648%" height="15" fill="rgb(233,1,21)" fg:x="3172" fg:w="84"/><text x="85.7717%" y="303.50">t..</text></g><g><title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="87.7325%" y="277" width="0.0539%" height="15" fill="rgb(215,183,12)" fg:x="3254" fg:w="2"/><text x="87.9825%" y="287.50"></text></g><g><title>tcp_delack_max (1 samples, 0.03%)</title><rect x="87.7595%" y="261" width="0.0270%" height="15" fill="rgb(229,104,42)" fg:x="3255" fg:w="1"/><text x="88.0095%" y="271.50"></text></g><g><title>ip_local_deliver (113 samples, 3.05%)</title><rect x="84.7668%" y="357" width="3.0466%" height="15" fill="rgb(243,34,48)" fg:x="3144" fg:w="113"/><text x="85.0168%" y="367.50">ip_..</text></g><g><title>nf_hook_slow (1 samples, 0.03%)</title><rect x="87.7865%" y="341" width="0.0270%" height="15" fill="rgb(239,11,44)" fg:x="3256" fg:w="1"/><text x="88.0365%" y="351.50"></text></g><g><title>[[nf_conntrack]] (1 samples, 0.03%)</title><rect x="87.7865%" y="325" width="0.0270%" height="15" fill="rgb(231,98,35)" fg:x="3256" fg:w="1"/><text x="88.0365%" y="335.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="87.8134%" y="341" width="0.0270%" height="15" fill="rgb(233,28,25)" fg:x="3257" fg:w="1"/><text x="88.0634%" y="351.50"></text></g><g><title>ip_rcv_core (3 samples, 0.08%)</title><rect x="87.8404%" y="341" width="0.0809%" height="15" fill="rgb(234,123,11)" fg:x="3258" fg:w="3"/><text x="88.0904%" y="351.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (4 samples, 0.11%)</title><rect x="87.9213%" y="341" width="0.1078%" height="15" fill="rgb(220,69,3)" fg:x="3261" fg:w="4"/><text x="88.1713%" y="351.50"></text></g><g><title>[[nf_conntrack]] (4 samples, 0.11%)</title><rect x="88.0291%" y="325" width="0.1078%" height="15" fill="rgb(214,64,36)" fg:x="3265" fg:w="4"/><text x="88.2791%" y="335.50"></text></g><g><title>[[nf_defrag_ipv4]] (1 samples, 0.03%)</title><rect x="88.1370%" y="325" width="0.0270%" height="15" fill="rgb(211,138,32)" fg:x="3269" fg:w="1"/><text x="88.3870%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (134 samples, 3.61%)</title><rect x="84.5781%" y="373" width="3.6128%" height="15" fill="rgb(213,118,47)" fg:x="3137" fg:w="134"/><text x="84.8281%" y="383.50">__ne..</text></g><g><title>ip_rcv (14 samples, 0.38%)</title><rect x="87.8134%" y="357" width="0.3775%" height="15" fill="rgb(243,124,49)" fg:x="3257" fg:w="14"/><text x="88.0634%" y="367.50"></text></g><g><title>nf_hook_slow (6 samples, 0.16%)</title><rect x="88.0291%" y="341" width="0.1618%" height="15" fill="rgb(221,30,28)" fg:x="3265" fg:w="6"/><text x="88.2791%" y="351.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.03%)</title><rect x="88.1639%" y="325" width="0.0270%" height="15" fill="rgb(246,37,13)" fg:x="3270" fg:w="1"/><text x="88.4139%" y="335.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="88.1909%" y="373" width="0.0270%" height="15" fill="rgb(249,66,14)" fg:x="3271" fg:w="1"/><text x="88.4409%" y="383.50"></text></g><g><title>__napi_poll (136 samples, 3.67%)</title><rect x="84.5781%" y="405" width="3.6668%" height="15" fill="rgb(213,166,5)" fg:x="3137" fg:w="136"/><text x="84.8281%" y="415.50">__na..</text></g><g><title>process_backlog (136 samples, 3.67%)</title><rect x="84.5781%" y="389" width="3.6668%" height="15" fill="rgb(221,66,24)" fg:x="3137" fg:w="136"/><text x="84.8281%" y="399.50">proc..</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="88.2178%" y="373" width="0.0270%" height="15" fill="rgb(210,132,17)" fg:x="3272" fg:w="1"/><text x="88.4678%" y="383.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="88.2448%" y="405" width="0.0270%" height="15" fill="rgb(243,202,5)" fg:x="3273" fg:w="1"/><text x="88.4948%" y="415.50"></text></g><g><title>cache_from_obj (1 samples, 0.03%)</title><rect x="88.2448%" y="389" width="0.0270%" height="15" fill="rgb(233,70,48)" fg:x="3273" fg:w="1"/><text x="88.4948%" y="399.50"></text></g><g><title>__local_bh_enable_ip (152 samples, 4.10%)</title><rect x="84.2006%" y="469" width="4.0981%" height="15" fill="rgb(238,41,26)" fg:x="3123" fg:w="152"/><text x="84.4506%" y="479.50">__lo..</text></g><g><title>do_softirq.part.0 (151 samples, 4.07%)</title><rect x="84.2276%" y="453" width="4.0712%" height="15" fill="rgb(241,19,31)" fg:x="3124" fg:w="151"/><text x="84.4776%" y="463.50">do_s..</text></g><g><title>handle_softirqs (148 samples, 3.99%)</title><rect x="84.3084%" y="437" width="3.9903%" height="15" fill="rgb(214,76,10)" fg:x="3127" fg:w="148"/><text x="84.5584%" y="447.50">hand..</text></g><g><title>net_rx_action (141 samples, 3.80%)</title><rect x="84.4972%" y="421" width="3.8016%" height="15" fill="rgb(254,202,22)" fg:x="3134" fg:w="141"/><text x="84.7472%" y="431.50">net_..</text></g><g><title>napi_consume_skb (1 samples, 0.03%)</title><rect x="88.2718%" y="405" width="0.0270%" height="15" fill="rgb(214,72,24)" fg:x="3274" fg:w="1"/><text x="88.5218%" y="415.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="88.4335%" y="389" width="0.0270%" height="15" fill="rgb(221,92,46)" fg:x="3280" fg:w="1"/><text x="88.6835%" y="399.50"></text></g><g><title>__netif_rx (3 samples, 0.08%)</title><rect x="88.4066%" y="437" width="0.0809%" height="15" fill="rgb(246,13,50)" fg:x="3279" fg:w="3"/><text x="88.6566%" y="447.50"></text></g><g><title>netif_rx_internal (3 samples, 0.08%)</title><rect x="88.4066%" y="421" width="0.0809%" height="15" fill="rgb(240,165,38)" fg:x="3279" fg:w="3"/><text x="88.6566%" y="431.50"></text></g><g><title>enqueue_to_backlog (3 samples, 0.08%)</title><rect x="88.4066%" y="405" width="0.0809%" height="15" fill="rgb(241,24,51)" fg:x="3279" fg:w="3"/><text x="88.6566%" y="415.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="88.4605%" y="389" width="0.0270%" height="15" fill="rgb(227,51,44)" fg:x="3281" fg:w="1"/><text x="88.7105%" y="399.50"></text></g><g><title>eth_type_trans (4 samples, 0.11%)</title><rect x="88.4875%" y="437" width="0.1078%" height="15" fill="rgb(231,121,3)" fg:x="3282" fg:w="4"/><text x="88.7375%" y="447.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="88.5953%" y="437" width="0.0270%" height="15" fill="rgb(245,3,41)" fg:x="3286" fg:w="1"/><text x="88.8453%" y="447.50"></text></g><g><title>dev_hard_start_xmit (13 samples, 0.35%)</title><rect x="88.2987%" y="469" width="0.3505%" height="15" fill="rgb(214,13,26)" fg:x="3275" fg:w="13"/><text x="88.5487%" y="479.50"></text></g><g><title>loopback_xmit (11 samples, 0.30%)</title><rect x="88.3527%" y="453" width="0.2966%" height="15" fill="rgb(252,75,11)" fg:x="3277" fg:w="11"/><text x="88.6027%" y="463.50"></text></g><g><title>tcp_wfree (1 samples, 0.03%)</title><rect x="88.6223%" y="437" width="0.0270%" height="15" fill="rgb(218,226,17)" fg:x="3287" fg:w="1"/><text x="88.8723%" y="447.50"></text></g><g><title>netdev_core_pick_tx (2 samples, 0.05%)</title><rect x="88.6492%" y="469" width="0.0539%" height="15" fill="rgb(248,89,38)" fg:x="3288" fg:w="2"/><text x="88.8992%" y="479.50"></text></g><g><title>netif_skb_features (4 samples, 0.11%)</title><rect x="88.7571%" y="453" width="0.1078%" height="15" fill="rgb(237,73,46)" fg:x="3292" fg:w="4"/><text x="89.0071%" y="463.50"></text></g><g><title>skb_network_protocol (2 samples, 0.05%)</title><rect x="88.8110%" y="437" width="0.0539%" height="15" fill="rgb(242,78,33)" fg:x="3294" fg:w="2"/><text x="89.0610%" y="447.50"></text></g><g><title>validate_xmit_skb (7 samples, 0.19%)</title><rect x="88.7032%" y="469" width="0.1887%" height="15" fill="rgb(235,60,3)" fg:x="3290" fg:w="7"/><text x="88.9532%" y="479.50"></text></g><g><title>skb_csum_hwoffload_help (1 samples, 0.03%)</title><rect x="88.8649%" y="453" width="0.0270%" height="15" fill="rgb(216,172,19)" fg:x="3296" fg:w="1"/><text x="89.1149%" y="463.50"></text></g><g><title>ip_finish_output2 (181 samples, 4.88%)</title><rect x="84.0388%" y="501" width="4.8800%" height="15" fill="rgb(227,6,42)" fg:x="3117" fg:w="181"/><text x="84.2888%" y="511.50">ip_fin..</text></g><g><title>__dev_queue_xmit (176 samples, 4.75%)</title><rect x="84.1736%" y="485" width="4.7452%" height="15" fill="rgb(223,207,42)" fg:x="3122" fg:w="176"/><text x="84.4236%" y="495.50">__dev_..</text></g><g><title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="88.8919%" y="469" width="0.0270%" height="15" fill="rgb(246,138,30)" fg:x="3297" fg:w="1"/><text x="89.1419%" y="479.50"></text></g><g><title>[[nf_conntrack]] (6 samples, 0.16%)</title><rect x="89.3772%" y="421" width="0.1618%" height="15" fill="rgb(251,199,47)" fg:x="3315" fg:w="6"/><text x="89.6272%" y="431.50"></text></g><g><title>[[nf_conntrack]] (22 samples, 0.59%)</title><rect x="88.9728%" y="453" width="0.5932%" height="15" fill="rgb(228,218,44)" fg:x="3300" fg:w="22"/><text x="89.2228%" y="463.50"></text></g><g><title>[[nf_conntrack]] (18 samples, 0.49%)</title><rect x="89.0806%" y="437" width="0.4853%" height="15" fill="rgb(220,68,6)" fg:x="3304" fg:w="18"/><text x="89.3306%" y="447.50"></text></g><g><title>__siphash_unaligned (1 samples, 0.03%)</title><rect x="89.5390%" y="421" width="0.0270%" height="15" fill="rgb(240,60,26)" fg:x="3321" fg:w="1"/><text x="89.7890%" y="431.50"></text></g><g><title>[[nf_defrag_ipv4]] (1 samples, 0.03%)</title><rect x="89.5659%" y="453" width="0.0270%" height="15" fill="rgb(211,200,19)" fg:x="3322" fg:w="1"/><text x="89.8159%" y="463.50"></text></g><g><title>ip_local_out (29 samples, 0.78%)</title><rect x="88.9188%" y="501" width="0.7819%" height="15" fill="rgb(242,145,30)" fg:x="3298" fg:w="29"/><text x="89.1688%" y="511.50"></text></g><g><title>__ip_local_out (28 samples, 0.75%)</title><rect x="88.9458%" y="485" width="0.7549%" height="15" fill="rgb(225,64,13)" fg:x="3299" fg:w="28"/><text x="89.1958%" y="495.50"></text></g><g><title>nf_hook_slow (27 samples, 0.73%)</title><rect x="88.9728%" y="469" width="0.7280%" height="15" fill="rgb(218,103,35)" fg:x="3300" fg:w="27"/><text x="89.2228%" y="479.50"></text></g><g><title>[[nf_nat]] (4 samples, 0.11%)</title><rect x="89.5929%" y="453" width="0.1078%" height="15" fill="rgb(216,93,46)" fg:x="3323" fg:w="4"/><text x="89.8429%" y="463.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="89.7547%" y="485" width="0.0270%" height="15" fill="rgb(225,159,27)" fg:x="3329" fg:w="1"/><text x="90.0047%" y="495.50"></text></g><g><title>[[nf_conntrack]] (2 samples, 0.05%)</title><rect x="89.8355%" y="469" width="0.0539%" height="15" fill="rgb(225,204,11)" fg:x="3332" fg:w="2"/><text x="90.0855%" y="479.50"></text></g><g><title>__ip_queue_xmit (230 samples, 6.20%)</title><rect x="83.7153%" y="517" width="6.2011%" height="15" fill="rgb(205,56,4)" fg:x="3105" fg:w="230"/><text x="83.9653%" y="527.50">__ip_que..</text></g><g><title>ip_output (8 samples, 0.22%)</title><rect x="89.7007%" y="501" width="0.2157%" height="15" fill="rgb(206,6,35)" fg:x="3327" fg:w="8"/><text x="89.9507%" y="511.50"></text></g><g><title>nf_hook_slow (5 samples, 0.13%)</title><rect x="89.7816%" y="485" width="0.1348%" height="15" fill="rgb(247,73,52)" fg:x="3330" fg:w="5"/><text x="90.0316%" y="495.50"></text></g><g><title>apparmor_ip_postroute (1 samples, 0.03%)</title><rect x="89.8895%" y="469" width="0.0270%" height="15" fill="rgb(246,97,4)" fg:x="3334" fg:w="1"/><text x="90.1395%" y="479.50"></text></g><g><title>__skb_clone (1 samples, 0.03%)</title><rect x="89.9164%" y="517" width="0.0270%" height="15" fill="rgb(212,37,15)" fg:x="3335" fg:w="1"/><text x="90.1664%" y="527.50"></text></g><g><title>__tcp_select_window (2 samples, 0.05%)</title><rect x="89.9434%" y="517" width="0.0539%" height="15" fill="rgb(208,130,40)" fg:x="3336" fg:w="2"/><text x="90.1934%" y="527.50"></text></g><g><title>bpf_skops_write_hdr_opt.isra.0 (1 samples, 0.03%)</title><rect x="89.9973%" y="517" width="0.0270%" height="15" fill="rgb(236,55,29)" fg:x="3338" fg:w="1"/><text x="90.2473%" y="527.50"></text></g><g><title>skb_clone (1 samples, 0.03%)</title><rect x="90.0243%" y="517" width="0.0270%" height="15" fill="rgb(209,156,45)" fg:x="3339" fg:w="1"/><text x="90.2743%" y="527.50"></text></g><g><title>tcp_established_options (1 samples, 0.03%)</title><rect x="90.0512%" y="517" width="0.0270%" height="15" fill="rgb(249,107,4)" fg:x="3340" fg:w="1"/><text x="90.3012%" y="527.50"></text></g><g><title>tcp_options_write (1 samples, 0.03%)</title><rect x="90.0782%" y="517" width="0.0270%" height="15" fill="rgb(227,7,13)" fg:x="3341" fg:w="1"/><text x="90.3282%" y="527.50"></text></g><g><title>tcp_rate_skb_sent (2 samples, 0.05%)</title><rect x="90.1051%" y="517" width="0.0539%" height="15" fill="rgb(250,129,14)" fg:x="3342" fg:w="2"/><text x="90.3551%" y="527.50"></text></g><g><title>__tcp_transmit_skb (245 samples, 6.61%)</title><rect x="83.6344%" y="533" width="6.6056%" height="15" fill="rgb(229,92,13)" fg:x="3102" fg:w="245"/><text x="83.8844%" y="543.50">__tcp_tra..</text></g><g><title>tcp_update_skb_after_send (3 samples, 0.08%)</title><rect x="90.1591%" y="517" width="0.0809%" height="15" fill="rgb(245,98,39)" fg:x="3344" fg:w="3"/><text x="90.4091%" y="527.50"></text></g><g><title>ktime_get (5 samples, 0.13%)</title><rect x="90.2400%" y="533" width="0.1348%" height="15" fill="rgb(234,135,48)" fg:x="3347" fg:w="5"/><text x="90.4900%" y="543.50"></text></g><g><title>read_tsc (2 samples, 0.05%)</title><rect x="90.3208%" y="517" width="0.0539%" height="15" fill="rgb(230,98,28)" fg:x="3350" fg:w="2"/><text x="90.5708%" y="527.50"></text></g><g><title>sk_reset_timer (2 samples, 0.05%)</title><rect x="90.4556%" y="517" width="0.0539%" height="15" fill="rgb(223,121,0)" fg:x="3355" fg:w="2"/><text x="90.7056%" y="527.50"></text></g><g><title>__mod_timer (2 samples, 0.05%)</title><rect x="90.4556%" y="501" width="0.0539%" height="15" fill="rgb(234,173,33)" fg:x="3355" fg:w="2"/><text x="90.7056%" y="511.50"></text></g><g><title>detach_if_pending (1 samples, 0.03%)</title><rect x="90.4826%" y="485" width="0.0270%" height="15" fill="rgb(245,47,8)" fg:x="3356" fg:w="1"/><text x="90.7326%" y="495.50"></text></g><g><title>tcp_event_new_data_sent (6 samples, 0.16%)</title><rect x="90.3748%" y="533" width="0.1618%" height="15" fill="rgb(205,17,20)" fg:x="3352" fg:w="6"/><text x="90.6248%" y="543.50"></text></g><g><title>tcp_rbtree_insert (1 samples, 0.03%)</title><rect x="90.5096%" y="517" width="0.0270%" height="15" fill="rgb(232,151,16)" fg:x="3357" fg:w="1"/><text x="90.7596%" y="527.50"></text></g><g><title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="90.6174%" y="517" width="0.0270%" height="15" fill="rgb(208,30,32)" fg:x="3361" fg:w="1"/><text x="90.8674%" y="527.50"></text></g><g><title>calc_wheel_index (2 samples, 0.05%)</title><rect x="90.6983%" y="485" width="0.0539%" height="15" fill="rgb(254,26,3)" fg:x="3364" fg:w="2"/><text x="90.9483%" y="495.50"></text></g><g><title>get_nohz_timer_target (1 samples, 0.03%)</title><rect x="90.7522%" y="485" width="0.0270%" height="15" fill="rgb(240,177,30)" fg:x="3366" fg:w="1"/><text x="91.0022%" y="495.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (10 samples, 0.27%)</title><rect x="90.5365%" y="533" width="0.2696%" height="15" fill="rgb(248,76,44)" fg:x="3358" fg:w="10"/><text x="90.7865%" y="543.50"></text></g><g><title>sk_reset_timer (6 samples, 0.16%)</title><rect x="90.6444%" y="517" width="0.1618%" height="15" fill="rgb(241,186,54)" fg:x="3362" fg:w="6"/><text x="90.8944%" y="527.50"></text></g><g><title>__mod_timer (6 samples, 0.16%)</title><rect x="90.6444%" y="501" width="0.1618%" height="15" fill="rgb(249,171,29)" fg:x="3362" fg:w="6"/><text x="90.8944%" y="511.50"></text></g><g><title>lock_timer_base (1 samples, 0.03%)</title><rect x="90.7792%" y="485" width="0.0270%" height="15" fill="rgb(237,151,44)" fg:x="3367" fg:w="1"/><text x="91.0292%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="90.7792%" y="469" width="0.0270%" height="15" fill="rgb(228,174,30)" fg:x="3367" fg:w="1"/><text x="91.0292%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (270 samples, 7.28%)</title><rect x="83.5535%" y="565" width="7.2796%" height="15" fill="rgb(252,14,37)" fg:x="3099" fg:w="270"/><text x="83.8035%" y="575.50">__tcp_push..</text></g><g><title>tcp_write_xmit (269 samples, 7.25%)</title><rect x="83.5805%" y="549" width="7.2526%" height="15" fill="rgb(207,111,40)" fg:x="3100" fg:w="269"/><text x="83.8305%" y="559.50">tcp_write_..</text></g><g><title>tcp_small_queue_check.isra.0 (1 samples, 0.03%)</title><rect x="90.8061%" y="533" width="0.0270%" height="15" fill="rgb(248,171,54)" fg:x="3368" fg:w="1"/><text x="91.0561%" y="543.50"></text></g><g><title>_copy_from_iter (7 samples, 0.19%)</title><rect x="90.8331%" y="565" width="0.1887%" height="15" fill="rgb(211,127,2)" fg:x="3369" fg:w="7"/><text x="91.0831%" y="575.50"></text></g><g><title>copyin (6 samples, 0.16%)</title><rect x="90.8601%" y="549" width="0.1618%" height="15" fill="rgb(236,87,47)" fg:x="3370" fg:w="6"/><text x="91.1101%" y="559.50"></text></g><g><title>rep_movs_alternative (6 samples, 0.16%)</title><rect x="90.8601%" y="533" width="0.1618%" height="15" fill="rgb(223,190,45)" fg:x="3370" fg:w="6"/><text x="91.1101%" y="543.50"></text></g><g><title>sk_page_frag_refill (5 samples, 0.13%)</title><rect x="91.0218%" y="565" width="0.1348%" height="15" fill="rgb(215,5,16)" fg:x="3376" fg:w="5"/><text x="91.2718%" y="575.50"></text></g><g><title>skb_page_frag_refill (5 samples, 0.13%)</title><rect x="91.0218%" y="549" width="0.1348%" height="15" fill="rgb(252,82,33)" fg:x="3376" fg:w="5"/><text x="91.2718%" y="559.50"></text></g><g><title>alloc_pages (1 samples, 0.03%)</title><rect x="91.1297%" y="533" width="0.0270%" height="15" fill="rgb(247,213,44)" fg:x="3380" fg:w="1"/><text x="91.3797%" y="543.50"></text></g><g><title>policy_node (1 samples, 0.03%)</title><rect x="91.1297%" y="517" width="0.0270%" height="15" fill="rgb(205,196,44)" fg:x="3380" fg:w="1"/><text x="91.3797%" y="527.50"></text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="91.1566%" y="565" width="0.0270%" height="15" fill="rgb(237,96,54)" fg:x="3381" fg:w="1"/><text x="91.4066%" y="575.50"></text></g><g><title>tcp_send_mss (3 samples, 0.08%)</title><rect x="91.1836%" y="565" width="0.0809%" height="15" fill="rgb(230,113,34)" fg:x="3382" fg:w="3"/><text x="91.4336%" y="575.50"></text></g><g><title>tcp_current_mss (2 samples, 0.05%)</title><rect x="91.2106%" y="549" width="0.0539%" height="15" fill="rgb(221,224,12)" fg:x="3383" fg:w="2"/><text x="91.4606%" y="559.50"></text></g><g><title>ipv4_mtu (2 samples, 0.05%)</title><rect x="91.2106%" y="533" width="0.0539%" height="15" fill="rgb(219,112,44)" fg:x="3383" fg:w="2"/><text x="91.4606%" y="543.50"></text></g><g><title>tcp_skb_entail (2 samples, 0.05%)</title><rect x="91.2645%" y="565" width="0.0539%" height="15" fill="rgb(210,31,13)" fg:x="3385" fg:w="2"/><text x="91.5145%" y="575.50"></text></g><g><title>kmalloc_reserve (4 samples, 0.11%)</title><rect x="91.4263%" y="533" width="0.1078%" height="15" fill="rgb(230,25,16)" fg:x="3391" fg:w="4"/><text x="91.6763%" y="543.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="91.4802%" y="517" width="0.0539%" height="15" fill="rgb(246,108,53)" fg:x="3393" fg:w="2"/><text x="91.7302%" y="527.50"></text></g><g><title>memset_orig (2 samples, 0.05%)</title><rect x="91.4802%" y="501" width="0.0539%" height="15" fill="rgb(241,172,50)" fg:x="3393" fg:w="2"/><text x="91.7302%" y="511.50"></text></g><g><title>___slab_alloc (1 samples, 0.03%)</title><rect x="91.5611%" y="517" width="0.0270%" height="15" fill="rgb(235,141,10)" fg:x="3396" fg:w="1"/><text x="91.8111%" y="527.50"></text></g><g><title>unwind_get_return_address (1 samples, 0.03%)</title><rect x="91.5880%" y="469" width="0.0270%" height="15" fill="rgb(220,174,43)" fg:x="3397" fg:w="1"/><text x="91.8380%" y="479.50"></text></g><g><title>__kernel_text_address (1 samples, 0.03%)</title><rect x="91.5880%" y="453" width="0.0270%" height="15" fill="rgb(215,181,40)" fg:x="3397" fg:w="1"/><text x="91.8380%" y="463.50"></text></g><g><title>__alloc_skb (11 samples, 0.30%)</title><rect x="91.3454%" y="549" width="0.2966%" height="15" fill="rgb(230,97,2)" fg:x="3388" fg:w="11"/><text x="91.5954%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (4 samples, 0.11%)</title><rect x="91.5341%" y="533" width="0.1078%" height="15" fill="rgb(211,25,27)" fg:x="3395" fg:w="4"/><text x="91.7841%" y="543.50"></text></g><g><title>__kfence_alloc (2 samples, 0.05%)</title><rect x="91.5880%" y="517" width="0.0539%" height="15" fill="rgb(230,87,26)" fg:x="3397" fg:w="2"/><text x="91.8380%" y="527.50"></text></g><g><title>stack_trace_save (2 samples, 0.05%)</title><rect x="91.5880%" y="501" width="0.0539%" height="15" fill="rgb(227,160,17)" fg:x="3397" fg:w="2"/><text x="91.8380%" y="511.50"></text></g><g><title>arch_stack_walk (2 samples, 0.05%)</title><rect x="91.5880%" y="485" width="0.0539%" height="15" fill="rgb(244,85,34)" fg:x="3397" fg:w="2"/><text x="91.8380%" y="495.50"></text></g><g><title>unwind_next_frame (1 samples, 0.03%)</title><rect x="91.6150%" y="469" width="0.0270%" height="15" fill="rgb(207,70,0)" fg:x="3398" fg:w="1"/><text x="91.8650%" y="479.50"></text></g><g><title>__orc_find (1 samples, 0.03%)</title><rect x="91.6150%" y="453" width="0.0270%" height="15" fill="rgb(223,129,7)" fg:x="3398" fg:w="1"/><text x="91.8650%" y="463.50"></text></g><g><title>__sk_mem_schedule (3 samples, 0.08%)</title><rect x="91.6420%" y="549" width="0.0809%" height="15" fill="rgb(246,105,7)" fg:x="3399" fg:w="3"/><text x="91.8920%" y="559.50"></text></g><g><title>__sk_mem_raise_allocated (3 samples, 0.08%)</title><rect x="91.6420%" y="533" width="0.0809%" height="15" fill="rgb(215,154,42)" fg:x="3399" fg:w="3"/><text x="91.8920%" y="543.50"></text></g><g><title>mem_cgroup_charge_skmem (3 samples, 0.08%)</title><rect x="91.6420%" y="517" width="0.0809%" height="15" fill="rgb(220,215,30)" fg:x="3399" fg:w="3"/><text x="91.8920%" y="527.50"></text></g><g><title>try_charge_memcg (2 samples, 0.05%)</title><rect x="91.6689%" y="501" width="0.0539%" height="15" fill="rgb(228,81,51)" fg:x="3400" fg:w="2"/><text x="91.9189%" y="511.50"></text></g><g><title>mem_cgroup_charge_skmem (1 samples, 0.03%)</title><rect x="91.7228%" y="549" width="0.0270%" height="15" fill="rgb(247,71,54)" fg:x="3402" fg:w="1"/><text x="91.9728%" y="559.50"></text></g><g><title>mod_memcg_state (1 samples, 0.03%)</title><rect x="91.7228%" y="533" width="0.0270%" height="15" fill="rgb(234,176,34)" fg:x="3402" fg:w="1"/><text x="91.9728%" y="543.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.03%)</title><rect x="91.7228%" y="517" width="0.0270%" height="15" fill="rgb(241,103,54)" fg:x="3402" fg:w="1"/><text x="91.9728%" y="527.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="91.7228%" y="501" width="0.0270%" height="15" fill="rgb(228,22,34)" fg:x="3402" fg:w="1"/><text x="91.9728%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="91.7228%" y="485" width="0.0270%" height="15" fill="rgb(241,179,48)" fg:x="3402" fg:w="1"/><text x="91.9728%" y="495.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="91.7228%" y="469" width="0.0270%" height="15" fill="rgb(235,167,37)" fg:x="3402" fg:w="1"/><text x="91.9728%" y="479.50"></text></g><g><title>tcp_stream_alloc_skb (17 samples, 0.46%)</title><rect x="91.3184%" y="565" width="0.4583%" height="15" fill="rgb(213,109,30)" fg:x="3387" fg:w="17"/><text x="91.5684%" y="575.50"></text></g><g><title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="91.7498%" y="549" width="0.0270%" height="15" fill="rgb(222,172,16)" fg:x="3403" fg:w="1"/><text x="91.9998%" y="559.50"></text></g><g><title>mem_cgroup_charge_skmem (1 samples, 0.03%)</title><rect x="91.8307%" y="517" width="0.0270%" height="15" fill="rgb(233,192,5)" fg:x="3406" fg:w="1"/><text x="92.0807%" y="527.50"></text></g><g><title>mod_memcg_state (1 samples, 0.03%)</title><rect x="91.8307%" y="501" width="0.0270%" height="15" fill="rgb(247,189,41)" fg:x="3406" fg:w="1"/><text x="92.0807%" y="511.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.03%)</title><rect x="91.8307%" y="485" width="0.0270%" height="15" fill="rgb(218,134,47)" fg:x="3406" fg:w="1"/><text x="92.0807%" y="495.50"></text></g><g><title>do_iter_readv_writev (335 samples, 9.03%)</title><rect x="82.8525%" y="629" width="9.0321%" height="15" fill="rgb(216,29,3)" fg:x="3073" fg:w="335"/><text x="83.1025%" y="639.50">do_iter_readv..</text></g><g><title>sock_write_iter (335 samples, 9.03%)</title><rect x="82.8525%" y="613" width="9.0321%" height="15" fill="rgb(246,140,12)" fg:x="3073" fg:w="335"/><text x="83.1025%" y="623.50">sock_write_it..</text></g><g><title>tcp_sendmsg (326 samples, 8.79%)</title><rect x="83.0952%" y="597" width="8.7894%" height="15" fill="rgb(230,136,11)" fg:x="3082" fg:w="326"/><text x="83.3452%" y="607.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (316 samples, 8.52%)</title><rect x="83.3648%" y="581" width="8.5198%" height="15" fill="rgb(247,22,47)" fg:x="3092" fg:w="316"/><text x="83.6148%" y="591.50">tcp_sendmsg_..</text></g><g><title>tcp_wmem_schedule (4 samples, 0.11%)</title><rect x="91.7768%" y="565" width="0.1078%" height="15" fill="rgb(218,84,22)" fg:x="3404" fg:w="4"/><text x="92.0268%" y="575.50"></text></g><g><title>__sk_mem_schedule (3 samples, 0.08%)</title><rect x="91.8037%" y="549" width="0.0809%" height="15" fill="rgb(216,87,39)" fg:x="3405" fg:w="3"/><text x="92.0537%" y="559.50"></text></g><g><title>__sk_mem_raise_allocated (3 samples, 0.08%)</title><rect x="91.8037%" y="533" width="0.0809%" height="15" fill="rgb(221,178,8)" fg:x="3405" fg:w="3"/><text x="92.0537%" y="543.50"></text></g><g><title>tcp_leave_memory_pressure (1 samples, 0.03%)</title><rect x="91.8576%" y="517" width="0.0270%" height="15" fill="rgb(230,42,11)" fg:x="3407" fg:w="1"/><text x="92.1076%" y="527.50"></text></g><g><title>do_iter_write (344 samples, 9.27%)</title><rect x="82.7177%" y="645" width="9.2747%" height="15" fill="rgb(237,229,4)" fg:x="3068" fg:w="344"/><text x="82.9677%" y="655.50">do_iter_write</text></g><g><title>security_file_permission (4 samples, 0.11%)</title><rect x="91.8846%" y="629" width="0.1078%" height="15" fill="rgb(222,31,33)" fg:x="3408" fg:w="4"/><text x="92.1346%" y="639.50"></text></g><g><title>apparmor_file_permission (4 samples, 0.11%)</title><rect x="91.8846%" y="613" width="0.1078%" height="15" fill="rgb(210,17,39)" fg:x="3408" fg:w="4"/><text x="92.1346%" y="623.50"></text></g><g><title>aa_file_perm (2 samples, 0.05%)</title><rect x="91.9385%" y="597" width="0.0539%" height="15" fill="rgb(244,93,20)" fg:x="3410" fg:w="2"/><text x="92.1885%" y="607.50"></text></g><g><title>do_writev (351 samples, 9.46%)</title><rect x="82.5559%" y="677" width="9.4635%" height="15" fill="rgb(210,40,47)" fg:x="3062" fg:w="351"/><text x="82.8059%" y="687.50">do_writev</text></g><g><title>vfs_writev (347 samples, 9.36%)</title><rect x="82.6638%" y="661" width="9.3556%" height="15" fill="rgb(239,211,47)" fg:x="3066" fg:w="347"/><text x="82.9138%" y="671.50">vfs_writev</text></g><g><title>import_iovec (1 samples, 0.03%)</title><rect x="91.9925%" y="645" width="0.0270%" height="15" fill="rgb(251,223,49)" fg:x="3412" fg:w="1"/><text x="92.2425%" y="655.50"></text></g><g><title>__import_iovec (1 samples, 0.03%)</title><rect x="91.9925%" y="629" width="0.0270%" height="15" fill="rgb(221,149,5)" fg:x="3412" fg:w="1"/><text x="92.2425%" y="639.50"></text></g><g><title>import_ubuf (1 samples, 0.03%)</title><rect x="91.9925%" y="613" width="0.0270%" height="15" fill="rgb(219,224,51)" fg:x="3412" fg:w="1"/><text x="92.2425%" y="623.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.03%)</title><rect x="92.1003%" y="613" width="0.0270%" height="15" fill="rgb(223,7,8)" fg:x="3416" fg:w="1"/><text x="92.3503%" y="623.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.05%)</title><rect x="92.1273%" y="613" width="0.0539%" height="15" fill="rgb(241,217,22)" fg:x="3417" fg:w="2"/><text x="92.3773%" y="623.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.03%)</title><rect x="92.1542%" y="597" width="0.0270%" height="15" fill="rgb(248,209,0)" fg:x="3418" fg:w="1"/><text x="92.4042%" y="607.50"></text></g><g><title>perf_ctx_enable (1 samples, 0.03%)</title><rect x="92.1542%" y="581" width="0.0270%" height="15" fill="rgb(217,205,4)" fg:x="3418" fg:w="1"/><text x="92.4042%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (1 samples, 0.03%)</title><rect x="92.1542%" y="565" width="0.0270%" height="15" fill="rgb(228,124,39)" fg:x="3418" fg:w="1"/><text x="92.4042%" y="575.50"></text></g><g><title>native_write_msr (1 samples, 0.03%)</title><rect x="92.1542%" y="549" width="0.0270%" height="15" fill="rgb(250,116,42)" fg:x="3418" fg:w="1"/><text x="92.4042%" y="559.50"></text></g><g><title>pick_next_entity.isra.0 (3 samples, 0.08%)</title><rect x="92.1812%" y="597" width="0.0809%" height="15" fill="rgb(223,202,9)" fg:x="3419" fg:w="3"/><text x="92.4312%" y="607.50"></text></g><g><title>__pick_eevdf (3 samples, 0.08%)</title><rect x="92.1812%" y="581" width="0.0809%" height="15" fill="rgb(242,222,40)" fg:x="3419" fg:w="3"/><text x="92.4312%" y="591.50"></text></g><g><title>entity_eligible (1 samples, 0.03%)</title><rect x="92.2351%" y="565" width="0.0270%" height="15" fill="rgb(229,99,46)" fg:x="3421" fg:w="1"/><text x="92.4851%" y="575.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.13%)</title><rect x="92.1812%" y="613" width="0.1348%" height="15" fill="rgb(225,56,46)" fg:x="3419" fg:w="5"/><text x="92.4312%" y="623.50"></text></g><g><title>set_next_entity (2 samples, 0.05%)</title><rect x="92.2621%" y="597" width="0.0539%" height="15" fill="rgb(227,94,5)" fg:x="3422" fg:w="2"/><text x="92.5121%" y="607.50"></text></g><g><title>__dequeue_entity (2 samples, 0.05%)</title><rect x="92.2621%" y="581" width="0.0539%" height="15" fill="rgb(205,112,38)" fg:x="3422" fg:w="2"/><text x="92.5121%" y="591.50"></text></g><g><title>rb_next (1 samples, 0.03%)</title><rect x="92.2890%" y="565" width="0.0270%" height="15" fill="rgb(231,133,46)" fg:x="3423" fg:w="1"/><text x="92.5390%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (11 samples, 0.30%)</title><rect x="92.0464%" y="661" width="0.2966%" height="15" fill="rgb(217,16,9)" fg:x="3414" fg:w="11"/><text x="92.2964%" y="671.50"></text></g><g><title>schedule (10 samples, 0.27%)</title><rect x="92.0733%" y="645" width="0.2696%" height="15" fill="rgb(249,173,9)" fg:x="3415" fg:w="10"/><text x="92.3233%" y="655.50"></text></g><g><title>__schedule (10 samples, 0.27%)</title><rect x="92.0733%" y="629" width="0.2696%" height="15" fill="rgb(205,163,53)" fg:x="3415" fg:w="10"/><text x="92.3233%" y="639.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.03%)</title><rect x="92.3160%" y="613" width="0.0270%" height="15" fill="rgb(217,54,41)" fg:x="3424" fg:w="1"/><text x="92.5660%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (370 samples, 9.98%)</title><rect x="82.3942%" y="709" width="9.9757%" height="15" fill="rgb(228,216,12)" fg:x="3056" fg:w="370"/><text x="82.6442%" y="719.50">entry_SYSCALL_..</text></g><g><title>do_syscall_64 (364 samples, 9.81%)</title><rect x="82.5559%" y="693" width="9.8140%" height="15" fill="rgb(244,228,15)" fg:x="3062" fg:w="364"/><text x="82.8059%" y="703.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.35%)</title><rect x="92.0194%" y="677" width="0.3505%" height="15" fill="rgb(221,176,53)" fg:x="3413" fg:w="13"/><text x="92.2694%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="92.3429%" y="661" width="0.0270%" height="15" fill="rgb(205,94,34)" fg:x="3425" fg:w="1"/><text x="92.5929%" y="671.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (6 samples, 0.16%)</title><rect x="92.3699%" y="709" width="0.1618%" height="15" fill="rgb(213,110,48)" fg:x="3426" fg:w="6"/><text x="92.6199%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (382 samples, 10.30%)</title><rect x="82.3133%" y="757" width="10.2993%" height="15" fill="rgb(236,142,28)" fg:x="3053" fg:w="382"/><text x="82.5633%" y="767.50">&lt;&amp;mio::net::tcp..</text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write_vectored (380 samples, 10.25%)</title><rect x="82.3672%" y="741" width="10.2453%" height="15" fill="rgb(225,135,29)" fg:x="3055" fg:w="380"/><text x="82.6172%" y="751.50">&lt;&amp;std::os::unix..</text></g><g><title>writev (380 samples, 10.25%)</title><rect x="82.3672%" y="725" width="10.2453%" height="15" fill="rgb(252,45,31)" fg:x="3055" fg:w="380"/><text x="82.6172%" y="735.50">writev</text></g><g><title>syscall_return_via_sysret (3 samples, 0.08%)</title><rect x="92.5317%" y="709" width="0.0809%" height="15" fill="rgb(211,187,50)" fg:x="3432" fg:w="3"/><text x="92.7817%" y="719.50"></text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored (384 samples, 10.35%)</title><rect x="82.2863%" y="837" width="10.3532%" height="15" fill="rgb(229,109,7)" fg:x="3052" fg:w="384"/><text x="82.5363%" y="847.50">&lt;tokio_rustls::..</text></g><g><title>tokio_rustls::common::SyncWriteAdapter&lt;T&gt;::poll_with (384 samples, 10.35%)</title><rect x="82.2863%" y="821" width="10.3532%" height="15" fill="rgb(251,131,51)" fg:x="3052" fg:w="384"/><text x="82.5363%" y="831.50">tokio_rustls::c..</text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored::_{{closure}} (383 samples, 10.33%)</title><rect x="82.3133%" y="805" width="10.3262%" height="15" fill="rgb(251,180,35)" fg:x="3053" fg:w="383"/><text x="82.5633%" y="815.50">&lt;tokio_rustls::..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (383 samples, 10.33%)</title><rect x="82.3133%" y="789" width="10.3262%" height="15" fill="rgb(211,46,32)" fg:x="3053" fg:w="383"/><text x="82.5633%" y="799.50">&lt;tokio::net::tc..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (383 samples, 10.33%)</title><rect x="82.3133%" y="773" width="10.3262%" height="15" fill="rgb(248,123,17)" fg:x="3053" fg:w="383"/><text x="82.5633%" y="783.50">tokio::runtime:..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.03%)</title><rect x="92.6126%" y="757" width="0.0270%" height="15" fill="rgb(227,141,18)" fg:x="3435" fg:w="1"/><text x="92.8626%" y="767.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.03%)</title><rect x="92.6126%" y="741" width="0.0270%" height="15" fill="rgb(216,102,9)" fg:x="3435" fg:w="1"/><text x="92.8626%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="92.6126%" y="725" width="0.0270%" height="15" fill="rgb(253,47,13)" fg:x="3435" fg:w="1"/><text x="92.8626%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="92.6126%" y="709" width="0.0270%" height="15" fill="rgb(226,93,23)" fg:x="3435" fg:w="1"/><text x="92.8626%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (3 samples, 0.08%)</title><rect x="92.6395%" y="821" width="0.0809%" height="15" fill="rgb(247,104,17)" fg:x="3436" fg:w="3"/><text x="92.8895%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (1 samples, 0.03%)</title><rect x="92.6934%" y="805" width="0.0270%" height="15" fill="rgb(233,203,26)" fg:x="3438" fg:w="1"/><text x="92.9434%" y="815.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (1 samples, 0.03%)</title><rect x="92.6934%" y="789" width="0.0270%" height="15" fill="rgb(244,98,49)" fg:x="3438" fg:w="1"/><text x="92.9434%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="92.6934%" y="773" width="0.0270%" height="15" fill="rgb(235,134,22)" fg:x="3438" fg:w="1"/><text x="92.9434%" y="783.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="92.7204%" y="741" width="0.0270%" height="15" fill="rgb(221,70,32)" fg:x="3439" fg:w="1"/><text x="92.9704%" y="751.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="92.7204%" y="725" width="0.0270%" height="15" fill="rgb(238,15,50)" fg:x="3439" fg:w="1"/><text x="92.9704%" y="735.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write::_{{closure}} (458 samples, 12.35%)</title><rect x="80.6417%" y="949" width="12.3483%" height="15" fill="rgb(215,221,48)" fg:x="2991" fg:w="458"/><text x="80.8917%" y="959.50">&lt;tokio::io::split:..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (458 samples, 12.35%)</title><rect x="80.6417%" y="933" width="12.3483%" height="15" fill="rgb(236,73,3)" fg:x="2991" fg:w="458"/><text x="80.8917%" y="943.50">&lt;alloc::boxed::Box..</text></g><g><title>&lt;tokio_rustls::client::TlsStream&lt;IO&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (458 samples, 12.35%)</title><rect x="80.6417%" y="917" width="12.3483%" height="15" fill="rgb(250,107,11)" fg:x="2991" fg:w="458"/><text x="80.8917%" y="927.50">&lt;tokio_rustls::cli..</text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (458 samples, 12.35%)</title><rect x="80.6417%" y="901" width="12.3483%" height="15" fill="rgb(242,39,14)" fg:x="2991" fg:w="458"/><text x="80.8917%" y="911.50">&lt;tokio_rustls::com..</text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::write_io (400 samples, 10.78%)</title><rect x="82.2054%" y="885" width="10.7846%" height="15" fill="rgb(248,164,37)" fg:x="3049" fg:w="400"/><text x="82.4554%" y="895.50">tokio_rustls::co..</text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::write_tls (400 samples, 10.78%)</title><rect x="82.2054%" y="869" width="10.7846%" height="15" fill="rgb(217,60,12)" fg:x="3049" fg:w="400"/><text x="82.4554%" y="879.50">rustls::conn::Co..</text></g><g><title>rustls::vecbuf::ChunkVecBuffer::write_to (400 samples, 10.78%)</title><rect x="82.2054%" y="853" width="10.7846%" height="15" fill="rgb(240,125,29)" fg:x="3049" fg:w="400"/><text x="82.4554%" y="863.50">rustls::vecbuf::..</text></g><g><title>rustls::vecbuf::ChunkVecBuffer::consume (13 samples, 0.35%)</title><rect x="92.6395%" y="837" width="0.3505%" height="15" fill="rgb(208,207,28)" fg:x="3436" fg:w="13"/><text x="92.8895%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.27%)</title><rect x="92.7204%" y="821" width="0.2696%" height="15" fill="rgb(209,159,27)" fg:x="3439" fg:w="10"/><text x="92.9704%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.27%)</title><rect x="92.7204%" y="805" width="0.2696%" height="15" fill="rgb(251,176,53)" fg:x="3439" fg:w="10"/><text x="92.9704%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.27%)</title><rect x="92.7204%" y="789" width="0.2696%" height="15" fill="rgb(211,85,7)" fg:x="3439" fg:w="10"/><text x="92.9704%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.27%)</title><rect x="92.7204%" y="773" width="0.2696%" height="15" fill="rgb(216,64,54)" fg:x="3439" fg:w="10"/><text x="92.9704%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.27%)</title><rect x="92.7204%" y="757" width="0.2696%" height="15" fill="rgb(217,54,24)" fg:x="3439" fg:w="10"/><text x="92.9704%" y="767.50"></text></g><g><title>cfree (9 samples, 0.24%)</title><rect x="92.7474%" y="741" width="0.2427%" height="15" fill="rgb(208,206,53)" fg:x="3440" fg:w="9"/><text x="92.9974%" y="751.50"></text></g><g><title>[libc.so.6] (8 samples, 0.22%)</title><rect x="92.7743%" y="725" width="0.2157%" height="15" fill="rgb(251,74,39)" fg:x="3441" fg:w="8"/><text x="93.0243%" y="735.50"></text></g><g><title>[libc.so.6] (6 samples, 0.16%)</title><rect x="92.8283%" y="709" width="0.1618%" height="15" fill="rgb(226,47,5)" fg:x="3443" fg:w="6"/><text x="93.0783%" y="719.50"></text></g><g><title>std::sync::poison::Flag::done (2 samples, 0.05%)</title><rect x="92.9900%" y="917" width="0.0539%" height="15" fill="rgb(234,111,33)" fg:x="3449" fg:w="2"/><text x="93.2400%" y="927.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.03%)</title><rect x="93.0979%" y="773" width="0.0270%" height="15" fill="rgb(251,14,10)" fg:x="3453" fg:w="1"/><text x="93.3479%" y="783.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.03%)</title><rect x="93.1248%" y="741" width="0.0270%" height="15" fill="rgb(232,43,0)" fg:x="3454" fg:w="1"/><text x="93.3748%" y="751.50"></text></g><g><title>reweight_entity (1 samples, 0.03%)</title><rect x="93.1248%" y="725" width="0.0270%" height="15" fill="rgb(222,68,43)" fg:x="3454" fg:w="1"/><text x="93.3748%" y="735.50"></text></g><g><title>avg_vruntime (1 samples, 0.03%)</title><rect x="93.1248%" y="709" width="0.0270%" height="15" fill="rgb(217,24,23)" fg:x="3454" fg:w="1"/><text x="93.3748%" y="719.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.11%)</title><rect x="93.0709%" y="853" width="0.1078%" height="15" fill="rgb(229,209,14)" fg:x="3452" fg:w="4"/><text x="93.3209%" y="863.50"></text></g><g><title>do_futex (4 samples, 0.11%)</title><rect x="93.0709%" y="837" width="0.1078%" height="15" fill="rgb(250,149,48)" fg:x="3452" fg:w="4"/><text x="93.3209%" y="847.50"></text></g><g><title>futex_wake (4 samples, 0.11%)</title><rect x="93.0709%" y="821" width="0.1078%" height="15" fill="rgb(210,120,37)" fg:x="3452" fg:w="4"/><text x="93.3209%" y="831.50"></text></g><g><title>wake_up_q (3 samples, 0.08%)</title><rect x="93.0979%" y="805" width="0.0809%" height="15" fill="rgb(210,21,8)" fg:x="3453" fg:w="3"/><text x="93.3479%" y="815.50"></text></g><g><title>try_to_wake_up (3 samples, 0.08%)</title><rect x="93.0979%" y="789" width="0.0809%" height="15" fill="rgb(243,145,7)" fg:x="3453" fg:w="3"/><text x="93.3479%" y="799.50"></text></g><g><title>ttwu_do_activate (2 samples, 0.05%)</title><rect x="93.1248%" y="773" width="0.0539%" height="15" fill="rgb(238,178,32)" fg:x="3454" fg:w="2"/><text x="93.3748%" y="783.50"></text></g><g><title>enqueue_task (2 samples, 0.05%)</title><rect x="93.1248%" y="757" width="0.0539%" height="15" fill="rgb(222,4,10)" fg:x="3454" fg:w="2"/><text x="93.3748%" y="767.50"></text></g><g><title>psi_task_change (1 samples, 0.03%)</title><rect x="93.1518%" y="741" width="0.0270%" height="15" fill="rgb(239,7,37)" fg:x="3455" fg:w="1"/><text x="93.4018%" y="751.50"></text></g><g><title>psi_group_change (1 samples, 0.03%)</title><rect x="93.1518%" y="725" width="0.0270%" height="15" fill="rgb(215,31,37)" fg:x="3455" fg:w="1"/><text x="93.4018%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.16%)</title><rect x="93.0439%" y="885" width="0.1618%" height="15" fill="rgb(224,83,33)" fg:x="3451" fg:w="6"/><text x="93.2939%" y="895.50"></text></g><g><title>do_syscall_64 (5 samples, 0.13%)</title><rect x="93.0709%" y="869" width="0.1348%" height="15" fill="rgb(239,55,3)" fg:x="3452" fg:w="5"/><text x="93.3209%" y="879.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="93.1788%" y="853" width="0.0270%" height="15" fill="rgb(247,92,11)" fg:x="3456" fg:w="1"/><text x="93.4288%" y="863.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="93.1788%" y="837" width="0.0270%" height="15" fill="rgb(239,200,7)" fg:x="3456" fg:w="1"/><text x="93.4288%" y="847.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="93.1788%" y="821" width="0.0270%" height="15" fill="rgb(227,115,8)" fg:x="3456" fg:w="1"/><text x="93.4288%" y="831.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="93.1788%" y="805" width="0.0270%" height="15" fill="rgb(215,189,27)" fg:x="3456" fg:w="1"/><text x="93.4288%" y="815.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="93.1788%" y="789" width="0.0270%" height="15" fill="rgb(251,216,39)" fg:x="3456" fg:w="1"/><text x="93.4288%" y="799.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="93.1788%" y="773" width="0.0270%" height="15" fill="rgb(207,29,47)" fg:x="3456" fg:w="1"/><text x="93.4288%" y="783.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (468 samples, 12.62%)</title><rect x="80.6147%" y="1013" width="12.6180%" height="15" fill="rgb(210,71,34)" fg:x="2990" fg:w="468"/><text x="80.8647%" y="1023.50">&lt;tokio::io::util::w..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (468 samples, 12.62%)</title><rect x="80.6147%" y="997" width="12.6180%" height="15" fill="rgb(253,217,51)" fg:x="2990" fg:w="468"/><text x="80.8647%" y="1007.50">&lt;&amp;mut T as tokio::i..</text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (467 samples, 12.59%)</title><rect x="80.6417%" y="981" width="12.5910%" height="15" fill="rgb(222,117,46)" fg:x="2991" fg:w="467"/><text x="80.8917%" y="991.50">&lt;tokio::io::split::..</text></g><g><title>tokio::io::split::Inner&lt;T&gt;::with_lock (467 samples, 12.59%)</title><rect x="80.6417%" y="965" width="12.5910%" height="15" fill="rgb(226,132,6)" fg:x="2991" fg:w="467"/><text x="80.8917%" y="975.50">tokio::io::split::I..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::boxed::Box&lt;tokio_rustls::client::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;&gt; (9 samples, 0.24%)</title><rect x="92.9900%" y="949" width="0.2427%" height="15" fill="rgb(254,145,51)" fg:x="3449" fg:w="9"/><text x="93.2400%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.24%)</title><rect x="92.9900%" y="933" width="0.2427%" height="15" fill="rgb(231,199,27)" fg:x="3449" fg:w="9"/><text x="93.2400%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (7 samples, 0.19%)</title><rect x="93.0439%" y="917" width="0.1887%" height="15" fill="rgb(245,158,14)" fg:x="3451" fg:w="7"/><text x="93.2939%" y="927.50"></text></g><g><title>syscall (7 samples, 0.19%)</title><rect x="93.0439%" y="901" width="0.1887%" height="15" fill="rgb(240,113,14)" fg:x="3451" fg:w="7"/><text x="93.2939%" y="911.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (1 samples, 0.03%)</title><rect x="93.2057%" y="885" width="0.0270%" height="15" fill="rgb(210,20,13)" fg:x="3457" fg:w="1"/><text x="93.4557%" y="895.50"></text></g><g><title>[libc.so.6] (5 samples, 0.13%)</title><rect x="93.2327%" y="901" width="0.1348%" height="15" fill="rgb(241,144,13)" fg:x="3458" fg:w="5"/><text x="93.4827%" y="911.50"></text></g><g><title>__libc_calloc (7 samples, 0.19%)</title><rect x="93.3675%" y="901" width="0.1887%" height="15" fill="rgb(235,43,34)" fg:x="3463" fg:w="7"/><text x="93.6175%" y="911.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="93.5023%" y="885" width="0.0539%" height="15" fill="rgb(208,36,20)" fg:x="3468" fg:w="2"/><text x="93.7523%" y="895.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="93.5023%" y="869" width="0.0539%" height="15" fill="rgb(239,204,10)" fg:x="3468" fg:w="2"/><text x="93.7523%" y="879.50"></text></g><g><title>alloc::vec::from_elem (14 samples, 0.38%)</title><rect x="93.2327%" y="1013" width="0.3775%" height="15" fill="rgb(217,84,43)" fg:x="3458" fg:w="14"/><text x="93.4827%" y="1023.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (14 samples, 0.38%)</title><rect x="93.2327%" y="997" width="0.3775%" height="15" fill="rgb(241,170,50)" fg:x="3458" fg:w="14"/><text x="93.4827%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (14 samples, 0.38%)</title><rect x="93.2327%" y="981" width="0.3775%" height="15" fill="rgb(226,205,29)" fg:x="3458" fg:w="14"/><text x="93.4827%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (14 samples, 0.38%)</title><rect x="93.2327%" y="965" width="0.3775%" height="15" fill="rgb(233,113,1)" fg:x="3458" fg:w="14"/><text x="93.4827%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (14 samples, 0.38%)</title><rect x="93.2327%" y="949" width="0.3775%" height="15" fill="rgb(253,98,13)" fg:x="3458" fg:w="14"/><text x="93.4827%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.38%)</title><rect x="93.2327%" y="933" width="0.3775%" height="15" fill="rgb(211,115,12)" fg:x="3458" fg:w="14"/><text x="93.4827%" y="943.50"></text></g><g><title>alloc::alloc::alloc_zeroed (14 samples, 0.38%)</title><rect x="93.2327%" y="917" width="0.3775%" height="15" fill="rgb(208,12,16)" fg:x="3458" fg:w="14"/><text x="93.4827%" y="927.50"></text></g><g><title>__rust_alloc_zeroed (2 samples, 0.05%)</title><rect x="93.5562%" y="901" width="0.0539%" height="15" fill="rgb(237,193,54)" fg:x="3470" fg:w="2"/><text x="93.8062%" y="911.50"></text></g><g><title>kvlr::connection::processor::write_and_flush::_{{closure}} (491 samples, 13.24%)</title><rect x="80.4260%" y="1045" width="13.2381%" height="15" fill="rgb(243,22,42)" fg:x="2983" fg:w="491"/><text x="80.6760%" y="1055.50">kvlr::connection::pr..</text></g><g><title>kvlr::connection::frame::Frame::write_to_stream::_{{closure}} (489 samples, 13.18%)</title><rect x="80.4799%" y="1029" width="13.1841%" height="15" fill="rgb(233,151,36)" fg:x="2985" fg:w="489"/><text x="80.7299%" y="1039.50">kvlr::connection::fr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="93.6101%" y="1013" width="0.0539%" height="15" fill="rgb(237,57,45)" fg:x="3472" fg:w="2"/><text x="93.8601%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="93.6101%" y="997" width="0.0539%" height="15" fill="rgb(221,88,17)" fg:x="3472" fg:w="2"/><text x="93.8601%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="93.6101%" y="981" width="0.0539%" height="15" fill="rgb(230,79,15)" fg:x="3472" fg:w="2"/><text x="93.8601%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="93.6101%" y="965" width="0.0539%" height="15" fill="rgb(213,57,13)" fg:x="3472" fg:w="2"/><text x="93.8601%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="93.6101%" y="949" width="0.0539%" height="15" fill="rgb(222,116,39)" fg:x="3472" fg:w="2"/><text x="93.8601%" y="959.50"></text></g><g><title>cfree (2 samples, 0.05%)</title><rect x="93.6101%" y="933" width="0.0539%" height="15" fill="rgb(245,107,2)" fg:x="3472" fg:w="2"/><text x="93.8601%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="93.6371%" y="917" width="0.0270%" height="15" fill="rgb(238,1,10)" fg:x="3473" fg:w="1"/><text x="93.8871%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="93.6371%" y="901" width="0.0270%" height="15" fill="rgb(249,4,48)" fg:x="3473" fg:w="1"/><text x="93.8871%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="93.6371%" y="885" width="0.0270%" height="15" fill="rgb(223,151,18)" fg:x="3473" fg:w="1"/><text x="93.8871%" y="895.50"></text></g><g><title>tokio::runtime::coop::RestoreOnPending::made_progress (1 samples, 0.03%)</title><rect x="93.7719%" y="949" width="0.0270%" height="15" fill="rgb(227,65,43)" fg:x="3478" fg:w="1"/><text x="94.0219%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="93.7719%" y="933" width="0.0270%" height="15" fill="rgb(218,40,45)" fg:x="3478" fg:w="1"/><text x="94.0219%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="93.7719%" y="917" width="0.0270%" height="15" fill="rgb(252,121,31)" fg:x="3478" fg:w="1"/><text x="94.0219%" y="927.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="93.7719%" y="901" width="0.0270%" height="15" fill="rgb(219,158,43)" fg:x="3478" fg:w="1"/><text x="94.0219%" y="911.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="93.7719%" y="885" width="0.0270%" height="15" fill="rgb(231,162,42)" fg:x="3478" fg:w="1"/><text x="94.0219%" y="895.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="93.7989%" y="949" width="0.0270%" height="15" fill="rgb(217,179,25)" fg:x="3479" fg:w="1"/><text x="94.0489%" y="959.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (1 samples, 0.03%)</title><rect x="93.7989%" y="933" width="0.0270%" height="15" fill="rgb(206,212,31)" fg:x="3479" fg:w="1"/><text x="94.0489%" y="943.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::is_at_index (1 samples, 0.03%)</title><rect x="93.7989%" y="917" width="0.0270%" height="15" fill="rgb(235,144,12)" fg:x="3479" fg:w="1"/><text x="94.0489%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.05%)</title><rect x="93.8258%" y="917" width="0.0539%" height="15" fill="rgb(213,51,10)" fg:x="3480" fg:w="2"/><text x="94.0758%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.05%)</title><rect x="93.8258%" y="901" width="0.0539%" height="15" fill="rgb(231,145,14)" fg:x="3480" fg:w="2"/><text x="94.0758%" y="911.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (8 samples, 0.22%)</title><rect x="93.6910%" y="981" width="0.2157%" height="15" fill="rgb(235,15,28)" fg:x="3475" fg:w="8"/><text x="93.9410%" y="991.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::_{{closure}} (8 samples, 0.22%)</title><rect x="93.6910%" y="965" width="0.2157%" height="15" fill="rgb(237,206,10)" fg:x="3475" fg:w="8"/><text x="93.9410%" y="975.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (3 samples, 0.08%)</title><rect x="93.8258%" y="949" width="0.0809%" height="15" fill="rgb(236,227,27)" fg:x="3480" fg:w="3"/><text x="94.0758%" y="959.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (3 samples, 0.08%)</title><rect x="93.8258%" y="933" width="0.0809%" height="15" fill="rgb(246,83,35)" fg:x="3480" fg:w="3"/><text x="94.0758%" y="943.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (1 samples, 0.03%)</title><rect x="93.8798%" y="917" width="0.0270%" height="15" fill="rgb(220,136,24)" fg:x="3482" fg:w="1"/><text x="94.1298%" y="927.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="93.8798%" y="901" width="0.0270%" height="15" fill="rgb(217,3,25)" fg:x="3482" fg:w="1"/><text x="94.1298%" y="911.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="93.8798%" y="885" width="0.0270%" height="15" fill="rgb(239,24,14)" fg:x="3482" fg:w="1"/><text x="94.1298%" y="895.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="93.8798%" y="869" width="0.0270%" height="15" fill="rgb(244,16,53)" fg:x="3482" fg:w="1"/><text x="94.1298%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="93.8798%" y="853" width="0.0270%" height="15" fill="rgb(208,175,44)" fg:x="3482" fg:w="1"/><text x="94.1298%" y="863.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (1 samples, 0.03%)</title><rect x="93.8798%" y="837" width="0.0270%" height="15" fill="rgb(252,18,48)" fg:x="3482" fg:w="1"/><text x="94.1298%" y="847.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (1 samples, 0.03%)</title><rect x="93.8798%" y="821" width="0.0270%" height="15" fill="rgb(234,199,32)" fg:x="3482" fg:w="1"/><text x="94.1298%" y="831.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="93.8798%" y="805" width="0.0270%" height="15" fill="rgb(225,77,54)" fg:x="3482" fg:w="1"/><text x="94.1298%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.03%)</title><rect x="93.8798%" y="789" width="0.0270%" height="15" fill="rgb(225,42,25)" fg:x="3482" fg:w="1"/><text x="94.1298%" y="799.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::_{{closure}} (10 samples, 0.27%)</title><rect x="93.6641%" y="1045" width="0.2696%" height="15" fill="rgb(242,227,46)" fg:x="3474" fg:w="10"/><text x="93.9141%" y="1055.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.24%)</title><rect x="93.6910%" y="1029" width="0.2427%" height="15" fill="rgb(246,197,35)" fg:x="3475" fg:w="9"/><text x="93.9410%" y="1039.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::_{{closure}}::_{{closure}} (9 samples, 0.24%)</title><rect x="93.6910%" y="1013" width="0.2427%" height="15" fill="rgb(215,159,26)" fg:x="3475" fg:w="9"/><text x="93.9410%" y="1023.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (9 samples, 0.24%)</title><rect x="93.6910%" y="997" width="0.2427%" height="15" fill="rgb(212,194,50)" fg:x="3475" fg:w="9"/><text x="93.9410%" y="1007.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1 samples, 0.03%)</title><rect x="93.9067%" y="981" width="0.0270%" height="15" fill="rgb(246,132,1)" fg:x="3483" fg:w="1"/><text x="94.1567%" y="991.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.03%)</title><rect x="93.9067%" y="965" width="0.0270%" height="15" fill="rgb(217,71,7)" fg:x="3483" fg:w="1"/><text x="94.1567%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="93.9067%" y="949" width="0.0270%" height="15" fill="rgb(252,59,32)" fg:x="3483" fg:w="1"/><text x="94.1567%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="93.9067%" y="933" width="0.0270%" height="15" fill="rgb(253,204,25)" fg:x="3483" fg:w="1"/><text x="94.1567%" y="943.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1 samples, 0.03%)</title><rect x="93.9067%" y="917" width="0.0270%" height="15" fill="rgb(232,21,16)" fg:x="3483" fg:w="1"/><text x="94.1567%" y="927.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="93.9067%" y="901" width="0.0270%" height="15" fill="rgb(248,90,29)" fg:x="3483" fg:w="1"/><text x="94.1567%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="93.9067%" y="885" width="0.0270%" height="15" fill="rgb(249,223,7)" fg:x="3483" fg:w="1"/><text x="94.1567%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="93.9606%" y="901" width="0.0270%" height="15" fill="rgb(231,119,42)" fg:x="3485" fg:w="1"/><text x="94.2106%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="93.9606%" y="885" width="0.0270%" height="15" fill="rgb(215,41,35)" fg:x="3485" fg:w="1"/><text x="94.2106%" y="895.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3 samples, 0.08%)</title><rect x="93.9337%" y="917" width="0.0809%" height="15" fill="rgb(220,44,45)" fg:x="3484" fg:w="3"/><text x="94.1837%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.03%)</title><rect x="93.9876%" y="901" width="0.0270%" height="15" fill="rgb(253,197,36)" fg:x="3486" fg:w="1"/><text x="94.2376%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.03%)</title><rect x="93.9876%" y="885" width="0.0270%" height="15" fill="rgb(245,225,54)" fg:x="3486" fg:w="1"/><text x="94.2376%" y="895.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="94.0146%" y="917" width="0.0270%" height="15" fill="rgb(239,94,37)" fg:x="3487" fg:w="1"/><text x="94.2646%" y="927.50"></text></g><g><title>futex_hash (1 samples, 0.03%)</title><rect x="94.2842%" y="821" width="0.0270%" height="15" fill="rgb(242,217,10)" fg:x="3497" fg:w="1"/><text x="94.5342%" y="831.50"></text></g><g><title>get_futex_key (2 samples, 0.05%)</title><rect x="94.3111%" y="821" width="0.0539%" height="15" fill="rgb(250,193,7)" fg:x="3498" fg:w="2"/><text x="94.5611%" y="831.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="94.3920%" y="789" width="0.0270%" height="15" fill="rgb(230,104,19)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="799.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="94.3920%" y="773" width="0.0270%" height="15" fill="rgb(230,181,4)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="783.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="94.3920%" y="757" width="0.0270%" height="15" fill="rgb(216,219,49)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="767.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="94.3920%" y="741" width="0.0270%" height="15" fill="rgb(254,144,0)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="751.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="94.3920%" y="725" width="0.0270%" height="15" fill="rgb(205,209,38)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="735.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="94.3920%" y="709" width="0.0270%" height="15" fill="rgb(240,21,42)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="719.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="94.3920%" y="693" width="0.0270%" height="15" fill="rgb(241,132,3)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="703.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="94.3920%" y="677" width="0.0270%" height="15" fill="rgb(225,14,2)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="687.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="94.3920%" y="661" width="0.0270%" height="15" fill="rgb(210,141,35)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="671.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="94.3920%" y="645" width="0.0270%" height="15" fill="rgb(251,14,44)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="655.50"></text></g><g><title>arch_scale_freq_tick (1 samples, 0.03%)</title><rect x="94.3920%" y="629" width="0.0270%" height="15" fill="rgb(247,48,18)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="639.50"></text></g><g><title>native_read_msr (1 samples, 0.03%)</title><rect x="94.3920%" y="613" width="0.0270%" height="15" fill="rgb(225,0,40)" fg:x="3501" fg:w="1"/><text x="94.6420%" y="623.50"></text></g><g><title>__bitmap_and (1 samples, 0.03%)</title><rect x="94.4999%" y="773" width="0.0270%" height="15" fill="rgb(221,31,33)" fg:x="3505" fg:w="1"/><text x="94.7499%" y="783.50"></text></g><g><title>available_idle_cpu (1 samples, 0.03%)</title><rect x="94.5268%" y="773" width="0.0270%" height="15" fill="rgb(237,42,40)" fg:x="3506" fg:w="1"/><text x="94.7768%" y="783.50"></text></g><g><title>select_task_rq_fair (6 samples, 0.16%)</title><rect x="94.4190%" y="789" width="0.1618%" height="15" fill="rgb(233,51,29)" fg:x="3502" fg:w="6"/><text x="94.6690%" y="799.50"></text></g><g><title>task_h_load (1 samples, 0.03%)</title><rect x="94.5538%" y="773" width="0.0270%" height="15" fill="rgb(226,58,20)" fg:x="3507" fg:w="1"/><text x="94.8038%" y="783.50"></text></g><g><title>__enqueue_entity (2 samples, 0.05%)</title><rect x="94.6886%" y="725" width="0.0539%" height="15" fill="rgb(208,98,7)" fg:x="3512" fg:w="2"/><text x="94.9386%" y="735.50"></text></g><g><title>__rb_insert_augmented (3 samples, 0.08%)</title><rect x="94.7425%" y="725" width="0.0809%" height="15" fill="rgb(228,143,44)" fg:x="3514" fg:w="3"/><text x="94.9925%" y="735.50"></text></g><g><title>place_entity (1 samples, 0.03%)</title><rect x="94.8234%" y="725" width="0.0270%" height="15" fill="rgb(246,55,38)" fg:x="3517" fg:w="1"/><text x="95.0734%" y="735.50"></text></g><g><title>enqueue_entity (8 samples, 0.22%)</title><rect x="94.6616%" y="741" width="0.2157%" height="15" fill="rgb(247,87,16)" fg:x="3511" fg:w="8"/><text x="94.9116%" y="751.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="94.8504%" y="725" width="0.0270%" height="15" fill="rgb(234,129,42)" fg:x="3518" fg:w="1"/><text x="95.1004%" y="735.50"></text></g><g><title>cpuacct_charge (1 samples, 0.03%)</title><rect x="94.8504%" y="709" width="0.0270%" height="15" fill="rgb(220,82,16)" fg:x="3518" fg:w="1"/><text x="95.1004%" y="719.50"></text></g><g><title>reweight_entity (4 samples, 0.11%)</title><rect x="94.8773%" y="741" width="0.1078%" height="15" fill="rgb(211,88,4)" fg:x="3519" fg:w="4"/><text x="95.1273%" y="751.50"></text></g><g><title>update_curr (2 samples, 0.05%)</title><rect x="94.9312%" y="725" width="0.0539%" height="15" fill="rgb(248,151,21)" fg:x="3521" fg:w="2"/><text x="95.1812%" y="735.50"></text></g><g><title>__calc_delta.constprop.0 (1 samples, 0.03%)</title><rect x="94.9582%" y="709" width="0.0270%" height="15" fill="rgb(238,163,6)" fg:x="3522" fg:w="1"/><text x="95.2082%" y="719.50"></text></g><g><title>enqueue_task_fair (16 samples, 0.43%)</title><rect x="94.6077%" y="757" width="0.4314%" height="15" fill="rgb(209,183,11)" fg:x="3509" fg:w="16"/><text x="94.8577%" y="767.50"></text></g><g><title>update_load_avg (2 samples, 0.05%)</title><rect x="94.9852%" y="741" width="0.0539%" height="15" fill="rgb(219,37,20)" fg:x="3523" fg:w="2"/><text x="95.2352%" y="751.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="95.0121%" y="725" width="0.0270%" height="15" fill="rgb(210,158,4)" fg:x="3524" fg:w="1"/><text x="95.2621%" y="735.50"></text></g><g><title>ttwu_do_activate (25 samples, 0.67%)</title><rect x="94.5807%" y="789" width="0.6740%" height="15" fill="rgb(221,167,53)" fg:x="3508" fg:w="25"/><text x="94.8307%" y="799.50"></text></g><g><title>enqueue_task (25 samples, 0.67%)</title><rect x="94.5807%" y="773" width="0.6740%" height="15" fill="rgb(237,151,45)" fg:x="3508" fg:w="25"/><text x="94.8307%" y="783.50"></text></g><g><title>psi_task_change (8 samples, 0.22%)</title><rect x="95.0391%" y="757" width="0.2157%" height="15" fill="rgb(231,39,3)" fg:x="3525" fg:w="8"/><text x="95.2891%" y="767.50"></text></g><g><title>psi_group_change (8 samples, 0.22%)</title><rect x="95.0391%" y="741" width="0.2157%" height="15" fill="rgb(212,167,28)" fg:x="3525" fg:w="8"/><text x="95.2891%" y="751.50"></text></g><g><title>__x64_sys_futex (43 samples, 1.16%)</title><rect x="94.1494%" y="869" width="1.1593%" height="15" fill="rgb(232,178,8)" fg:x="3492" fg:w="43"/><text x="94.3994%" y="879.50"></text></g><g><title>do_futex (41 samples, 1.11%)</title><rect x="94.2033%" y="853" width="1.1054%" height="15" fill="rgb(225,151,20)" fg:x="3494" fg:w="41"/><text x="94.4533%" y="863.50"></text></g><g><title>futex_wake (40 samples, 1.08%)</title><rect x="94.2303%" y="837" width="1.0785%" height="15" fill="rgb(238,3,37)" fg:x="3495" fg:w="40"/><text x="94.4803%" y="847.50"></text></g><g><title>wake_up_q (35 samples, 0.94%)</title><rect x="94.3651%" y="821" width="0.9437%" height="15" fill="rgb(251,147,42)" fg:x="3500" fg:w="35"/><text x="94.6151%" y="831.50"></text></g><g><title>try_to_wake_up (35 samples, 0.94%)</title><rect x="94.3651%" y="805" width="0.9437%" height="15" fill="rgb(208,173,10)" fg:x="3500" fg:w="35"/><text x="94.6151%" y="815.50"></text></g><g><title>update_rq_clock (2 samples, 0.05%)</title><rect x="95.2548%" y="789" width="0.0539%" height="15" fill="rgb(246,225,4)" fg:x="3533" fg:w="2"/><text x="95.5048%" y="799.50"></text></g><g><title>update_irq_load_avg (2 samples, 0.05%)</title><rect x="95.2548%" y="773" width="0.0539%" height="15" fill="rgb(248,102,6)" fg:x="3533" fg:w="2"/><text x="95.5048%" y="783.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="95.3626%" y="773" width="0.0270%" height="15" fill="rgb(232,6,21)" fg:x="3537" fg:w="1"/><text x="95.6126%" y="783.50"></text></g><g><title>finish_task_switch.isra.0 (13 samples, 0.35%)</title><rect x="95.3357%" y="805" width="0.3505%" height="15" fill="rgb(221,179,22)" fg:x="3536" fg:w="13"/><text x="95.5857%" y="815.50"></text></g><g><title>__perf_event_task_sched_in (13 samples, 0.35%)</title><rect x="95.3357%" y="789" width="0.3505%" height="15" fill="rgb(252,50,20)" fg:x="3536" fg:w="13"/><text x="95.5857%" y="799.50"></text></g><g><title>perf_ctx_enable (11 samples, 0.30%)</title><rect x="95.3896%" y="773" width="0.2966%" height="15" fill="rgb(222,56,38)" fg:x="3538" fg:w="11"/><text x="95.6396%" y="783.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (11 samples, 0.30%)</title><rect x="95.3896%" y="757" width="0.2966%" height="15" fill="rgb(206,193,29)" fg:x="3538" fg:w="11"/><text x="95.6396%" y="767.50"></text></g><g><title>native_write_msr (11 samples, 0.30%)</title><rect x="95.3896%" y="741" width="0.2966%" height="15" fill="rgb(239,192,45)" fg:x="3538" fg:w="11"/><text x="95.6396%" y="751.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="95.6862%" y="805" width="0.0270%" height="15" fill="rgb(254,18,36)" fg:x="3549" fg:w="1"/><text x="95.9362%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (61 samples, 1.64%)</title><rect x="94.0954%" y="901" width="1.6446%" height="15" fill="rgb(221,127,11)" fg:x="3490" fg:w="61"/><text x="94.3454%" y="911.50"></text></g><g><title>do_syscall_64 (59 samples, 1.59%)</title><rect x="94.1494%" y="885" width="1.5907%" height="15" fill="rgb(234,146,35)" fg:x="3492" fg:w="59"/><text x="94.3994%" y="895.50"></text></g><g><title>syscall_exit_to_user_mode (16 samples, 0.43%)</title><rect x="95.3087%" y="869" width="0.4314%" height="15" fill="rgb(254,201,37)" fg:x="3535" fg:w="16"/><text x="95.5587%" y="879.50"></text></g><g><title>exit_to_user_mode_prepare (16 samples, 0.43%)</title><rect x="95.3087%" y="853" width="0.4314%" height="15" fill="rgb(211,202,23)" fg:x="3535" fg:w="16"/><text x="95.5587%" y="863.50"></text></g><g><title>schedule (16 samples, 0.43%)</title><rect x="95.3087%" y="837" width="0.4314%" height="15" fill="rgb(237,91,2)" fg:x="3535" fg:w="16"/><text x="95.5587%" y="847.50"></text></g><g><title>__schedule (16 samples, 0.43%)</title><rect x="95.3087%" y="821" width="0.4314%" height="15" fill="rgb(226,228,36)" fg:x="3535" fg:w="16"/><text x="95.5587%" y="831.50"></text></g><g><title>psi_task_switch (1 samples, 0.03%)</title><rect x="95.7131%" y="805" width="0.0270%" height="15" fill="rgb(213,63,50)" fg:x="3550" fg:w="1"/><text x="95.9631%" y="815.50"></text></g><g><title>psi_flags_change (1 samples, 0.03%)</title><rect x="95.7131%" y="789" width="0.0270%" height="15" fill="rgb(235,194,19)" fg:x="3550" fg:w="1"/><text x="95.9631%" y="799.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (3 samples, 0.08%)</title><rect x="95.7401%" y="901" width="0.0809%" height="15" fill="rgb(207,204,18)" fg:x="3551" fg:w="3"/><text x="95.9901%" y="911.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (74 samples, 2.00%)</title><rect x="93.9337%" y="933" width="1.9951%" height="15" fill="rgb(248,8,7)" fg:x="3484" fg:w="74"/><text x="94.1837%" y="943.50">p..</text></g><g><title>syscall (70 samples, 1.89%)</title><rect x="94.0415%" y="917" width="1.8873%" height="15" fill="rgb(223,145,47)" fg:x="3488" fg:w="70"/><text x="94.2915%" y="927.50">s..</text></g><g><title>syscall_return_via_sysret (4 samples, 0.11%)</title><rect x="95.8210%" y="901" width="0.1078%" height="15" fill="rgb(228,84,11)" fg:x="3554" fg:w="4"/><text x="96.0710%" y="911.50"></text></g><g><title>kvlr::connection::processor::write_processor::_{{closure}} (583 samples, 15.72%)</title><rect x="80.2373%" y="1061" width="15.7185%" height="15" fill="rgb(218,76,45)" fg:x="2976" fg:w="583"/><text x="80.4873%" y="1071.50">kvlr::connection::proces..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (75 samples, 2.02%)</title><rect x="93.9337%" y="1045" width="2.0221%" height="15" fill="rgb(223,80,15)" fg:x="3484" fg:w="75"/><text x="94.1837%" y="1055.50">t..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (75 samples, 2.02%)</title><rect x="93.9337%" y="1029" width="2.0221%" height="15" fill="rgb(219,218,33)" fg:x="3484" fg:w="75"/><text x="94.1837%" y="1039.50">t..</text></g><g><title>tokio::sync::oneshot::Task::with_task (75 samples, 2.02%)</title><rect x="93.9337%" y="1013" width="2.0221%" height="15" fill="rgb(208,51,11)" fg:x="3484" fg:w="75"/><text x="94.1837%" y="1023.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (75 samples, 2.02%)</title><rect x="93.9337%" y="997" width="2.0221%" height="15" fill="rgb(229,165,39)" fg:x="3484" fg:w="75"/><text x="94.1837%" y="1007.50">t..</text></g><g><title>tokio::sync::oneshot::Task::with_task::_{{closure}} (75 samples, 2.02%)</title><rect x="93.9337%" y="981" width="2.0221%" height="15" fill="rgb(241,100,24)" fg:x="3484" fg:w="75"/><text x="94.1837%" y="991.50">t..</text></g><g><title>core::ops::function::FnOnce::call_once (75 samples, 2.02%)</title><rect x="93.9337%" y="965" width="2.0221%" height="15" fill="rgb(228,14,23)" fg:x="3484" fg:w="75"/><text x="94.1837%" y="975.50">c..</text></g><g><title>core::task::wake::Waker::wake_by_ref (75 samples, 2.02%)</title><rect x="93.9337%" y="949" width="2.0221%" height="15" fill="rgb(247,116,52)" fg:x="3484" fg:w="75"/><text x="94.1837%" y="959.50">c..</text></g><g><title>tokio::runtime::park::wake_by_ref (1 samples, 0.03%)</title><rect x="95.9288%" y="933" width="0.0270%" height="15" fill="rgb(216,149,33)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="943.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (1 samples, 0.03%)</title><rect x="95.9288%" y="917" width="0.0270%" height="15" fill="rgb(238,142,29)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="927.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="95.9288%" y="901" width="0.0270%" height="15" fill="rgb(224,83,40)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="911.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.03%)</title><rect x="95.9288%" y="885" width="0.0270%" height="15" fill="rgb(234,165,11)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.03%)</title><rect x="95.9288%" y="869" width="0.0270%" height="15" fill="rgb(215,96,23)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="879.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.03%)</title><rect x="95.9288%" y="853" width="0.0270%" height="15" fill="rgb(233,179,26)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.03%)</title><rect x="95.9288%" y="837" width="0.0270%" height="15" fill="rgb(225,129,33)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="847.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (1 samples, 0.03%)</title><rect x="95.9288%" y="821" width="0.0270%" height="15" fill="rgb(237,49,13)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="831.50"></text></g><g><title>__sched_yield (1 samples, 0.03%)</title><rect x="95.9288%" y="805" width="0.0270%" height="15" fill="rgb(211,3,31)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="95.9288%" y="789" width="0.0270%" height="15" fill="rgb(216,152,19)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="799.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="95.9288%" y="773" width="0.0270%" height="15" fill="rgb(251,121,35)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="783.50"></text></g><g><title>__ia32_sys_sched_yield (1 samples, 0.03%)</title><rect x="95.9288%" y="757" width="0.0270%" height="15" fill="rgb(210,217,47)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="767.50"></text></g><g><title>do_sched_yield (1 samples, 0.03%)</title><rect x="95.9288%" y="741" width="0.0270%" height="15" fill="rgb(244,116,22)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="751.50"></text></g><g><title>yield_task_fair (1 samples, 0.03%)</title><rect x="95.9288%" y="725" width="0.0270%" height="15" fill="rgb(228,17,21)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="735.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="95.9288%" y="709" width="0.0270%" height="15" fill="rgb(240,149,34)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="719.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.03%)</title><rect x="95.9288%" y="693" width="0.0270%" height="15" fill="rgb(208,125,47)" fg:x="3558" fg:w="1"/><text x="96.1788%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (797 samples, 21.49%)</title><rect x="74.4945%" y="1205" width="21.4883%" height="15" fill="rgb(249,186,39)" fg:x="2763" fg:w="797"/><text x="74.7445%" y="1215.50">tokio::runtime::task::harness::pol..</text></g><g><title>std::panic::catch_unwind (794 samples, 21.41%)</title><rect x="74.5754%" y="1189" width="21.4074%" height="15" fill="rgb(240,220,33)" fg:x="2766" fg:w="794"/><text x="74.8254%" y="1199.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (794 samples, 21.41%)</title><rect x="74.5754%" y="1173" width="21.4074%" height="15" fill="rgb(243,110,23)" fg:x="2766" fg:w="794"/><text x="74.8254%" y="1183.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (794 samples, 21.41%)</title><rect x="74.5754%" y="1157" width="21.4074%" height="15" fill="rgb(219,163,46)" fg:x="2766" fg:w="794"/><text x="74.8254%" y="1167.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (794 samples, 21.41%)</title><rect x="74.5754%" y="1141" width="21.4074%" height="15" fill="rgb(216,126,30)" fg:x="2766" fg:w="794"/><text x="74.8254%" y="1151.50">&lt;core::panic::unwind_safe::AssertU..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (794 samples, 21.41%)</title><rect x="74.5754%" y="1125" width="21.4074%" height="15" fill="rgb(208,139,11)" fg:x="2766" fg:w="794"/><text x="74.8254%" y="1135.50">tokio::runtime::task::harness::pol..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (794 samples, 21.41%)</title><rect x="74.5754%" y="1109" width="21.4074%" height="15" fill="rgb(213,118,36)" fg:x="2766" fg:w="794"/><text x="74.8254%" y="1119.50">tokio::runtime::task::core::Core&lt;T..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (794 samples, 21.41%)</title><rect x="74.5754%" y="1093" width="21.4074%" height="15" fill="rgb(226,43,17)" fg:x="2766" fg:w="794"/><text x="74.8254%" y="1103.50">tokio::loom::std::unsafe_cell::Uns..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (794 samples, 21.41%)</title><rect x="74.5754%" y="1077" width="21.4074%" height="15" fill="rgb(254,217,4)" fg:x="2766" fg:w="794"/><text x="74.8254%" y="1087.50">tokio::runtime::task::core::Core&lt;T..</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.03%)</title><rect x="95.9558%" y="1061" width="0.0270%" height="15" fill="rgb(210,134,47)" fg:x="3559" fg:w="1"/><text x="96.2058%" y="1071.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.03%)</title><rect x="95.9558%" y="1045" width="0.0270%" height="15" fill="rgb(237,24,49)" fg:x="3559" fg:w="1"/><text x="96.2058%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="95.9558%" y="1029" width="0.0270%" height="15" fill="rgb(251,39,46)" fg:x="3559" fg:w="1"/><text x="96.2058%" y="1039.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (1 samples, 0.03%)</title><rect x="95.9558%" y="1013" width="0.0270%" height="15" fill="rgb(251,220,3)" fg:x="3559" fg:w="1"/><text x="96.2058%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="95.9558%" y="997" width="0.0270%" height="15" fill="rgb(228,105,12)" fg:x="3559" fg:w="1"/><text x="96.2058%" y="1007.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="95.9558%" y="981" width="0.0270%" height="15" fill="rgb(215,196,1)" fg:x="3559" fg:w="1"/><text x="96.2058%" y="991.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="95.9558%" y="965" width="0.0270%" height="15" fill="rgb(214,33,39)" fg:x="3559" fg:w="1"/><text x="96.2058%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (947 samples, 25.53%)</title><rect x="70.4772%" y="1253" width="25.5325%" height="15" fill="rgb(220,19,52)" fg:x="2614" fg:w="947"/><text x="70.7272%" y="1263.50">tokio::runtime::scheduler::multi_thread::..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (799 samples, 21.54%)</title><rect x="74.4675%" y="1237" width="21.5422%" height="15" fill="rgb(221,78,38)" fg:x="2762" fg:w="799"/><text x="74.7175%" y="1247.50">tokio::runtime::task::harness::Har..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (799 samples, 21.54%)</title><rect x="74.4675%" y="1221" width="21.5422%" height="15" fill="rgb(253,30,16)" fg:x="2762" fg:w="799"/><text x="74.7175%" y="1231.50">tokio::runtime::task::harness::Har..</text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (1 samples, 0.03%)</title><rect x="95.9827%" y="1205" width="0.0270%" height="15" fill="rgb(242,65,0)" fg:x="3560" fg:w="1"/><text x="96.2327%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.03%)</title><rect x="95.9827%" y="1189" width="0.0270%" height="15" fill="rgb(235,201,12)" fg:x="3560" fg:w="1"/><text x="96.2327%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (1 samples, 0.03%)</title><rect x="95.9827%" y="1173" width="0.0270%" height="15" fill="rgb(233,161,9)" fg:x="3560" fg:w="1"/><text x="96.2327%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_cancelled (1 samples, 0.03%)</title><rect x="95.9827%" y="1157" width="0.0270%" height="15" fill="rgb(241,207,41)" fg:x="3560" fg:w="1"/><text x="96.2327%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="96.0636%" y="1237" width="0.0270%" height="15" fill="rgb(212,69,46)" fg:x="3563" fg:w="1"/><text x="96.3136%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (1 samples, 0.03%)</title><rect x="96.0636%" y="1221" width="0.0270%" height="15" fill="rgb(239,69,45)" fg:x="3563" fg:w="1"/><text x="96.3136%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next (1 samples, 0.03%)</title><rect x="96.0636%" y="1205" width="0.0270%" height="15" fill="rgb(242,117,48)" fg:x="3563" fg:w="1"/><text x="96.3136%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="96.0636%" y="1189" width="0.0270%" height="15" fill="rgb(228,41,36)" fg:x="3563" fg:w="1"/><text x="96.3136%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next::_{{closure}} (1 samples, 0.03%)</title><rect x="96.0636%" y="1173" width="0.0270%" height="15" fill="rgb(212,3,32)" fg:x="3563" fg:w="1"/><text x="96.3136%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back (1 samples, 0.03%)</title><rect x="96.0906%" y="1237" width="0.0270%" height="15" fill="rgb(233,41,49)" fg:x="3564" fg:w="1"/><text x="96.3406%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU32::store (1 samples, 0.03%)</title><rect x="96.0906%" y="1221" width="0.0270%" height="15" fill="rgb(252,170,49)" fg:x="3564" fg:w="1"/><text x="96.3406%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (1 samples, 0.03%)</title><rect x="96.1176%" y="1237" width="0.0270%" height="15" fill="rgb(229,53,26)" fg:x="3565" fg:w="1"/><text x="96.3676%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.03%)</title><rect x="96.1176%" y="1221" width="0.0270%" height="15" fill="rgb(217,157,12)" fg:x="3565" fg:w="1"/><text x="96.3676%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (1 samples, 0.03%)</title><rect x="96.1176%" y="1205" width="0.0270%" height="15" fill="rgb(227,17,9)" fg:x="3565" fg:w="1"/><text x="96.3676%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="96.1176%" y="1189" width="0.0270%" height="15" fill="rgb(218,84,12)" fg:x="3565" fg:w="1"/><text x="96.3676%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (7 samples, 0.19%)</title><rect x="96.0097%" y="1253" width="0.1887%" height="15" fill="rgb(212,79,24)" fg:x="3561" fg:w="7"/><text x="96.2597%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (2 samples, 0.05%)</title><rect x="96.1445%" y="1237" width="0.0539%" height="15" fill="rgb(217,222,37)" fg:x="3566" fg:w="2"/><text x="96.3945%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (2 samples, 0.05%)</title><rect x="96.1445%" y="1221" width="0.0539%" height="15" fill="rgb(246,208,8)" fg:x="3566" fg:w="2"/><text x="96.3945%" y="1231.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="96.2793%" y="1237" width="0.0270%" height="15" fill="rgb(244,133,10)" fg:x="3571" fg:w="1"/><text x="96.5293%" y="1247.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="96.2793%" y="1221" width="0.0270%" height="15" fill="rgb(209,219,41)" fg:x="3571" fg:w="1"/><text x="96.5293%" y="1231.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="96.2793%" y="1205" width="0.0270%" height="15" fill="rgb(253,175,45)" fg:x="3571" fg:w="1"/><text x="96.5293%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.08%)</title><rect x="96.3063%" y="1205" width="0.0809%" height="15" fill="rgb(235,100,37)" fg:x="3572" fg:w="3"/><text x="96.5563%" y="1215.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3 samples, 0.08%)</title><rect x="96.3063%" y="1189" width="0.0809%" height="15" fill="rgb(225,87,19)" fg:x="3572" fg:w="3"/><text x="96.5563%" y="1199.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.08%)</title><rect x="96.3063%" y="1173" width="0.0809%" height="15" fill="rgb(217,152,17)" fg:x="3572" fg:w="3"/><text x="96.5563%" y="1183.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.03%)</title><rect x="96.3872%" y="1205" width="0.0270%" height="15" fill="rgb(235,72,13)" fg:x="3575" fg:w="1"/><text x="96.6372%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (8 samples, 0.22%)</title><rect x="96.3063%" y="1237" width="0.2157%" height="15" fill="rgb(233,140,18)" fg:x="3572" fg:w="8"/><text x="96.5563%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (8 samples, 0.22%)</title><rect x="96.3063%" y="1221" width="0.2157%" height="15" fill="rgb(207,212,28)" fg:x="3572" fg:w="8"/><text x="96.5563%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (4 samples, 0.11%)</title><rect x="96.4141%" y="1205" width="0.1078%" height="15" fill="rgb(220,130,25)" fg:x="3576" fg:w="4"/><text x="96.6641%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.11%)</title><rect x="96.4141%" y="1189" width="0.1078%" height="15" fill="rgb(205,55,34)" fg:x="3576" fg:w="4"/><text x="96.6641%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (1 samples, 0.03%)</title><rect x="96.5220%" y="1237" width="0.0270%" height="15" fill="rgb(237,54,35)" fg:x="3580" fg:w="1"/><text x="96.7720%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (1 samples, 0.03%)</title><rect x="96.5220%" y="1221" width="0.0270%" height="15" fill="rgb(208,67,23)" fg:x="3580" fg:w="1"/><text x="96.7720%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (1 samples, 0.03%)</title><rect x="96.5220%" y="1205" width="0.0270%" height="15" fill="rgb(206,207,50)" fg:x="3580" fg:w="1"/><text x="96.7720%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.03%)</title><rect x="96.5220%" y="1189" width="0.0270%" height="15" fill="rgb(213,211,42)" fg:x="3580" fg:w="1"/><text x="96.7720%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="96.5220%" y="1173" width="0.0270%" height="15" fill="rgb(252,197,50)" fg:x="3580" fg:w="1"/><text x="96.7720%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,515 samples, 40.85%)</title><rect x="55.7563%" y="1317" width="40.8466%" height="15" fill="rgb(251,211,41)" fg:x="2068" fg:w="1515"/><text x="56.0063%" y="1327.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1,515 samples, 40.85%)</title><rect x="55.7563%" y="1301" width="40.8466%" height="15" fill="rgb(229,211,5)" fg:x="2068" fg:w="1515"/><text x="56.0063%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,515 samples, 40.85%)</title><rect x="55.7563%" y="1285" width="40.8466%" height="15" fill="rgb(239,36,31)" fg:x="2068" fg:w="1515"/><text x="56.0063%" y="1295.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1,514 samples, 40.82%)</title><rect x="55.7832%" y="1269" width="40.8196%" height="15" fill="rgb(248,67,31)" fg:x="2069" fg:w="1514"/><text x="56.0332%" y="1279.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (15 samples, 0.40%)</title><rect x="96.1984%" y="1253" width="0.4044%" height="15" fill="rgb(249,55,44)" fg:x="3568" fg:w="15"/><text x="96.4484%" y="1263.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (2 samples, 0.05%)</title><rect x="96.5489%" y="1237" width="0.0539%" height="15" fill="rgb(216,82,12)" fg:x="3581" fg:w="2"/><text x="96.7989%" y="1247.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (2 samples, 0.05%)</title><rect x="96.5489%" y="1221" width="0.0539%" height="15" fill="rgb(242,174,1)" fg:x="3581" fg:w="2"/><text x="96.7989%" y="1231.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.05%)</title><rect x="96.6029%" y="997" width="0.0539%" height="15" fill="rgb(208,120,29)" fg:x="3583" fg:w="2"/><text x="96.8529%" y="1007.50"></text></g><g><title>__enqueue_entity (1 samples, 0.03%)</title><rect x="96.6568%" y="933" width="0.0270%" height="15" fill="rgb(221,105,43)" fg:x="3585" fg:w="1"/><text x="96.9068%" y="943.50"></text></g><g><title>enqueue_entity (2 samples, 0.05%)</title><rect x="96.6568%" y="949" width="0.0539%" height="15" fill="rgb(234,124,22)" fg:x="3585" fg:w="2"/><text x="96.9068%" y="959.50"></text></g><g><title>__rb_insert_augmented (1 samples, 0.03%)</title><rect x="96.6837%" y="933" width="0.0270%" height="15" fill="rgb(212,23,30)" fg:x="3586" fg:w="1"/><text x="96.9337%" y="943.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.13%)</title><rect x="96.6029%" y="1301" width="0.1348%" height="15" fill="rgb(219,122,53)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1311.50"></text></g><g><title>std::panicking::try (5 samples, 0.13%)</title><rect x="96.6029%" y="1285" width="0.1348%" height="15" fill="rgb(248,84,24)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.13%)</title><rect x="96.6029%" y="1269" width="0.1348%" height="15" fill="rgb(245,115,18)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.13%)</title><rect x="96.6029%" y="1253" width="0.1348%" height="15" fill="rgb(227,176,51)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.13%)</title><rect x="96.6029%" y="1237" width="0.1348%" height="15" fill="rgb(229,63,42)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::_{{closure}} (5 samples, 0.13%)</title><rect x="96.6029%" y="1221" width="0.1348%" height="15" fill="rgb(247,202,24)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (5 samples, 0.13%)</title><rect x="96.6029%" y="1205" width="0.1348%" height="15" fill="rgb(244,173,20)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (5 samples, 0.13%)</title><rect x="96.6029%" y="1189" width="0.1348%" height="15" fill="rgb(242,81,47)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join::_{{closure}} (5 samples, 0.13%)</title><rect x="96.6029%" y="1173" width="0.1348%" height="15" fill="rgb(231,185,54)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1183.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (5 samples, 0.13%)</title><rect x="96.6029%" y="1157" width="0.1348%" height="15" fill="rgb(243,55,32)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (5 samples, 0.13%)</title><rect x="96.6029%" y="1141" width="0.1348%" height="15" fill="rgb(208,167,19)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1151.50"></text></g><g><title>syscall (5 samples, 0.13%)</title><rect x="96.6029%" y="1125" width="0.1348%" height="15" fill="rgb(231,72,35)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1135.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.13%)</title><rect x="96.6029%" y="1109" width="0.1348%" height="15" fill="rgb(250,173,51)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1119.50"></text></g><g><title>do_syscall_64 (5 samples, 0.13%)</title><rect x="96.6029%" y="1093" width="0.1348%" height="15" fill="rgb(209,5,22)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1103.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.13%)</title><rect x="96.6029%" y="1077" width="0.1348%" height="15" fill="rgb(250,174,19)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1087.50"></text></g><g><title>do_futex (5 samples, 0.13%)</title><rect x="96.6029%" y="1061" width="0.1348%" height="15" fill="rgb(217,3,49)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1071.50"></text></g><g><title>futex_wake (5 samples, 0.13%)</title><rect x="96.6029%" y="1045" width="0.1348%" height="15" fill="rgb(218,225,5)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1055.50"></text></g><g><title>wake_up_q (5 samples, 0.13%)</title><rect x="96.6029%" y="1029" width="0.1348%" height="15" fill="rgb(236,89,11)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1039.50"></text></g><g><title>try_to_wake_up (5 samples, 0.13%)</title><rect x="96.6029%" y="1013" width="0.1348%" height="15" fill="rgb(206,33,28)" fg:x="3583" fg:w="5"/><text x="96.8529%" y="1023.50"></text></g><g><title>ttwu_do_activate (3 samples, 0.08%)</title><rect x="96.6568%" y="997" width="0.0809%" height="15" fill="rgb(241,56,42)" fg:x="3585" fg:w="3"/><text x="96.9068%" y="1007.50"></text></g><g><title>enqueue_task (3 samples, 0.08%)</title><rect x="96.6568%" y="981" width="0.0809%" height="15" fill="rgb(222,44,11)" fg:x="3585" fg:w="3"/><text x="96.9068%" y="991.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.08%)</title><rect x="96.6568%" y="965" width="0.0809%" height="15" fill="rgb(234,111,20)" fg:x="3585" fg:w="3"/><text x="96.9068%" y="975.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="96.7107%" y="949" width="0.0270%" height="15" fill="rgb(237,77,6)" fg:x="3587" fg:w="1"/><text x="96.9607%" y="959.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="96.7107%" y="933" width="0.0270%" height="15" fill="rgb(235,111,23)" fg:x="3587" fg:w="1"/><text x="96.9607%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (6 samples, 0.16%)</title><rect x="96.6029%" y="1317" width="0.1618%" height="15" fill="rgb(251,135,29)" fg:x="3583" fg:w="6"/><text x="96.8529%" y="1327.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (1 samples, 0.03%)</title><rect x="96.7377%" y="1301" width="0.0270%" height="15" fill="rgb(217,57,1)" fg:x="3588" fg:w="1"/><text x="96.9877%" y="1311.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.03%)</title><rect x="96.7377%" y="1285" width="0.0270%" height="15" fill="rgb(249,119,31)" fg:x="3588" fg:w="1"/><text x="96.9877%" y="1295.50"></text></g><g><title>__fdget_pos (1 samples, 0.03%)</title><rect x="96.8455%" y="997" width="0.0270%" height="15" fill="rgb(233,164,33)" fg:x="3592" fg:w="1"/><text x="97.0955%" y="1007.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="96.8455%" y="981" width="0.0270%" height="15" fill="rgb(250,217,43)" fg:x="3592" fg:w="1"/><text x="97.0955%" y="991.50"></text></g><g><title>dget_parent (1 samples, 0.03%)</title><rect x="96.8725%" y="965" width="0.0270%" height="15" fill="rgb(232,154,50)" fg:x="3593" fg:w="1"/><text x="97.1225%" y="975.50"></text></g><g><title>lockref_get_not_zero (1 samples, 0.03%)</title><rect x="96.8725%" y="949" width="0.0270%" height="15" fill="rgb(227,190,8)" fg:x="3593" fg:w="1"/><text x="97.1225%" y="959.50"></text></g><g><title>dput (1 samples, 0.03%)</title><rect x="96.8994%" y="965" width="0.0270%" height="15" fill="rgb(209,217,32)" fg:x="3594" fg:w="1"/><text x="97.1494%" y="975.50"></text></g><g><title>__cond_resched (1 samples, 0.03%)</title><rect x="96.8994%" y="949" width="0.0270%" height="15" fill="rgb(243,203,50)" fg:x="3594" fg:w="1"/><text x="97.1494%" y="959.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="96.8994%" y="933" width="0.0270%" height="15" fill="rgb(232,152,27)" fg:x="3594" fg:w="1"/><text x="97.1494%" y="943.50"></text></g><g><title>__fsnotify_parent (3 samples, 0.08%)</title><rect x="96.8725%" y="981" width="0.0809%" height="15" fill="rgb(240,34,29)" fg:x="3593" fg:w="3"/><text x="97.1225%" y="991.50"></text></g><g><title>fsnotify (1 samples, 0.03%)</title><rect x="96.9264%" y="965" width="0.0270%" height="15" fill="rgb(215,185,52)" fg:x="3595" fg:w="1"/><text x="97.1764%" y="975.50"></text></g><g><title>copy_page_to_iter (3 samples, 0.08%)</title><rect x="96.9803%" y="965" width="0.0809%" height="15" fill="rgb(240,89,49)" fg:x="3597" fg:w="3"/><text x="97.2303%" y="975.50"></text></g><g><title>_copy_to_iter (2 samples, 0.05%)</title><rect x="97.0073%" y="949" width="0.0539%" height="15" fill="rgb(225,12,52)" fg:x="3598" fg:w="2"/><text x="97.2573%" y="959.50"></text></g><g><title>copyout (2 samples, 0.05%)</title><rect x="97.0073%" y="933" width="0.0539%" height="15" fill="rgb(239,128,45)" fg:x="3598" fg:w="2"/><text x="97.2573%" y="943.50"></text></g><g><title>rep_movs_alternative (2 samples, 0.05%)</title><rect x="97.0073%" y="917" width="0.0539%" height="15" fill="rgb(211,78,47)" fg:x="3598" fg:w="2"/><text x="97.2573%" y="927.50"></text></g><g><title>xas_descend (1 samples, 0.03%)</title><rect x="97.0612%" y="917" width="0.0270%" height="15" fill="rgb(232,31,21)" fg:x="3600" fg:w="1"/><text x="97.3112%" y="927.50"></text></g><g><title>filemap_get_read_batch (3 samples, 0.08%)</title><rect x="97.0612%" y="949" width="0.0809%" height="15" fill="rgb(222,168,14)" fg:x="3600" fg:w="3"/><text x="97.3112%" y="959.50"></text></g><g><title>xas_load (3 samples, 0.08%)</title><rect x="97.0612%" y="933" width="0.0809%" height="15" fill="rgb(209,128,24)" fg:x="3600" fg:w="3"/><text x="97.3112%" y="943.50"></text></g><g><title>xas_start (2 samples, 0.05%)</title><rect x="97.0882%" y="917" width="0.0539%" height="15" fill="rgb(249,35,13)" fg:x="3601" fg:w="2"/><text x="97.3382%" y="927.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="97.1421%" y="901" width="0.0270%" height="15" fill="rgb(218,7,2)" fg:x="3603" fg:w="1"/><text x="97.3921%" y="911.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="97.1421%" y="885" width="0.0270%" height="15" fill="rgb(238,107,27)" fg:x="3603" fg:w="1"/><text x="97.3921%" y="895.50"></text></g><g><title>__filemap_add_folio (4 samples, 0.11%)</title><rect x="97.1421%" y="917" width="0.1078%" height="15" fill="rgb(217,88,38)" fg:x="3603" fg:w="4"/><text x="97.3921%" y="927.50"></text></g><g><title>xas_store (3 samples, 0.08%)</title><rect x="97.1690%" y="901" width="0.0809%" height="15" fill="rgb(230,207,0)" fg:x="3604" fg:w="3"/><text x="97.4190%" y="911.50"></text></g><g><title>workingset_update_node (2 samples, 0.05%)</title><rect x="97.1960%" y="885" width="0.0539%" height="15" fill="rgb(249,64,54)" fg:x="3605" fg:w="2"/><text x="97.4460%" y="895.50"></text></g><g><title>lru_add_fn (2 samples, 0.05%)</title><rect x="97.2499%" y="885" width="0.0539%" height="15" fill="rgb(231,7,11)" fg:x="3607" fg:w="2"/><text x="97.4999%" y="895.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.03%)</title><rect x="97.2769%" y="869" width="0.0270%" height="15" fill="rgb(205,149,21)" fg:x="3608" fg:w="1"/><text x="97.5269%" y="879.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="97.2769%" y="853" width="0.0270%" height="15" fill="rgb(215,126,34)" fg:x="3608" fg:w="1"/><text x="97.5269%" y="863.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="97.2769%" y="837" width="0.0270%" height="15" fill="rgb(241,132,45)" fg:x="3608" fg:w="1"/><text x="97.5269%" y="847.50"></text></g><g><title>folio_add_lru (3 samples, 0.08%)</title><rect x="97.2499%" y="917" width="0.0809%" height="15" fill="rgb(252,69,32)" fg:x="3607" fg:w="3"/><text x="97.4999%" y="927.50"></text></g><g><title>folio_batch_move_lru (3 samples, 0.08%)</title><rect x="97.2499%" y="901" width="0.0809%" height="15" fill="rgb(232,204,19)" fg:x="3607" fg:w="3"/><text x="97.4999%" y="911.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="97.3039%" y="885" width="0.0270%" height="15" fill="rgb(249,15,47)" fg:x="3609" fg:w="1"/><text x="97.5539%" y="895.50"></text></g><g><title>free_unref_page_list (1 samples, 0.03%)</title><rect x="97.3039%" y="869" width="0.0270%" height="15" fill="rgb(209,227,23)" fg:x="3609" fg:w="1"/><text x="97.5539%" y="879.50"></text></g><g><title>filemap_add_folio (8 samples, 0.22%)</title><rect x="97.1421%" y="933" width="0.2157%" height="15" fill="rgb(248,92,24)" fg:x="3603" fg:w="8"/><text x="97.3921%" y="943.50"></text></g><g><title>workingset_refault (1 samples, 0.03%)</title><rect x="97.3308%" y="917" width="0.0270%" height="15" fill="rgb(247,59,2)" fg:x="3610" fg:w="1"/><text x="97.5808%" y="927.50"></text></g><g><title>folio_alloc (3 samples, 0.08%)</title><rect x="97.3578%" y="933" width="0.0809%" height="15" fill="rgb(221,30,5)" fg:x="3611" fg:w="3"/><text x="97.6078%" y="943.50"></text></g><g><title>__alloc_pages (3 samples, 0.08%)</title><rect x="97.3578%" y="917" width="0.0809%" height="15" fill="rgb(208,108,53)" fg:x="3611" fg:w="3"/><text x="97.6078%" y="927.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.08%)</title><rect x="97.3578%" y="901" width="0.0809%" height="15" fill="rgb(211,183,26)" fg:x="3611" fg:w="3"/><text x="97.6078%" y="911.50"></text></g><g><title>clear_page_erms (2 samples, 0.05%)</title><rect x="97.3847%" y="885" width="0.0539%" height="15" fill="rgb(232,132,4)" fg:x="3612" fg:w="2"/><text x="97.6347%" y="895.50"></text></g><g><title>[[ext4]] (1 samples, 0.03%)</title><rect x="97.4387%" y="917" width="0.0270%" height="15" fill="rgb(253,128,37)" fg:x="3614" fg:w="1"/><text x="97.6887%" y="927.50"></text></g><g><title>submit_bio_noacct_nocheck (1 samples, 0.03%)</title><rect x="97.4387%" y="901" width="0.0270%" height="15" fill="rgb(221,58,24)" fg:x="3614" fg:w="1"/><text x="97.6887%" y="911.50"></text></g><g><title>__submit_bio (1 samples, 0.03%)</title><rect x="97.4387%" y="885" width="0.0270%" height="15" fill="rgb(230,54,45)" fg:x="3614" fg:w="1"/><text x="97.6887%" y="895.50"></text></g><g><title>blk_mq_submit_bio (1 samples, 0.03%)</title><rect x="97.4387%" y="869" width="0.0270%" height="15" fill="rgb(254,21,18)" fg:x="3614" fg:w="1"/><text x="97.6887%" y="879.50"></text></g><g><title>__bio_split_to_limits (1 samples, 0.03%)</title><rect x="97.4387%" y="853" width="0.0270%" height="15" fill="rgb(221,108,0)" fg:x="3614" fg:w="1"/><text x="97.6887%" y="863.50"></text></g><g><title>bio_split_rw (1 samples, 0.03%)</title><rect x="97.4387%" y="837" width="0.0270%" height="15" fill="rgb(206,95,1)" fg:x="3614" fg:w="1"/><text x="97.6887%" y="847.50"></text></g><g><title>filemap_read (20 samples, 0.54%)</title><rect x="96.9534%" y="981" width="0.5392%" height="15" fill="rgb(237,52,5)" fg:x="3596" fg:w="20"/><text x="97.2034%" y="991.50"></text></g><g><title>filemap_get_pages (16 samples, 0.43%)</title><rect x="97.0612%" y="965" width="0.4314%" height="15" fill="rgb(218,150,34)" fg:x="3600" fg:w="16"/><text x="97.3112%" y="975.50"></text></g><g><title>page_cache_ra_unbounded (13 samples, 0.35%)</title><rect x="97.1421%" y="949" width="0.3505%" height="15" fill="rgb(235,194,28)" fg:x="3603" fg:w="13"/><text x="97.3921%" y="959.50"></text></g><g><title>read_pages (2 samples, 0.05%)</title><rect x="97.4387%" y="933" width="0.0539%" height="15" fill="rgb(245,92,18)" fg:x="3614" fg:w="2"/><text x="97.6887%" y="943.50"></text></g><g><title>blk_finish_plug (1 samples, 0.03%)</title><rect x="97.4656%" y="917" width="0.0270%" height="15" fill="rgb(253,203,53)" fg:x="3615" fg:w="1"/><text x="97.7156%" y="927.50"></text></g><g><title>__blk_flush_plug (1 samples, 0.03%)</title><rect x="97.4656%" y="901" width="0.0270%" height="15" fill="rgb(249,185,47)" fg:x="3615" fg:w="1"/><text x="97.7156%" y="911.50"></text></g><g><title>blk_mq_flush_plug_list.part.0 (1 samples, 0.03%)</title><rect x="97.4656%" y="885" width="0.0270%" height="15" fill="rgb(252,194,52)" fg:x="3615" fg:w="1"/><text x="97.7156%" y="895.50"></text></g><g><title>blk_mq_run_hw_queue (1 samples, 0.03%)</title><rect x="97.4656%" y="869" width="0.0270%" height="15" fill="rgb(210,53,36)" fg:x="3615" fg:w="1"/><text x="97.7156%" y="879.50"></text></g><g><title>blk_mq_sched_dispatch_requests (1 samples, 0.03%)</title><rect x="97.4656%" y="853" width="0.0270%" height="15" fill="rgb(237,37,25)" fg:x="3615" fg:w="1"/><text x="97.7156%" y="863.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (1 samples, 0.03%)</title><rect x="97.4656%" y="837" width="0.0270%" height="15" fill="rgb(242,116,27)" fg:x="3615" fg:w="1"/><text x="97.7156%" y="847.50"></text></g><g><title>blk_mq_dispatch_rq_list (1 samples, 0.03%)</title><rect x="97.4656%" y="821" width="0.0270%" height="15" fill="rgb(213,185,26)" fg:x="3615" fg:w="1"/><text x="97.7156%" y="831.50"></text></g><g><title>scsi_queue_rq (1 samples, 0.03%)</title><rect x="97.4656%" y="805" width="0.0270%" height="15" fill="rgb(225,204,8)" fg:x="3615" fg:w="1"/><text x="97.7156%" y="815.50"></text></g><g><title>ata_scsi_queuecmd (1 samples, 0.03%)</title><rect x="97.4656%" y="789" width="0.0270%" height="15" fill="rgb(254,111,37)" fg:x="3615" fg:w="1"/><text x="97.7156%" y="799.50"></text></g><g><title>fsnotify_perm.part.0 (2 samples, 0.05%)</title><rect x="97.4926%" y="981" width="0.0539%" height="15" fill="rgb(242,35,9)" fg:x="3616" fg:w="2"/><text x="97.7426%" y="991.50"></text></g><g><title>ksys_read (28 samples, 0.75%)</title><rect x="96.8185%" y="1013" width="0.7549%" height="15" fill="rgb(232,138,49)" fg:x="3591" fg:w="28"/><text x="97.0685%" y="1023.50"></text></g><g><title>vfs_read (26 samples, 0.70%)</title><rect x="96.8725%" y="997" width="0.7010%" height="15" fill="rgb(247,56,4)" fg:x="3593" fg:w="26"/><text x="97.1225%" y="1007.50"></text></g><g><title>security_file_permission (1 samples, 0.03%)</title><rect x="97.5465%" y="981" width="0.0270%" height="15" fill="rgb(226,179,17)" fg:x="3618" fg:w="1"/><text x="97.7965%" y="991.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="97.5465%" y="965" width="0.0270%" height="15" fill="rgb(216,163,45)" fg:x="3618" fg:w="1"/><text x="97.7965%" y="975.50"></text></g><g><title>entry_SYSCALL_64 (29 samples, 0.78%)</title><rect x="96.8185%" y="1045" width="0.7819%" height="15" fill="rgb(211,157,3)" fg:x="3591" fg:w="29"/><text x="97.0685%" y="1055.50"></text></g><g><title>do_syscall_64 (29 samples, 0.78%)</title><rect x="96.8185%" y="1029" width="0.7819%" height="15" fill="rgb(234,44,20)" fg:x="3591" fg:w="29"/><text x="97.0685%" y="1039.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="97.5735%" y="1013" width="0.0270%" height="15" fill="rgb(254,138,23)" fg:x="3619" fg:w="1"/><text x="97.8235%" y="1023.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="97.5735%" y="997" width="0.0270%" height="15" fill="rgb(206,119,39)" fg:x="3619" fg:w="1"/><text x="97.8235%" y="1007.50"></text></g><g><title>read (31 samples, 0.84%)</title><rect x="96.7916%" y="1061" width="0.8358%" height="15" fill="rgb(231,105,52)" fg:x="3590" fg:w="31"/><text x="97.0416%" y="1071.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.03%)</title><rect x="97.6004%" y="1045" width="0.0270%" height="15" fill="rgb(250,20,5)" fg:x="3620" fg:w="1"/><text x="97.8504%" y="1055.50"></text></g><g><title>[libc.so.6] (1,602 samples, 43.19%)</title><rect x="54.4621%" y="1429" width="43.1922%" height="15" fill="rgb(215,198,30)" fg:x="2020" fg:w="1602"/><text x="54.7121%" y="1439.50">[libc.so.6]</text></g><g><title>[libc.so.6] (1,602 samples, 43.19%)</title><rect x="54.4621%" y="1413" width="43.1922%" height="15" fill="rgb(246,142,8)" fg:x="2020" fg:w="1602"/><text x="54.7121%" y="1423.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (1,601 samples, 43.17%)</title><rect x="54.4891%" y="1397" width="43.1653%" height="15" fill="rgb(243,26,38)" fg:x="2021" fg:w="1601"/><text x="54.7391%" y="1407.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,601 samples, 43.17%)</title><rect x="54.4891%" y="1381" width="43.1653%" height="15" fill="rgb(205,133,28)" fg:x="2021" fg:w="1601"/><text x="54.7391%" y="1391.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,601 samples, 43.17%)</title><rect x="54.4891%" y="1365" width="43.1653%" height="15" fill="rgb(212,34,0)" fg:x="2021" fg:w="1601"/><text x="54.7391%" y="1375.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1,601 samples, 43.17%)</title><rect x="54.4891%" y="1349" width="43.1653%" height="15" fill="rgb(251,226,22)" fg:x="2021" fg:w="1601"/><text x="54.7391%" y="1359.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,554 samples, 41.90%)</title><rect x="55.7563%" y="1333" width="41.8981%" height="15" fill="rgb(252,119,9)" fg:x="2068" fg:w="1554"/><text x="56.0063%" y="1343.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (33 samples, 0.89%)</title><rect x="96.7646%" y="1317" width="0.8897%" height="15" fill="rgb(213,150,50)" fg:x="3589" fg:w="33"/><text x="97.0146%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (32 samples, 0.86%)</title><rect x="96.7916%" y="1301" width="0.8628%" height="15" fill="rgb(212,24,39)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.86%)</title><rect x="96.7916%" y="1285" width="0.8628%" height="15" fill="rgb(213,46,39)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1295.50"></text></g><g><title>std::panicking::try (32 samples, 0.86%)</title><rect x="96.7916%" y="1269" width="0.8628%" height="15" fill="rgb(239,106,12)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.86%)</title><rect x="96.7916%" y="1253" width="0.8628%" height="15" fill="rgb(249,229,21)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1263.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.86%)</title><rect x="96.7916%" y="1237" width="0.8628%" height="15" fill="rgb(212,158,3)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (32 samples, 0.86%)</title><rect x="96.7916%" y="1221" width="0.8628%" height="15" fill="rgb(253,26,48)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (32 samples, 0.86%)</title><rect x="96.7916%" y="1205" width="0.8628%" height="15" fill="rgb(238,178,20)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (32 samples, 0.86%)</title><rect x="96.7916%" y="1189" width="0.8628%" height="15" fill="rgb(208,86,15)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (32 samples, 0.86%)</title><rect x="96.7916%" y="1173" width="0.8628%" height="15" fill="rgb(239,42,53)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1183.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.86%)</title><rect x="96.7916%" y="1157" width="0.8628%" height="15" fill="rgb(245,226,8)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1167.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (32 samples, 0.86%)</title><rect x="96.7916%" y="1141" width="0.8628%" height="15" fill="rgb(216,176,32)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1151.50"></text></g><g><title>tokio::io::blocking::Buf::read_from (32 samples, 0.86%)</title><rect x="96.7916%" y="1125" width="0.8628%" height="15" fill="rgb(231,186,21)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1135.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (32 samples, 0.86%)</title><rect x="96.7916%" y="1109" width="0.8628%" height="15" fill="rgb(205,95,49)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1119.50"></text></g><g><title>std::sys::pal::unix::fs::File::read (32 samples, 0.86%)</title><rect x="96.7916%" y="1093" width="0.8628%" height="15" fill="rgb(217,145,8)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1103.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read (32 samples, 0.86%)</title><rect x="96.7916%" y="1077" width="0.8628%" height="15" fill="rgb(239,144,48)" fg:x="3590" fg:w="32"/><text x="97.0416%" y="1087.50"></text></g><g><title>std::sys::pal::unix::cvt (1 samples, 0.03%)</title><rect x="97.6274%" y="1061" width="0.0270%" height="15" fill="rgb(214,189,23)" fg:x="3621" fg:w="1"/><text x="97.8774%" y="1071.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.03%)</title><rect x="97.6274%" y="1045" width="0.0270%" height="15" fill="rgb(229,157,17)" fg:x="3621" fg:w="1"/><text x="97.8774%" y="1055.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.05%)</title><rect x="97.6544%" y="1413" width="0.0539%" height="15" fill="rgb(230,5,48)" fg:x="3622" fg:w="2"/><text x="97.9044%" y="1423.50"></text></g><g><title>&lt;rustls::crypto::ring::tls13::Tls13MessageDecrypter as rustls::crypto::cipher::MessageDecrypter&gt;::decrypt (2 samples, 0.05%)</title><rect x="97.7083%" y="1413" width="0.0539%" height="15" fill="rgb(224,156,48)" fg:x="3624" fg:w="2"/><text x="97.9583%" y="1423.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::open_in_place (1 samples, 0.03%)</title><rect x="97.7352%" y="1397" width="0.0270%" height="15" fill="rgb(223,14,29)" fg:x="3625" fg:w="1"/><text x="97.9852%" y="1407.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::open_within (1 samples, 0.03%)</title><rect x="97.7352%" y="1381" width="0.0270%" height="15" fill="rgb(229,96,36)" fg:x="3625" fg:w="1"/><text x="97.9852%" y="1391.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::open_in_place_separate_tag (1 samples, 0.03%)</title><rect x="97.7352%" y="1365" width="0.0270%" height="15" fill="rgb(231,102,53)" fg:x="3625" fg:w="1"/><text x="97.9852%" y="1375.50"></text></g><g><title>&lt;rustls::crypto::ring::tls13::Tls13MessageEncrypter as rustls::crypto::cipher::MessageEncrypter&gt;::encrypt (1 samples, 0.03%)</title><rect x="97.7622%" y="1413" width="0.0270%" height="15" fill="rgb(210,77,38)" fg:x="3626" fg:w="1"/><text x="98.0122%" y="1423.50"></text></g><g><title>&lt;rustls::msgs::message::Message as core::convert::TryFrom&lt;rustls::msgs::message::inbound::InboundPlainMessage&gt;&gt;::try_from (1 samples, 0.03%)</title><rect x="97.7892%" y="1413" width="0.0270%" height="15" fill="rgb(235,131,6)" fg:x="3627" fg:w="1"/><text x="98.0392%" y="1423.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (2 samples, 0.05%)</title><rect x="97.8161%" y="1413" width="0.0539%" height="15" fill="rgb(252,55,38)" fg:x="3628" fg:w="2"/><text x="98.0661%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.8700%" y="1413" width="0.0270%" height="15" fill="rgb(246,38,14)" fg:x="3630" fg:w="1"/><text x="98.1200%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;kvlr::rpc::protocol_handler::RpcProtocolHandler as kvlr::connection::protocol_handler::ProtocolHandler&gt;::handle_frame::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="97.8970%" y="1413" width="0.0270%" height="15" fill="rgb(242,27,5)" fg:x="3631" fg:w="1"/><text x="98.1470%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}}&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="97.9240%" y="1413" width="0.0270%" height="15" fill="rgb(228,65,35)" fg:x="3632" fg:w="1"/><text x="98.1740%" y="1423.50"></text></g><g><title>core::str::converts::from_utf8 (3 samples, 0.08%)</title><rect x="97.9509%" y="1413" width="0.0809%" height="15" fill="rgb(245,93,11)" fg:x="3633" fg:w="3"/><text x="98.2009%" y="1423.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (1 samples, 0.03%)</title><rect x="98.0318%" y="1413" width="0.0270%" height="15" fill="rgb(213,1,31)" fg:x="3636" fg:w="1"/><text x="98.2818%" y="1423.50"></text></g><g><title>epoll_wait (1 samples, 0.03%)</title><rect x="98.0318%" y="1397" width="0.0270%" height="15" fill="rgb(237,205,14)" fg:x="3636" fg:w="1"/><text x="98.2818%" y="1407.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="98.0318%" y="1381" width="0.0270%" height="15" fill="rgb(232,118,45)" fg:x="3636" fg:w="1"/><text x="98.2818%" y="1391.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.08%)</title><rect x="98.0588%" y="1413" width="0.0809%" height="15" fill="rgb(218,5,6)" fg:x="3637" fg:w="3"/><text x="98.3088%" y="1423.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="98.1127%" y="1397" width="0.0270%" height="15" fill="rgb(251,87,51)" fg:x="3639" fg:w="1"/><text x="98.3627%" y="1407.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="98.1127%" y="1381" width="0.0270%" height="15" fill="rgb(207,225,20)" fg:x="3639" fg:w="1"/><text x="98.3627%" y="1391.50"></text></g><g><title>recv (2 samples, 0.05%)</title><rect x="98.1397%" y="1413" width="0.0539%" height="15" fill="rgb(222,78,54)" fg:x="3640" fg:w="2"/><text x="98.3897%" y="1423.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.05%)</title><rect x="98.1397%" y="1397" width="0.0539%" height="15" fill="rgb(232,85,16)" fg:x="3640" fg:w="2"/><text x="98.3897%" y="1407.50"></text></g><g><title>ring::aead::gcm::Context::pre_finish (1 samples, 0.03%)</title><rect x="98.1936%" y="1413" width="0.0270%" height="15" fill="rgb(244,25,33)" fg:x="3642" fg:w="1"/><text x="98.4436%" y="1423.50"></text></g><g><title>ring::aead::less_safe_key::open_within_ (1 samples, 0.03%)</title><rect x="98.2205%" y="1413" width="0.0270%" height="15" fill="rgb(233,24,36)" fg:x="3643" fg:w="1"/><text x="98.4705%" y="1423.50"></text></g><g><title>rustls::msgs::message::MessagePayload::new (3 samples, 0.08%)</title><rect x="98.2475%" y="1413" width="0.0809%" height="15" fill="rgb(253,49,54)" fg:x="3644" fg:w="3"/><text x="98.4975%" y="1423.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="98.3284%" y="1413" width="0.0270%" height="15" fill="rgb(245,12,22)" fg:x="3647" fg:w="1"/><text x="98.5784%" y="1423.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="98.3554%" y="1413" width="0.0270%" height="15" fill="rgb(253,141,28)" fg:x="3648" fg:w="1"/><text x="98.6054%" y="1423.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (1 samples, 0.03%)</title><rect x="98.3823%" y="1413" width="0.0270%" height="15" fill="rgb(225,207,27)" fg:x="3649" fg:w="1"/><text x="98.6323%" y="1423.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.03%)</title><rect x="98.4093%" y="1413" width="0.0270%" height="15" fill="rgb(220,84,2)" fg:x="3650" fg:w="1"/><text x="98.6593%" y="1423.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.03%)</title><rect x="98.4362%" y="1413" width="0.0270%" height="15" fill="rgb(224,37,37)" fg:x="3651" fg:w="1"/><text x="98.6862%" y="1423.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (2 samples, 0.05%)</title><rect x="98.4632%" y="1413" width="0.0539%" height="15" fill="rgb(220,143,18)" fg:x="3652" fg:w="2"/><text x="98.7132%" y="1423.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (2 samples, 0.05%)</title><rect x="98.4632%" y="1397" width="0.0539%" height="15" fill="rgb(210,88,33)" fg:x="3652" fg:w="2"/><text x="98.7132%" y="1407.50"></text></g><g><title>core::task::wake::Waker::wake (2 samples, 0.05%)</title><rect x="98.4632%" y="1381" width="0.0539%" height="15" fill="rgb(219,87,51)" fg:x="3652" fg:w="2"/><text x="98.7132%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::defer (1 samples, 0.03%)</title><rect x="98.5171%" y="1413" width="0.0270%" height="15" fill="rgb(211,7,35)" fg:x="3654" fg:w="1"/><text x="98.7671%" y="1423.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.03%)</title><rect x="98.5171%" y="1397" width="0.0270%" height="15" fill="rgb(232,77,2)" fg:x="3654" fg:w="1"/><text x="98.7671%" y="1407.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.03%)</title><rect x="98.5171%" y="1381" width="0.0270%" height="15" fill="rgb(249,94,25)" fg:x="3654" fg:w="1"/><text x="98.7671%" y="1391.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.03%)</title><rect x="98.5171%" y="1365" width="0.0270%" height="15" fill="rgb(215,112,2)" fg:x="3654" fg:w="1"/><text x="98.7671%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (1 samples, 0.03%)</title><rect x="98.5441%" y="1413" width="0.0270%" height="15" fill="rgb(226,115,48)" fg:x="3655" fg:w="1"/><text x="98.7941%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="98.5441%" y="1397" width="0.0270%" height="15" fill="rgb(249,196,10)" fg:x="3655" fg:w="1"/><text x="98.7941%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="98.5441%" y="1381" width="0.0270%" height="15" fill="rgb(237,109,14)" fg:x="3655" fg:w="1"/><text x="98.7941%" y="1391.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="98.5441%" y="1365" width="0.0270%" height="15" fill="rgb(217,103,53)" fg:x="3655" fg:w="1"/><text x="98.7941%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 0.03%)</title><rect x="98.5710%" y="1413" width="0.0270%" height="15" fill="rgb(244,137,9)" fg:x="3656" fg:w="1"/><text x="98.8210%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="98.5710%" y="1397" width="0.0270%" height="15" fill="rgb(227,201,3)" fg:x="3656" fg:w="1"/><text x="98.8210%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="98.5710%" y="1381" width="0.0270%" height="15" fill="rgb(243,94,6)" fg:x="3656" fg:w="1"/><text x="98.8210%" y="1391.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="98.5710%" y="1365" width="0.0270%" height="15" fill="rgb(235,118,5)" fg:x="3656" fg:w="1"/><text x="98.8210%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1 samples, 0.03%)</title><rect x="98.5980%" y="1413" width="0.0270%" height="15" fill="rgb(247,10,30)" fg:x="3657" fg:w="1"/><text x="98.8480%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (1 samples, 0.03%)</title><rect x="98.5980%" y="1397" width="0.0270%" height="15" fill="rgb(205,26,28)" fg:x="3657" fg:w="1"/><text x="98.8480%" y="1407.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (3 samples, 0.08%)</title><rect x="98.6250%" y="1413" width="0.0809%" height="15" fill="rgb(206,99,35)" fg:x="3658" fg:w="3"/><text x="98.8750%" y="1423.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (1 samples, 0.03%)</title><rect x="98.6789%" y="1397" width="0.0270%" height="15" fill="rgb(238,130,40)" fg:x="3660" fg:w="1"/><text x="98.9289%" y="1407.50"></text></g><g><title>tokio::time::clock::Clock::now (1 samples, 0.03%)</title><rect x="98.6789%" y="1381" width="0.0270%" height="15" fill="rgb(224,126,31)" fg:x="3660" fg:w="1"/><text x="98.9289%" y="1391.50"></text></g><g><title>tokio::time::clock::now (1 samples, 0.03%)</title><rect x="98.6789%" y="1365" width="0.0270%" height="15" fill="rgb(254,105,17)" fg:x="3660" fg:w="1"/><text x="98.9289%" y="1375.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (1 samples, 0.03%)</title><rect x="98.7059%" y="1413" width="0.0270%" height="15" fill="rgb(216,87,36)" fg:x="3661" fg:w="1"/><text x="98.9559%" y="1423.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.03%)</title><rect x="98.7328%" y="1413" width="0.0270%" height="15" fill="rgb(240,21,12)" fg:x="3662" fg:w="1"/><text x="98.9828%" y="1423.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (1 samples, 0.03%)</title><rect x="98.7328%" y="1397" width="0.0270%" height="15" fill="rgb(245,192,34)" fg:x="3662" fg:w="1"/><text x="98.9828%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="98.7328%" y="1381" width="0.0270%" height="15" fill="rgb(226,100,49)" fg:x="3662" fg:w="1"/><text x="98.9828%" y="1391.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.03%)</title><rect x="98.7598%" y="1413" width="0.0270%" height="15" fill="rgb(245,188,27)" fg:x="3663" fg:w="1"/><text x="99.0098%" y="1423.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (1 samples, 0.03%)</title><rect x="98.7867%" y="1413" width="0.0270%" height="15" fill="rgb(212,170,8)" fg:x="3664" fg:w="1"/><text x="99.0367%" y="1423.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (2 samples, 0.05%)</title><rect x="98.8137%" y="1413" width="0.0539%" height="15" fill="rgb(217,113,29)" fg:x="3665" fg:w="2"/><text x="99.0637%" y="1423.50"></text></g><g><title>[unknown] (46 samples, 1.24%)</title><rect x="97.6544%" y="1429" width="1.2402%" height="15" fill="rgb(237,30,3)" fg:x="3622" fg:w="46"/><text x="97.9044%" y="1439.50"></text></g><g><title>writev (1 samples, 0.03%)</title><rect x="98.8676%" y="1413" width="0.0270%" height="15" fill="rgb(227,19,28)" fg:x="3667" fg:w="1"/><text x="99.1176%" y="1423.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="98.8676%" y="1397" width="0.0270%" height="15" fill="rgb(239,172,45)" fg:x="3667" fg:w="1"/><text x="99.1176%" y="1407.50"></text></g><g><title>__floattidf (1 samples, 0.03%)</title><rect x="98.8946%" y="1429" width="0.0270%" height="15" fill="rgb(254,55,39)" fg:x="3668" fg:w="1"/><text x="99.1446%" y="1439.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="98.9215%" y="1429" width="0.0270%" height="15" fill="rgb(249,208,12)" fg:x="3669" fg:w="1"/><text x="99.1715%" y="1439.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.03%)</title><rect x="98.9485%" y="1429" width="0.0270%" height="15" fill="rgb(240,52,13)" fg:x="3670" fg:w="1"/><text x="99.1985%" y="1439.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::get_mut_unchecked (1 samples, 0.03%)</title><rect x="98.9485%" y="1413" width="0.0270%" height="15" fill="rgb(252,149,13)" fg:x="3670" fg:w="1"/><text x="99.1985%" y="1423.50"></text></g><g><title>anon.2dca3f5cc533716e95aad7de71b8cfd4.45.llvm.12286753630571376302 (1 samples, 0.03%)</title><rect x="98.9755%" y="1429" width="0.0270%" height="15" fill="rgb(232,81,48)" fg:x="3671" fg:w="1"/><text x="99.2255%" y="1439.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.03%)</title><rect x="98.9755%" y="1413" width="0.0270%" height="15" fill="rgb(222,144,2)" fg:x="3671" fg:w="1"/><text x="99.2255%" y="1423.50"></text></g><g><title>anon.2dca3f5cc533716e95aad7de71b8cfd4.48.llvm.12286753630571376302 (1 samples, 0.03%)</title><rect x="99.0024%" y="1429" width="0.0270%" height="15" fill="rgb(216,81,32)" fg:x="3672" fg:w="1"/><text x="99.2524%" y="1439.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.03%)</title><rect x="99.0024%" y="1413" width="0.0270%" height="15" fill="rgb(244,78,51)" fg:x="3672" fg:w="1"/><text x="99.2524%" y="1423.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.08%)</title><rect x="99.0294%" y="1429" width="0.0809%" height="15" fill="rgb(217,66,21)" fg:x="3673" fg:w="3"/><text x="99.2794%" y="1439.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadU32&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="99.1642%" y="1397" width="0.0270%" height="15" fill="rgb(247,101,42)" fg:x="3678" fg:w="1"/><text x="99.4142%" y="1407.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.03%)</title><rect x="99.1642%" y="1381" width="0.0270%" height="15" fill="rgb(227,81,39)" fg:x="3678" fg:w="1"/><text x="99.4142%" y="1391.50"></text></g><g><title>kvlr::connection::processor::read_processor::_{{closure}} (4 samples, 0.11%)</title><rect x="99.1103%" y="1429" width="0.1078%" height="15" fill="rgb(220,223,44)" fg:x="3676" fg:w="4"/><text x="99.3603%" y="1439.50"></text></g><g><title>kvlr::connection::frame::Frame::read_from_stream::_{{closure}} (2 samples, 0.05%)</title><rect x="99.1642%" y="1413" width="0.0539%" height="15" fill="rgb(205,218,2)" fg:x="3678" fg:w="2"/><text x="99.4142%" y="1423.50"></text></g><g><title>alloc::string::String::from_utf8 (1 samples, 0.03%)</title><rect x="99.1912%" y="1397" width="0.0270%" height="15" fill="rgb(212,207,28)" fg:x="3679" fg:w="1"/><text x="99.4412%" y="1407.50"></text></g><g><title>kvlr::connection::processor::write_processor::_{{closure}} (1 samples, 0.03%)</title><rect x="99.2181%" y="1429" width="0.0270%" height="15" fill="rgb(224,12,41)" fg:x="3680" fg:w="1"/><text x="99.4681%" y="1439.50"></text></g><g><title>kvlr::connection::processor::write_and_flush::_{{closure}} (1 samples, 0.03%)</title><rect x="99.2181%" y="1413" width="0.0270%" height="15" fill="rgb(216,118,12)" fg:x="3680" fg:w="1"/><text x="99.4681%" y="1423.50"></text></g><g><title>&lt;tokio::io::util::flush::Flush&lt;A&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="99.2181%" y="1397" width="0.0270%" height="15" fill="rgb(252,97,46)" fg:x="3680" fg:w="1"/><text x="99.4681%" y="1407.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.03%)</title><rect x="99.2181%" y="1381" width="0.0270%" height="15" fill="rgb(244,206,19)" fg:x="3680" fg:w="1"/><text x="99.4681%" y="1391.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.03%)</title><rect x="99.2181%" y="1365" width="0.0270%" height="15" fill="rgb(231,84,31)" fg:x="3680" fg:w="1"/><text x="99.4681%" y="1375.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.03%)</title><rect x="99.2451%" y="1429" width="0.0270%" height="15" fill="rgb(244,133,0)" fg:x="3681" fg:w="1"/><text x="99.4951%" y="1439.50"></text></g><g><title>rmp_serde::decode::Deserializer&lt;R,C&gt;::any_inner (1 samples, 0.03%)</title><rect x="99.2720%" y="1429" width="0.0270%" height="15" fill="rgb(223,15,50)" fg:x="3682" fg:w="1"/><text x="99.5220%" y="1439.50"></text></g><g><title>rmp_serde::decode::any_num (1 samples, 0.03%)</title><rect x="99.2990%" y="1429" width="0.0270%" height="15" fill="rgb(250,118,49)" fg:x="3683" fg:w="1"/><text x="99.5490%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;alloc::boxed::Box&lt;dyn rustls::common_state::State&lt;rustls::client::client_conn::ClientConnectionData&gt;&gt;,rustls::error::Error&gt;&gt; (1 samples, 0.03%)</title><rect x="99.3529%" y="1413" width="0.0270%" height="15" fill="rgb(248,25,38)" fg:x="3685" fg:w="1"/><text x="99.6029%" y="1423.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::deframe (1 samples, 0.03%)</title><rect x="99.3799%" y="1413" width="0.0270%" height="15" fill="rgb(215,70,14)" fg:x="3686" fg:w="1"/><text x="99.6299%" y="1423.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_new_packets (5 samples, 0.13%)</title><rect x="99.3260%" y="1429" width="0.1348%" height="15" fill="rgb(215,28,15)" fg:x="3684" fg:w="5"/><text x="99.5760%" y="1439.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_msg (2 samples, 0.05%)</title><rect x="99.4068%" y="1413" width="0.0539%" height="15" fill="rgb(243,6,28)" fg:x="3687" fg:w="2"/><text x="99.6568%" y="1423.50"></text></g><g><title>rustls::msgs::deframer::buffers::DeframerVecBuffer::read (2 samples, 0.05%)</title><rect x="99.4608%" y="1429" width="0.0539%" height="15" fill="rgb(222,130,1)" fg:x="3689" fg:w="2"/><text x="99.7108%" y="1439.50"></text></g><g><title>rustls::msgs::deframer::buffers::DeframerVecBuffer::prepare_read (2 samples, 0.05%)</title><rect x="99.4608%" y="1413" width="0.0539%" height="15" fill="rgb(236,166,44)" fg:x="3689" fg:w="2"/><text x="99.7108%" y="1423.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::read (2 samples, 0.05%)</title><rect x="99.5147%" y="1429" width="0.0539%" height="15" fill="rgb(221,108,14)" fg:x="3691" fg:w="2"/><text x="99.7647%" y="1439.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.03%)</title><rect x="99.5686%" y="1429" width="0.0270%" height="15" fill="rgb(252,3,45)" fg:x="3693" fg:w="1"/><text x="99.8186%" y="1439.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="99.5956%" y="1429" width="0.0270%" height="15" fill="rgb(237,68,30)" fg:x="3694" fg:w="1"/><text x="99.8456%" y="1439.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2 samples, 0.05%)</title><rect x="99.6225%" y="1429" width="0.0539%" height="15" fill="rgb(211,79,22)" fg:x="3695" fg:w="2"/><text x="99.8725%" y="1439.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.03%)</title><rect x="99.6765%" y="1429" width="0.0270%" height="15" fill="rgb(252,185,21)" fg:x="3697" fg:w="1"/><text x="99.9265%" y="1439.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (1 samples, 0.03%)</title><rect x="99.6765%" y="1413" width="0.0270%" height="15" fill="rgb(225,189,26)" fg:x="3697" fg:w="1"/><text x="99.9265%" y="1423.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (1 samples, 0.03%)</title><rect x="99.6765%" y="1397" width="0.0270%" height="15" fill="rgb(241,30,40)" fg:x="3697" fg:w="1"/><text x="99.9265%" y="1407.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.03%)</title><rect x="99.6765%" y="1381" width="0.0270%" height="15" fill="rgb(235,215,44)" fg:x="3697" fg:w="1"/><text x="99.9265%" y="1391.50"></text></g><g><title>tokio::runtime::park::wake_by_ref (1 samples, 0.03%)</title><rect x="99.7034%" y="1429" width="0.0270%" height="15" fill="rgb(205,8,29)" fg:x="3698" fg:w="1"/><text x="99.9534%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1 samples, 0.03%)</title><rect x="99.7304%" y="1429" width="0.0270%" height="15" fill="rgb(241,137,42)" fg:x="3699" fg:w="1"/><text x="99.9804%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 0.05%)</title><rect x="99.7573%" y="1429" width="0.0539%" height="15" fill="rgb(237,155,2)" fg:x="3700" fg:w="2"/><text x="100.0073%" y="1439.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.03%)</title><rect x="99.7843%" y="1413" width="0.0270%" height="15" fill="rgb(245,29,42)" fg:x="3701" fg:w="1"/><text x="100.0343%" y="1423.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.03%)</title><rect x="99.7843%" y="1397" width="0.0270%" height="15" fill="rgb(234,101,35)" fg:x="3701" fg:w="1"/><text x="100.0343%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (1 samples, 0.03%)</title><rect x="99.7843%" y="1381" width="0.0270%" height="15" fill="rgb(228,64,37)" fg:x="3701" fg:w="1"/><text x="100.0343%" y="1391.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.03%)</title><rect x="99.7843%" y="1365" width="0.0270%" height="15" fill="rgb(217,214,36)" fg:x="3701" fg:w="1"/><text x="100.0343%" y="1375.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.03%)</title><rect x="99.7843%" y="1349" width="0.0270%" height="15" fill="rgb(243,70,3)" fg:x="3701" fg:w="1"/><text x="100.0343%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.05%)</title><rect x="99.8113%" y="1429" width="0.0539%" height="15" fill="rgb(253,158,52)" fg:x="3702" fg:w="2"/><text x="100.0613%" y="1439.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.05%)</title><rect x="99.8113%" y="1413" width="0.0539%" height="15" fill="rgb(234,111,54)" fg:x="3702" fg:w="2"/><text x="100.0613%" y="1423.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (2 samples, 0.05%)</title><rect x="99.8113%" y="1397" width="0.0539%" height="15" fill="rgb(217,70,32)" fg:x="3702" fg:w="2"/><text x="100.0613%" y="1407.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.03%)</title><rect x="99.8652%" y="1429" width="0.0270%" height="15" fill="rgb(234,18,33)" fg:x="3704" fg:w="1"/><text x="100.1152%" y="1439.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (2 samples, 0.05%)</title><rect x="99.8922%" y="1429" width="0.0539%" height="15" fill="rgb(234,12,49)" fg:x="3705" fg:w="2"/><text x="100.1422%" y="1439.50"></text></g><g><title>all (3,709 samples, 100%)</title><rect x="0.0000%" y="1461" width="100.0000%" height="15" fill="rgb(236,10,21)" fg:x="0" fg:w="3709"/><text x="0.2500%" y="1471.50"></text></g><g><title>tokio-runtime-w (1,755 samples, 47.32%)</title><rect x="52.6827%" y="1445" width="47.3173%" height="15" fill="rgb(248,182,45)" fg:x="1954" fg:w="1755"/><text x="52.9327%" y="1455.50">tokio-runtime-w</text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.05%)</title><rect x="99.9461%" y="1429" width="0.0539%" height="15" fill="rgb(217,95,36)" fg:x="3707" fg:w="2"/><text x="100.1961%" y="1439.50"></text></g></svg></svg>